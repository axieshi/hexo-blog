{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-aomori/source/dist/build.css","path":"dist/build.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/dist/build.js","path":"dist/build.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/dist/custom.css","path":"dist/custom.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/dist/custom.js","path":"dist/custom.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/javascripts/app.js","path":"javascripts/app.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/javascripts/class-module.js","path":"javascripts/class-module.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/javascripts/custom.js","path":"javascripts/custom.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/javascripts/disqusjs.js","path":"javascripts/disqusjs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/javascripts/gitalk.js","path":"javascripts/gitalk.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/javascripts/valine.js","path":"javascripts/valine.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/modules/algoliasearch-lite.umd.js","path":"modules/algoliasearch-lite.umd.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/modules/highlight.min.js","path":"modules/highlight.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/modules/lazyload.min.js","path":"modules/lazyload.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/modules/md5.min.js","path":"modules/md5.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/modules/nprogress.js","path":"modules/nprogress.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/modules/perfect-scrollbar.min.js","path":"modules/perfect-scrollbar.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/modules/plyr.js","path":"modules/plyr.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/modules/swiper-bundle.min.js","path":"modules/swiper-bundle.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/modules/tocbot.min.js","path":"modules/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/modules/typed.min.js","path":"modules/typed.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/base.scss","path":"stylesheets/base.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/github.css","path":"stylesheets/github.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/media-fixed.scss","path":"stylesheets/media-fixed.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/normalize.css","path":"stylesheets/normalize.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/nprogress.css","path":"stylesheets/nprogress.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/page.scss","path":"stylesheets/page.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/perfect-scrollbar.css","path":"stylesheets/perfect-scrollbar.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/plyr.css","path":"stylesheets/plyr.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/post.css","path":"stylesheets/post.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/remark42.css","path":"stylesheets/remark42.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/spectre-exp.min.css","path":"stylesheets/spectre-exp.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/spectre-icons.min.css","path":"stylesheets/spectre-icons.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/spectre.min.css","path":"stylesheets/spectre.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/style.scss","path":"stylesheets/style.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/swiper-bundle.min.css","path":"stylesheets/swiper-bundle.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aomori/source/stylesheets/tocbot.css","path":"stylesheets/tocbot.css","modified":1,"renderable":1},{"_id":"source/images/Git的使用与碰壁1.png","path":"images/Git的使用与碰壁1.png","modified":1,"renderable":0},{"_id":"source/images/OneDrive+宝塔面板搭建olaindex1.png","path":"images/OneDrive+宝塔面板搭建olaindex1.png","modified":1,"renderable":0},{"_id":"source/images/OneDrive+宝塔面板搭建olaindex2.png","path":"images/OneDrive+宝塔面板搭建olaindex2.png","modified":1,"renderable":0},{"_id":"source/images/OneDrive+宝塔面板搭建olaindex3.png","path":"images/OneDrive+宝塔面板搭建olaindex3.png","modified":1,"renderable":0},{"_id":"source/images/OneDrive+宝塔面板搭建olaindex4.png","path":"images/OneDrive+宝塔面板搭建olaindex4.png","modified":1,"renderable":0},{"_id":"source/images/RX580显卡bios降570黑果免驱1.png","path":"images/RX580显卡bios降570黑果免驱1.png","modified":1,"renderable":0},{"_id":"source/images/RX580显卡bios降570黑果免驱2.png","path":"images/RX580显卡bios降570黑果免驱2.png","modified":1,"renderable":0},{"_id":"source/images/RX580显卡bios降570黑果免驱3.png","path":"images/RX580显卡bios降570黑果免驱3.png","modified":1,"renderable":0},{"_id":"source/images/RX580显卡bios降570黑果免驱4.png","path":"images/RX580显卡bios降570黑果免驱4.png","modified":1,"renderable":0},{"_id":"source/images/卡iov进度,InitializingIOV卡住,ESXI许可证.png","path":"images/卡iov进度,InitializingIOV卡住,ESXI许可证.png","modified":1,"renderable":0},{"_id":"source/images/往与返之话有点多.png","path":"images/往与返之话有点多.png","modified":1,"renderable":0},{"_id":"source/images/搭建个人博客Docker+Nginx+Hexo1.png","path":"images/搭建个人博客Docker+Nginx+Hexo1.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇一1.png","path":"images/水电改造之篇一1.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇一2.png","path":"images/水电改造之篇一2.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇一3.png","path":"images/水电改造之篇一3.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇一4.png","path":"images/水电改造之篇一4.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇一5.png","path":"images/水电改造之篇一5.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇二.gif","path":"images/水电改造之篇二.gif","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇二0.png","path":"images/水电改造之篇二0.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇二1.png","path":"images/水电改造之篇二1.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇二2.png","path":"images/水电改造之篇二2.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇二3-4.png","path":"images/水电改造之篇二3-4.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇二3.png","path":"images/水电改造之篇二3.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇二4.png","path":"images/水电改造之篇二4.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇二5.png","path":"images/水电改造之篇二5.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇二6.png","path":"images/水电改造之篇二6.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇二7.png","path":"images/水电改造之篇二7.png","modified":1,"renderable":0},{"_id":"source/images/水电改造之篇二8.png","path":"images/水电改造之篇二8.png","modified":1,"renderable":0},{"_id":"source/images/笔记本无线网卡修改MAC1.png","path":"images/笔记本无线网卡修改MAC1.png","modified":1,"renderable":0},{"_id":"source/images/笔记本无线网卡修改MAC2.png","path":"images/笔记本无线网卡修改MAC2.png","modified":1,"renderable":0},{"_id":"source/images/笔记本无线网卡修改MAC3.png","path":"images/笔记本无线网卡修改MAC3.png","modified":1,"renderable":0},{"_id":"source/images/笔记本无线网卡修改MAC4.png","path":"images/笔记本无线网卡修改MAC4.png","modified":1,"renderable":0},{"_id":"source/images/笔记本无线网卡修改MAC5.png","path":"images/笔记本无线网卡修改MAC5.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/ESXI提示：失败_–_“scsi00”的磁盘类型_2_不受支持或无效。请确保磁盘已导入.md","hash":"0748c7d4ae51b52d7414cb4362a778eca7f4587e","modified":1650057336677},{"_id":"source/_posts/Git的使用与碰壁.md","hash":"405a9d4594a0163b6f5506492e706d4ecfb09efe","modified":1650133697000},{"_id":"source/_posts/OneDrive+宝塔面板搭建olaindex.md","hash":"8cbbdf631f558e942478446c8a2a7243b090fb29","modified":1650057336677},{"_id":"source/_posts/RX580显卡bios降570黑果免驱.md","hash":"4e0c33efcf8dec34d090637be9d4d33a72e8c30d","modified":1650057336677},{"_id":"source/_posts/StringBuffer的认识.md","hash":"4d8e6989a150655e90eb5f624271e0cb07b26845","modified":1649964770000},{"_id":"source/_posts/extends继承.md","hash":"047af41e37d298aa57daca82cf8350981eabaa42","modified":1649964801000},{"_id":"source/_posts/卡iov进度,Initializing_IOV卡住，ESXI许可证.md","hash":"421008a0f7bc32d5f435b91e2d0dcdb3e83ca208","modified":1650057336677},{"_id":"source/_posts/多态.md","hash":"93aed7b78018b2e65f3f68f9006dca0f60c0bef7","modified":1649964871000},{"_id":"source/_posts/小记小提示.md","hash":"c337a70834cba79d4782d6d915260dedacc3a1bd","modified":1649964827000},{"_id":"source/_posts/往与返之话有点多.md","hash":"da7fe1391f0de820a89c90ad382a8b8b84741dc2","modified":1650057336677},{"_id":"source/_posts/搭建个人博客Docker+Nginx+Hexo.md","hash":"53db0e4351f979657cd76f1c86e67ecda96b8163","modified":1650121458917},{"_id":"source/_posts/数组_内存分配及栈和堆的区别.md","hash":"85df28393a79e9b97c7bdb710b97ce0a82ee2d20","modified":1649965583000},{"_id":"source/_posts/方法重写、重载.md","hash":"b8f7095e3939831f3d7acf5787664c3aa01caa5d","modified":1649965579000},{"_id":"source/_posts/水电改造之篇一.md","hash":"d9c15b70662d45d5ddf2623638ffd6c9cecbf0d9","modified":1650057336677},{"_id":"source/_posts/水电改造之篇二.md","hash":"f9f07f1dfd5da7c9f8291d956602c107110d021b","modified":1650122759237},{"_id":"source/_posts/笔记本无线网卡修改MAC.md","hash":"543ad9fd9e7d93f55319fa89ec7e0c7f67d41ce1","modified":1650057336677},{"_id":"source/_posts/路由器刷机备份分区命令.md","hash":"468b0d9e1819bc42671351ba0f628464d167587e","modified":1650057336677},{"_id":"source/_posts/默认开启USB调试模式、未知源、GPS、重力感应开关.md","hash":"33803da0a5792b968272e05503523a8952c64dc2","modified":1650057336677},{"_id":"source/categories/学习笔记.md","hash":"e0ba14401e4933953d934f2dc888c24740786746","modified":1649963913966},{"_id":"source/categories/日常捣鼓.md","hash":"465c3ecb27a404b56a5e7a626afa58becbdb9bab","modified":1649963433034},{"_id":"source/categories/点滴生活.md","hash":"87367ec4087124c4524000be48a594ad15bedebd","modified":1649961657603},{"_id":"source/categories/百思其解.md","hash":"b7153be192344831271cf95c32ce21747de8e294","modified":1649964132134},{"_id":"source/images/OneDrive+宝塔面板搭建olaindex1.png","hash":"92a5af824f099130d93dbb27580a505f44ec3e2f","modified":1650002812000},{"_id":"source/images/OneDrive+宝塔面板搭建olaindex2.png","hash":"07be100a0e25fd5b24e246d44fd9347423ac3ab8","modified":1650003962000},{"_id":"source/images/OneDrive+宝塔面板搭建olaindex3.png","hash":"aad5a5093f7313dcaa367c446f472978e0adabf3","modified":1650002849000},{"_id":"source/images/OneDrive+宝塔面板搭建olaindex4.png","hash":"1a9b523846fc2215d9c6dfea772ded20c72d9f1a","modified":1650002859000},{"_id":"source/images/RX580显卡bios降570黑果免驱1.png","hash":"8554b563ae3062f50b9f757f4c2814ff77291a35","modified":1650002709000},{"_id":"source/images/水电改造之篇二0.png","hash":"2ef5e357e89dc61c7a232ed253de6e4634ce7428","modified":1650001420000},{"_id":"source/images/水电改造之篇二8.png","hash":"5510862cd4c4665e9f1b31cbb138b4fcb83cbad4","modified":1650001002000},{"_id":"source/images/笔记本无线网卡修改MAC1.png","hash":"75b90af247d3ac5e00f5c0e3dca478ff9e1e1957","modified":1649941174000},{"_id":"source/images/笔记本无线网卡修改MAC5.png","hash":"d2abf9eeebdc6aae03a57b9c346a7844eee2f081","modified":1649941153000},{"_id":"source/images/RX580显卡bios降570黑果免驱3.png","hash":"91c15e61f36b5522127ab386e1ac9db6af53c180","modified":1650002736000},{"_id":"source/images/RX580显卡bios降570黑果免驱4.png","hash":"d5d925664c6e6ca181ef5c02aa83493ef4ce22bc","modified":1650002749000},{"_id":"source/images/水电改造之篇一3.png","hash":"cac10dc4ae1886b9b708f36ca75f329e87de42fd","modified":1649999792000},{"_id":"source/images/水电改造之篇二1.png","hash":"31c08104eda6e836268d01901c9415137287766a","modified":1650000904000},{"_id":"source/images/水电改造之篇二3-4.png","hash":"a5e79e71ba7b58451608c26c9663c9d4d289b88a","modified":1650001403000},{"_id":"source/images/水电改造之篇二4.png","hash":"a5e79e71ba7b58451608c26c9663c9d4d289b88a","modified":1650000957000},{"_id":"source/images/笔记本无线网卡修改MAC2.png","hash":"6bb8c5d09b06d23aad8ebe6ed8b5018ff44b490c","modified":1649941009000},{"_id":"source/images/笔记本无线网卡修改MAC3.png","hash":"a370f59379631fe959801f0e6714ee323baf8cc5","modified":1649941134000},{"_id":"source/images/往与返之话有点多.png","hash":"d2832f8b78b379a8fc73603669f7fa5e1af9ca93","modified":1650000614000},{"_id":"source/images/水电改造之篇一1.png","hash":"ae8198f516447e228ab10a6680c773557ba80d49","modified":1649999725000},{"_id":"source/images/水电改造之篇一4.png","hash":"6ab7ff44db5cc61cdc17f6a9c2023251987423db","modified":1649999802000},{"_id":"source/images/水电改造之篇二3.png","hash":"f485c3e1e06d43309e98d4f9463d4749fd215148","modified":1650000950000},{"_id":"source/images/Git的使用与碰壁1.png","hash":"e24474570d31bacb884575c8283337654dcc6042","modified":1650132945305},{"_id":"source/images/RX580显卡bios降570黑果免驱2.png","hash":"ffe01365332a2b868886fb9d6e3bfbf909332e78","modified":1650002724000},{"_id":"source/images/水电改造之篇一2.png","hash":"12f9fb60359dfc86dbf12cc4e986d33d93dbaa39","modified":1649999778000},{"_id":"source/images/笔记本无线网卡修改MAC4.png","hash":"3a454b4cb4a690e6d2b1e52c5a32ed9747f402ae","modified":1649941140000},{"_id":"source/images/水电改造之篇二7.png","hash":"2147aea66181a93373e63d2c063e2b3847234ff8","modified":1650000992000},{"_id":"source/images/水电改造之篇一5.png","hash":"cd7e2cbb1b007029bbe41f300d076ae35006d3c9","modified":1649999822000},{"_id":"themes/hexo-theme-aomori/CHANGELOG.md","hash":"cf258de89a3a4e39d7f317814d862e4041234fc6","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/LICENSE","hash":"df86e662005fc659cb72166664f8360223c10864","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/README.md","hash":"9284588f3d73b808fef81ae9eb1544658ee036e0","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/_config.yml","hash":"fe1e0e6ac0fe48e44d085f215a0d45c0e9c15ee9","modified":1650170268239},{"_id":"themes/hexo-theme-aomori/gulpfile.js","hash":"1af68888505563e7f2ce9f55b3d8fac8f5851a40","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/package.json","hash":"836567428b364adc034562031872ff94f7f10222","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/stylelint.config.js","hash":"35805e8a64447c3e9fec8cb7ca619783b4ffa4af","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/languages/cn.yml","hash":"b9acdae1a575c050a0e63046456b62ec579811a9","modified":1650014176667},{"_id":"themes/hexo-theme-aomori/languages/it.yml","hash":"64a5acadfdcd365474ba1161041f8c5938f59683","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/languages/ja.yml","hash":"377f95daca7054031d42c43cf4417adffbb9c8d0","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/index.ejs","hash":"ca9a6b1e5d2d952757671637156c5d72e6a0cb13","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/layout.ejs","hash":"c5dd66db0cea3796abda36146ab38f061c91f39e","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/page.ejs","hash":"5e77fecc752e7baa7ce5ac57162980202160811d","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/post.ejs","hash":"f80a3073ea72631a26292ba16906b6d692a6e67c","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/archive-post.ejs","hash":"74371ea0ece20630f686459a3df334b760c6bc55","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/archive.ejs","hash":"f15750967beb06d91491aade0b4b00cb76a37dc9","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/article-index.ejs","hash":"8137c8905844c74e67dc3ec1e52b211e0c470012","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/article-tweet.ejs","hash":"4b4e1b9d3cb302b837ed69e7a1cf64705050ff45","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/article.ejs","hash":"80c7309957725a74f9f55e8147db101ac8b8b5e6","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/footer.ejs","hash":"3a3a09baeb745b0f33e4299e3a568b26d36e556a","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/head.ejs","hash":"b4fe8c26c41ecb03e666ef9fa45aae43c420bd38","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/header.ejs","hash":"29618017302e56fcb0bcc3a6487bacf6cb668086","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/meta.ejs","hash":"c8c71be685e412afbd8e9b25262e22f483f5e729","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/search.ejs","hash":"3c0fe3c17d6469af32720653613af7b1ec1903cf","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/sidebar.ejs","hash":"0f049afead13cf54b5e2f3174379d7a79eac0efe","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/social.ejs","hash":"d3d003a7fb0a4e5a5bc26378351fd693fce982d3","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_widget/archive.ejs","hash":"4d00993c9f80ddbce6d4b8317d4c29a4fb1fb139","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_widget/category.ejs","hash":"70bba3e81f42135ffeb2d129834fd5df8aea4c10","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_widget/recent_posts.ejs","hash":"d45e8c7b9c7fec1b8fdeabaa5026f27da0a04304","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_widget/tag.ejs","hash":"e45f32b6c1b3a23c361d2c7dc70207d93c0f71b1","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_widget/toc.ejs","hash":"05a8cea96817332d13bf3ede759e6f72ed0f7973","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/dist/custom.css","hash":"309f9480fa4381d5e3892ef9c3fff79680b056df","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/javascripts/app.js","hash":"d6a5de54f31f4e225f7d086f220aacc993accfd5","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/javascripts/class-module.js","hash":"a771801e8e5528130a947958f605f9fc4c6d913d","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/javascripts/custom.js","hash":"b186b1ae8921a3bf4d8746ac5f39acc10269ff96","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/javascripts/disqusjs.js","hash":"1152117cee4e335306b79983573721aeb6418d39","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/javascripts/gitalk.js","hash":"b2b847d6a4b8866f1a21896ab34b94adc607c6b4","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/javascripts/valine.js","hash":"64a97abf6fb7291bccda74f108b5661a9694ebef","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/modules/algoliasearch-lite.umd.js","hash":"bcd46b678c70779298df8ffad570ab14e434d292","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/modules/lazyload.min.js","hash":"e7efa869cd842c2becc8337dd9cc445cd0fa5000","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/modules/md5.min.js","hash":"ab074f76aa161e2851e19733d802a66c9a242387","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/modules/nprogress.js","hash":"14757ab1fcf209a4f17c9da3d6abb196fa65cba2","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/modules/perfect-scrollbar.min.js","hash":"cd1784e029249ebf5d57de1f677a4a61019706ae","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/modules/tocbot.min.js","hash":"76cd7f7ae727d3883d69a04a4402a46684e4d4d0","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/modules/typed.min.js","hash":"ad8a75bd4743122b5dbf517221506607588ec50b","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/base.scss","hash":"a26efbbdcf15e8d6e3c044e733294fc6e8bedc77","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/github.css","hash":"ee593952684a791317ee8b77ad096e729dec649e","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/media-fixed.scss","hash":"4b0ff31517a8a3106cf227d85ec305b346cfa69b","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/normalize.css","hash":"ebe0759bf259b6caeadee6137973481046ac5636","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/nprogress.css","hash":"af66636e02bccfe2fdf7c1ad7de1face9bf5ae2d","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/page.scss","hash":"57c6874a0520cb31f2295e5d75c8dabde066b478","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/perfect-scrollbar.css","hash":"a94e730430930b2e048352996ff44bf28647669d","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/plyr.css","hash":"89c8e024bad75eec921898cae702785d77272dda","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/post.css","hash":"3f06ce944c9f721cdb5ea26c96fa11f9c2f6ec2f","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/remark42.css","hash":"b12749bacee85f203fcd10afd9212838ffef06f3","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/spectre-exp.min.css","hash":"9ca686024f1e3c742a488156e8fcf4f7f5518425","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/spectre-icons.min.css","hash":"0f624fe521e0eb6c1f775f13eb0fb93ab6cf802c","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/spectre.min.css","hash":"419c87aed0f592239f2adcbb6396731c6a7711cc","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/style.scss","hash":"c5649710386d149f7a29907d50d1cf09480be5a1","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/swiper-bundle.min.css","hash":"a1fd2a708504af70216469cbd582cf698db8e461","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/stylesheets/tocbot.css","hash":"635010b494dae3d91d3be1b079b72b26ab2cc5b8","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/page/default.ejs","hash":"23e0039aeba6413b99319fad4cea4e225aab38a1","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/page/friends.ejs","hash":"514e137c0e19e06dd3e930a98e5569cf83446b0a","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/page/photography-item.ejs","hash":"e118a08496bb889d519995b0a35a659e8f39858f","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/page/photography.ejs","hash":"6a71806820a4d92082d307a0e4dc67976d4038c4","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/post/ad.ejs","hash":"0a8130bcec7879f830976858b8d0dfe0ba036c01","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/post/comments.ejs","hash":"1502b23d5520b5db6c31c8036187f5373b4eb794","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/post/copyright.ejs","hash":"4f1f566351a2ddff3f44f854a58f65ba6b28072c","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/post/date.ejs","hash":"c610dc1283e5d6ae582b9544ee6836e9fcea1b7c","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/post/gallery.ejs","hash":"4502ca02780f3054cfaa517c9946d8c0479966cb","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/post/nav.ejs","hash":"d86028403ef9a098747712dc3103ed69c5089daa","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/post/refer.ejs","hash":"bb757d495f6928c6d41c11dace1c549c91fd95b7","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/post/reprint.ejs","hash":"75e9c766d19cb0907214e5628e00868b2adb6dcb","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1646451538000},{"_id":"source/images/卡iov进度,InitializingIOV卡住,ESXI许可证.png","hash":"35cca840062981499e1286f1e828bb2fdaf5a6ba","modified":1649942032000},{"_id":"source/images/水电改造之篇二2.png","hash":"3ef4149f0e0af49ce9d7baf1517a9c70762603e0","modified":1650000939000},{"_id":"themes/hexo-theme-aomori/source/modules/highlight.min.js","hash":"5c25af3caf3f02695741a4b989fedcca6cc1e88d","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/modules/plyr.js","hash":"6bce9267aa6e64f77973f7079cea430d88befca1","modified":1646451538000},{"_id":"source/images/搭建个人博客Docker+Nginx+Hexo1.png","hash":"dacab631a2ccb0ac655036dcb719f0a5b131d55f","modified":1650051123000},{"_id":"themes/hexo-theme-aomori/docs/cover.png","hash":"f52354acc7e9e52efcafc2c33e41a4907c541055","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/dist/build.css","hash":"b3be1f325c7f8e1eb2a8b470285d4fe9e1a9e95e","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/dist/custom.js","hash":"7dd03842bb905d065a41366ce88bde7a1da5808d","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/modules/swiper-bundle.min.js","hash":"72bd612182b6c475aa3d896231341a87da680ecb","modified":1646451538000},{"_id":"themes/hexo-theme-aomori/source/dist/build.js","hash":"f359132db8fdf12f4d9220cd42ce718c466d0d04","modified":1646451538000},{"_id":"source/images/水电改造之篇二6.png","hash":"b2d7c6a7ecedd0345d28f60b1cfdb55f4a6f75c7","modified":1650000986000},{"_id":"source/images/水电改造之篇二5.png","hash":"e169a9c479bbe46152b955cad672ff6a39026505","modified":1650000978000},{"_id":"source/images/水电改造之篇二.gif","hash":"ecc49a4b2dddf726bd5596885d235d8b77faad17","modified":1650001169000},{"_id":"public/categories/学习笔记.html","hash":"96f76f35073956eac1b6728042e076a841db0906","modified":1650174403616},{"_id":"public/categories/日常捣鼓.html","hash":"cba670e63735226a84519ff12367f5e13b547d08","modified":1650174403616},{"_id":"public/categories/点滴生活.html","hash":"38d2373c4d280f74598d9fff55905f9cacb53929","modified":1650174403616},{"_id":"public/categories/百思其解.html","hash":"d3d37d10b324b2f42119555b631857add74f5974","modified":1650174403616},{"_id":"public/2019/10/18/路由器刷机备份分区命令/index.html","hash":"9ac16f5dce33557ad398aa0a9178d989db7bdcd7","modified":1650174403616},{"_id":"public/2019/05/10/卡iov进度,Initializing_IOV卡住，ESXI许可证/index.html","hash":"9ef5555dd13105e75c1b9e3ce6ddfe425efaa4bf","modified":1650174403616},{"_id":"public/2018/11/25/多态/index.html","hash":"980cc33fd6904194c312f64d5dc7dc51e8ebbda4","modified":1650174403616},{"_id":"public/2018/11/25/方法重写、重载/index.html","hash":"2bb384bf6d35d69191f21c54a799f955314e5aef","modified":1650174403616},{"_id":"public/2018/11/24/数组_内存分配及栈和堆的区别/index.html","hash":"b567a4e5be9fa3d1fcbcc22c173d8461ee119b0f","modified":1650174403616},{"_id":"public/2018/11/24/小记小提示/index.html","hash":"36cf1a446cd2b69ab13ccbc743311cbc029ea674","modified":1650174403616},{"_id":"public/2018/11/23/extends继承/index.html","hash":"5ddf479d809a092c7116f70ed96265bbb6e264a3","modified":1650174403616},{"_id":"public/2018/11/23/StringBuffer的认识/index.html","hash":"85a0828efca288daef93496dae406ad66ab118d0","modified":1650174403616},{"_id":"public/2018/11/22/默认开启USB调试模式、未知源、GPS、重力感应开关/index.html","hash":"470a0ffdc8f007b28e51bd9ffd38a900a078154c","modified":1650174403616},{"_id":"public/archives/index.html","hash":"d3bdf510c6ee473766f13862cda699295cf1f187","modified":1650174403616},{"_id":"public/archives/page/2/index.html","hash":"faaae060ff533fa4e73c0669090e6f44768d84a7","modified":1650174403616},{"_id":"public/archives/page/3/index.html","hash":"cf6df7ac8ed712970829a18fcfcb291cadc9d1a1","modified":1650174403616},{"_id":"public/archives/page/4/index.html","hash":"c89b4768da5a7b2ca1b47d6b318ae56bcf46f6a5","modified":1650174403616},{"_id":"public/archives/page/5/index.html","hash":"cf8f449658045c05f3a3491b553ff4d24cac1131","modified":1650174403616},{"_id":"public/archives/page/6/index.html","hash":"3b58560bd46a6a0421a2c8359569aaae18034fbc","modified":1650174403616},{"_id":"public/archives/2018/index.html","hash":"5934bef40b3c0b61b5370cb287290a430619f138","modified":1650174403616},{"_id":"public/archives/2018/page/2/index.html","hash":"9d7886020ca5a6724692959c59f471bcc8759a99","modified":1650174403616},{"_id":"public/archives/2018/page/3/index.html","hash":"1dae9dbb223e714f8ebd3196597762eef1002822","modified":1650174403616},{"_id":"public/archives/2018/07/index.html","hash":"e162b1b81029e5e3662782fcba97b1b38b49c326","modified":1650174403616},{"_id":"public/archives/2018/11/index.html","hash":"b1557200e221b71d07821b362d31373b4d41145e","modified":1650174403616},{"_id":"public/archives/2018/11/page/2/index.html","hash":"8639f3bcc6bc00b2d8c3c75498f964eb2b744a9c","modified":1650174403616},{"_id":"public/archives/2018/11/page/3/index.html","hash":"83a723a585709415d5f969ac5f05fe02a35f198b","modified":1650174403616},{"_id":"public/archives/2019/index.html","hash":"3b79ce38ea9741a2c247c89678ffc90067161f2a","modified":1650174403616},{"_id":"public/archives/2019/page/2/index.html","hash":"bb92a0b2d137d39be9aa354b4805ea7229b638d5","modified":1650174403616},{"_id":"public/archives/2019/04/index.html","hash":"229b6304316bf2ab2ed818d9ea10f1a682a1d41b","modified":1650174403616},{"_id":"public/archives/2019/05/index.html","hash":"8f501d9e9c3d50fc1c3f4c0374ab1cc452d62241","modified":1650174403616},{"_id":"public/archives/2019/10/index.html","hash":"99ff64e75adcb9a6fc28cbd42a94a1c53a790863","modified":1650174403616},{"_id":"public/archives/2020/index.html","hash":"eaa809eb59131ee12bc164b09e986e40ddd87f50","modified":1650174403616},{"_id":"public/archives/2020/07/index.html","hash":"383aefb50eeb535652b5664a90ab3a7a433ba1ea","modified":1650174403616},{"_id":"public/archives/2020/10/index.html","hash":"f925db10762c2abd1aa5fa3b79b18b553e374f69","modified":1650174403616},{"_id":"public/archives/2021/index.html","hash":"28716f5143fba2890be4bea241820f1c51b38636","modified":1650174403616},{"_id":"public/archives/2021/02/index.html","hash":"72db9703d088e088d18dc8ea589bb8b4bfbec44b","modified":1650174403616},{"_id":"public/archives/2022/index.html","hash":"e284f0bd671168469b57983e7c32bb925fb52ba1","modified":1650174403616},{"_id":"public/archives/2022/01/index.html","hash":"25918d1fa3c6afe1a0ca9df7950247c36821c5eb","modified":1650174403616},{"_id":"public/archives/2022/02/index.html","hash":"3e5090cc037e85435eda73cefdefbabcb1d84fbd","modified":1650174403616},{"_id":"public/archives/2022/03/index.html","hash":"89f97ce803d3436fe8c9b5828a7755db2d1fd6fd","modified":1650174403616},{"_id":"public/categories/百思其解/index.html","hash":"dc151c1774ca027666c5fa4875912e62e679330c","modified":1650174403616},{"_id":"public/categories/日常捣鼓/index.html","hash":"753766a45c78377a22f5a37debeb12121a5d63c2","modified":1650174403616},{"_id":"public/categories/日常捣鼓/page/2/index.html","hash":"1eac2a915a9611e5f1cdc1044c34c96e0d3e055e","modified":1650174403616},{"_id":"public/categories/日常捣鼓/page/3/index.html","hash":"b34d30243e9dcc7f17c7f0271abb1400ecb2a159","modified":1650174403616},{"_id":"public/categories/学习笔记/index.html","hash":"54f5ef6eaa67ee2de10b20ac759efb964044adc3","modified":1650174403616},{"_id":"public/categories/学习笔记/page/2/index.html","hash":"014bd1c95ac706a953b751cd95275d2a07425dc7","modified":1650174403616},{"_id":"public/categories/点滴生活/index.html","hash":"d9c987eccde0f01c4efc156a3e486e34079afb0d","modified":1650174403616},{"_id":"public/page/2/index.html","hash":"6c70fa49e7d6061fb5801bf452359c709d7dab47","modified":1650174403616},{"_id":"public/page/4/index.html","hash":"0c7f0ab60387393a525bd13c40edbaffe5004214","modified":1650174403616},{"_id":"public/2022/03/15/搭建个人博客Docker+Nginx+Hexo/index.html","hash":"643f662b926ac4c253ec0d3ce76a00ae70dd6075","modified":1650174403616},{"_id":"public/2022/02/10/Git的使用与碰壁/index.html","hash":"207fa88d54c596b772d189ce746d66f046807a66","modified":1650174403616},{"_id":"public/2022/01/31/水电改造之篇二/index.html","hash":"594ddaa92af7da6d0854683cbaaabae47fc87940","modified":1650174403616},{"_id":"public/2021/02/08/笔记本无线网卡修改MAC/index.html","hash":"71468e68ec012384caaea3c5a51bb8b1b47d4085","modified":1650174403616},{"_id":"public/2020/10/18/往与返之话有点多/index.html","hash":"f096e9f2b32279ad44283b144cdb90d4a918b821","modified":1650174403616},{"_id":"public/2020/07/20/水电改造之篇一/index.html","hash":"cbe49a969639624312cd117117dc4e1a044b42fd","modified":1650174403616},{"_id":"public/2019/05/10/ESXI提示：失败_–_“scsi00”的磁盘类型_2_不受支持或无效。请确保磁盘已导入/index.html","hash":"1e30de27746c59780262eafc43ea0511e82d8892","modified":1650174403616},{"_id":"public/2019/04/14/RX580显卡bios降570黑果免驱/index.html","hash":"1ca579a6f8f83ea72bfcb8668427b5835d753983","modified":1650174403616},{"_id":"public/2018/07/12/OneDrive+宝塔面板搭建olaindex/index.html","hash":"3630ab917645fc8b546dd4cfdcc75ac3d2e9e12c","modified":1650174403616},{"_id":"public/index.html","hash":"8b238df346b8045a0b6bbd02e1116ea2a4b69f59","modified":1650174403616},{"_id":"public/page/3/index.html","hash":"bd3645bfa89052842b1ab37e11da91a69786e930","modified":1650174403616},{"_id":"public/stylesheets/base.scss","hash":"a26efbbdcf15e8d6e3c044e733294fc6e8bedc77","modified":1650174403616},{"_id":"public/stylesheets/page.scss","hash":"57c6874a0520cb31f2295e5d75c8dabde066b478","modified":1650174403616},{"_id":"public/stylesheets/media-fixed.scss","hash":"4b0ff31517a8a3106cf227d85ec305b346cfa69b","modified":1650174403616},{"_id":"public/images/OneDrive+宝塔面板搭建olaindex1.png","hash":"92a5af824f099130d93dbb27580a505f44ec3e2f","modified":1650174403616},{"_id":"public/images/OneDrive+宝塔面板搭建olaindex3.png","hash":"aad5a5093f7313dcaa367c446f472978e0adabf3","modified":1650174403616},{"_id":"public/stylesheets/style.scss","hash":"c5649710386d149f7a29907d50d1cf09480be5a1","modified":1650174403616},{"_id":"public/images/OneDrive+宝塔面板搭建olaindex2.png","hash":"07be100a0e25fd5b24e246d44fd9347423ac3ab8","modified":1650174403616},{"_id":"public/images/OneDrive+宝塔面板搭建olaindex4.png","hash":"1a9b523846fc2215d9c6dfea772ded20c72d9f1a","modified":1650174403616},{"_id":"public/images/RX580显卡bios降570黑果免驱1.png","hash":"8554b563ae3062f50b9f757f4c2814ff77291a35","modified":1650174403616},{"_id":"public/images/水电改造之篇二0.png","hash":"2ef5e357e89dc61c7a232ed253de6e4634ce7428","modified":1650174403616},{"_id":"public/images/水电改造之篇二8.png","hash":"5510862cd4c4665e9f1b31cbb138b4fcb83cbad4","modified":1650174403616},{"_id":"public/images/笔记本无线网卡修改MAC1.png","hash":"75b90af247d3ac5e00f5c0e3dca478ff9e1e1957","modified":1650174403616},{"_id":"public/images/笔记本无线网卡修改MAC5.png","hash":"d2abf9eeebdc6aae03a57b9c346a7844eee2f081","modified":1650174403616},{"_id":"public/images/RX580显卡bios降570黑果免驱3.png","hash":"91c15e61f36b5522127ab386e1ac9db6af53c180","modified":1650174403616},{"_id":"public/images/RX580显卡bios降570黑果免驱4.png","hash":"d5d925664c6e6ca181ef5c02aa83493ef4ce22bc","modified":1650174403616},{"_id":"public/images/水电改造之篇一3.png","hash":"cac10dc4ae1886b9b708f36ca75f329e87de42fd","modified":1650174403616},{"_id":"public/images/水电改造之篇二1.png","hash":"31c08104eda6e836268d01901c9415137287766a","modified":1650174403616},{"_id":"public/images/水电改造之篇二3-4.png","hash":"a5e79e71ba7b58451608c26c9663c9d4d289b88a","modified":1650174403616},{"_id":"public/images/水电改造之篇二4.png","hash":"a5e79e71ba7b58451608c26c9663c9d4d289b88a","modified":1650174403616},{"_id":"public/images/笔记本无线网卡修改MAC2.png","hash":"6bb8c5d09b06d23aad8ebe6ed8b5018ff44b490c","modified":1650174403616},{"_id":"public/images/笔记本无线网卡修改MAC3.png","hash":"a370f59379631fe959801f0e6714ee323baf8cc5","modified":1650174403616},{"_id":"public/javascripts/app.js","hash":"d6a5de54f31f4e225f7d086f220aacc993accfd5","modified":1650174403616},{"_id":"public/javascripts/class-module.js","hash":"a771801e8e5528130a947958f605f9fc4c6d913d","modified":1650174403616},{"_id":"public/javascripts/custom.js","hash":"b186b1ae8921a3bf4d8746ac5f39acc10269ff96","modified":1650174403616},{"_id":"public/javascripts/disqusjs.js","hash":"1152117cee4e335306b79983573721aeb6418d39","modified":1650174403616},{"_id":"public/javascripts/gitalk.js","hash":"b2b847d6a4b8866f1a21896ab34b94adc607c6b4","modified":1650174403616},{"_id":"public/javascripts/valine.js","hash":"64a97abf6fb7291bccda74f108b5661a9694ebef","modified":1650174403616},{"_id":"public/modules/algoliasearch-lite.umd.js","hash":"bcd46b678c70779298df8ffad570ab14e434d292","modified":1650174403616},{"_id":"public/modules/lazyload.min.js","hash":"a9b706094ef95a2f4ce0ec6eef0181951c5a7208","modified":1650174403616},{"_id":"public/modules/md5.min.js","hash":"ab074f76aa161e2851e19733d802a66c9a242387","modified":1650174403616},{"_id":"public/modules/nprogress.js","hash":"14757ab1fcf209a4f17c9da3d6abb196fa65cba2","modified":1650174403616},{"_id":"public/modules/tocbot.min.js","hash":"76cd7f7ae727d3883d69a04a4402a46684e4d4d0","modified":1650174403616},{"_id":"public/modules/typed.min.js","hash":"ad8a75bd4743122b5dbf517221506607588ec50b","modified":1650174403616},{"_id":"public/stylesheets/github.css","hash":"ee593952684a791317ee8b77ad096e729dec649e","modified":1650174403616},{"_id":"public/stylesheets/normalize.css","hash":"ebe0759bf259b6caeadee6137973481046ac5636","modified":1650174403616},{"_id":"public/stylesheets/nprogress.css","hash":"af66636e02bccfe2fdf7c1ad7de1face9bf5ae2d","modified":1650174403616},{"_id":"public/stylesheets/perfect-scrollbar.css","hash":"a94e730430930b2e048352996ff44bf28647669d","modified":1650174403616},{"_id":"public/stylesheets/post.css","hash":"3f06ce944c9f721cdb5ea26c96fa11f9c2f6ec2f","modified":1650174403616},{"_id":"public/stylesheets/remark42.css","hash":"b12749bacee85f203fcd10afd9212838ffef06f3","modified":1650174403616},{"_id":"public/stylesheets/spectre-icons.min.css","hash":"0f624fe521e0eb6c1f775f13eb0fb93ab6cf802c","modified":1650174403616},{"_id":"public/stylesheets/swiper-bundle.min.css","hash":"a1fd2a708504af70216469cbd582cf698db8e461","modified":1650174403616},{"_id":"public/stylesheets/tocbot.css","hash":"635010b494dae3d91d3be1b079b72b26ab2cc5b8","modified":1650174403616},{"_id":"public/dist/build.css","hash":"b3be1f325c7f8e1eb2a8b470285d4fe9e1a9e95e","modified":1650174403616},{"_id":"public/dist/custom.css","hash":"309f9480fa4381d5e3892ef9c3fff79680b056df","modified":1650174403616},{"_id":"public/dist/custom.js","hash":"7dd03842bb905d065a41366ce88bde7a1da5808d","modified":1650174403616},{"_id":"public/dist/build.js","hash":"a36f7dc0df1c252b2f407ceed1bb2bd6f31ba2ce","modified":1650174403616},{"_id":"public/modules/highlight.min.js","hash":"5c25af3caf3f02695741a4b989fedcca6cc1e88d","modified":1650174403616},{"_id":"public/modules/perfect-scrollbar.min.js","hash":"cd1784e029249ebf5d57de1f677a4a61019706ae","modified":1650174403616},{"_id":"public/modules/plyr.js","hash":"6bce9267aa6e64f77973f7079cea430d88befca1","modified":1650174403616},{"_id":"public/modules/swiper-bundle.min.js","hash":"72bd612182b6c475aa3d896231341a87da680ecb","modified":1650174403616},{"_id":"public/stylesheets/plyr.css","hash":"89c8e024bad75eec921898cae702785d77272dda","modified":1650174403616},{"_id":"public/stylesheets/spectre-exp.min.css","hash":"9ca686024f1e3c742a488156e8fcf4f7f5518425","modified":1650174403616},{"_id":"public/stylesheets/spectre.min.css","hash":"419c87aed0f592239f2adcbb6396731c6a7711cc","modified":1650174403616},{"_id":"public/images/往与返之话有点多.png","hash":"d2832f8b78b379a8fc73603669f7fa5e1af9ca93","modified":1650174403616},{"_id":"public/images/水电改造之篇一1.png","hash":"ae8198f516447e228ab10a6680c773557ba80d49","modified":1650174403616},{"_id":"public/images/水电改造之篇一4.png","hash":"6ab7ff44db5cc61cdc17f6a9c2023251987423db","modified":1650174403616},{"_id":"public/images/水电改造之篇二3.png","hash":"f485c3e1e06d43309e98d4f9463d4749fd215148","modified":1650174403616},{"_id":"public/images/Git的使用与碰壁1.png","hash":"e24474570d31bacb884575c8283337654dcc6042","modified":1650174403616},{"_id":"public/images/RX580显卡bios降570黑果免驱2.png","hash":"ffe01365332a2b868886fb9d6e3bfbf909332e78","modified":1650174403616},{"_id":"public/images/水电改造之篇一2.png","hash":"12f9fb60359dfc86dbf12cc4e986d33d93dbaa39","modified":1650174403616},{"_id":"public/images/笔记本无线网卡修改MAC4.png","hash":"3a454b4cb4a690e6d2b1e52c5a32ed9747f402ae","modified":1650174403616},{"_id":"public/images/水电改造之篇二7.png","hash":"2147aea66181a93373e63d2c063e2b3847234ff8","modified":1650174403616},{"_id":"public/images/水电改造之篇一5.png","hash":"cd7e2cbb1b007029bbe41f300d076ae35006d3c9","modified":1650174403616},{"_id":"public/images/卡iov进度,InitializingIOV卡住,ESXI许可证.png","hash":"35cca840062981499e1286f1e828bb2fdaf5a6ba","modified":1650174403616},{"_id":"public/images/水电改造之篇二2.png","hash":"3ef4149f0e0af49ce9d7baf1517a9c70762603e0","modified":1650174403616},{"_id":"public/images/搭建个人博客Docker+Nginx+Hexo1.png","hash":"dacab631a2ccb0ac655036dcb719f0a5b131d55f","modified":1650174403616},{"_id":"public/images/水电改造之篇二6.png","hash":"b2d7c6a7ecedd0345d28f60b1cfdb55f4a6f75c7","modified":1650174403616},{"_id":"public/images/水电改造之篇二5.png","hash":"e169a9c479bbe46152b955cad672ff6a39026505","modified":1650174403616},{"_id":"public/images/水电改造之篇二.gif","hash":"ecc49a4b2dddf726bd5596885d235d8b77faad17","modified":1650174403616}],"Category":[{"name":"百思其解","_id":"cl22v8f4o0004foo39maehhe2"},{"name":"日常捣鼓","_id":"cl22v8f4u000afoo36pjpgscl"},{"name":"学习笔记","_id":"cl22v8f54000mfoo3gs9j2jjf"},{"name":"点滴生活","_id":"cl22v8f5c0015foo3at4tc1w6"}],"Data":[],"Page":[{"title":"学习笔记","date":"2022-04-14T08:52:54.000Z","type":"categories","_content":"\n","source":"categories/学习笔记.md","raw":"---\ntitle: 学习笔记\ndate: 2022-04-14 16:52:54\ntype: categories\n---\n\n","updated":"2022-04-14T19:18:33.966Z","path":"categories/学习笔记.html","comments":1,"layout":"page","_id":"cl22v8f4d0000foo39p4fc857","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"日常捣鼓","date":"2022-04-14T08:52:54.000Z","type":"categories","_content":"","source":"categories/日常捣鼓.md","raw":"---\ntitle: 日常捣鼓\ndate: 2022-04-14 16:52:54\ntype: categories\n---\n","updated":"2022-04-14T19:10:33.034Z","path":"categories/日常捣鼓.html","comments":1,"layout":"page","_id":"cl22v8f4l0002foo35i780wdl","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"点滴生活","date":"2022-04-14T08:52:54.000Z","type":"categories","_content":"","source":"categories/点滴生活.md","raw":"---\ntitle: 点滴生活\ndate: 2022-04-14 16:52:54\ntype: categories\n---\n","updated":"2022-04-14T18:40:57.603Z","path":"categories/点滴生活.html","comments":1,"layout":"page","_id":"cl22v8f4p0005foo3hoc8cx5b","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"百思其解","date":"2022-04-14T08:52:54.000Z","type":"categories","_content":"\n","source":"categories/百思其解.md","raw":"---\ntitle: 百思其解\ndate: 2022-04-14 16:52:54\ntype: categories\n---\n\n","updated":"2022-04-14T19:22:12.134Z","path":"categories/百思其解.html","comments":1,"layout":"page","_id":"cl22v8f4r0007foo30egoej5y","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"ESXI提示：失败 – “scsi00”的磁盘类型 2 不受支持或无效。请确保磁盘已导入","date":"2019-05-10T07:08:03.000Z","_content":"\n**解决方法：**\n\n需要用VMware的工具\"vmkfstools\"转换后才能让ESXi识别使用\n\n1. 打开ESXi的命令行（shell），用root登录\n\n2. 进入对应的数据存储库：cd /vmfs/volumes/[数据存储名称]\n\n   例如我的：cd /vmfs/volumes/datastore1\n\n   系统会自动转化为此数据存储库的UUID，因此当前文件夹变为：\n\n   > /vmfs/volumes/5908d542-ce73335d-1aea-6c0b84a530d0/\n\n3. 进入对应的虚拟机文件夹，若不确定，就用列出命令：ls ，然后：cd xx\n\n<!-- more -->\n\n4. ls 列出所有文件，其中\".vmdk\"后缀的就是虚拟磁盘文件，看着文件名打命令：\n\n   vmkfstools -i [原磁盘文件全称] [新磁盘文件全称]\n\n   例如我的：\n\n   > vmkfstools -i VM-Svr2008R2x64.vmdk VM-Svr2008R2x64-new.vmdk -d thin\n\n   其中【 -i 】作用是转换，【 -d thin 】作用是将新磁盘文件使用“精简置备模式”。\n\n   然后经过漫长的等待，看着进度 Clone: 100% done. 才算完成转换。\n\n   \n\n**附上官方的命令说明：**\n\nhttps://www.vmware.com/support/developer/vcli/vcli41/doc/reference/vmkfstools.html","source":"_posts/ESXI提示：失败_–_“scsi00”的磁盘类型_2_不受支持或无效。请确保磁盘已导入.md","raw":"---\ntitle: ESXI提示：失败 – “scsi00”的磁盘类型 2 不受支持或无效。请确保磁盘已导入\ndate: 2019-05-10 15:08:03\ncategories: \n  - 百思其解\n---\n\n**解决方法：**\n\n需要用VMware的工具\"vmkfstools\"转换后才能让ESXi识别使用\n\n1. 打开ESXi的命令行（shell），用root登录\n\n2. 进入对应的数据存储库：cd /vmfs/volumes/[数据存储名称]\n\n   例如我的：cd /vmfs/volumes/datastore1\n\n   系统会自动转化为此数据存储库的UUID，因此当前文件夹变为：\n\n   > /vmfs/volumes/5908d542-ce73335d-1aea-6c0b84a530d0/\n\n3. 进入对应的虚拟机文件夹，若不确定，就用列出命令：ls ，然后：cd xx\n\n<!-- more -->\n\n4. ls 列出所有文件，其中\".vmdk\"后缀的就是虚拟磁盘文件，看着文件名打命令：\n\n   vmkfstools -i [原磁盘文件全称] [新磁盘文件全称]\n\n   例如我的：\n\n   > vmkfstools -i VM-Svr2008R2x64.vmdk VM-Svr2008R2x64-new.vmdk -d thin\n\n   其中【 -i 】作用是转换，【 -d thin 】作用是将新磁盘文件使用“精简置备模式”。\n\n   然后经过漫长的等待，看着进度 Clone: 100% done. 才算完成转换。\n\n   \n\n**附上官方的命令说明：**\n\nhttps://www.vmware.com/support/developer/vcli/vcli41/doc/reference/vmkfstools.html","slug":"ESXI提示：失败_–_“scsi00”的磁盘类型_2_不受支持或无效。请确保磁盘已导入","published":1,"updated":"2022-04-15T21:15:36.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f4g0001foo3aw96hart","content":"<p><strong>解决方法：</strong></p>\n<p>需要用VMware的工具”vmkfstools”转换后才能让ESXi识别使用</p>\n<ol>\n<li><p>打开ESXi的命令行（shell），用root登录</p>\n</li>\n<li><p>进入对应的数据存储库：cd &#x2F;vmfs&#x2F;volumes&#x2F;[数据存储名称]</p>\n<p>例如我的：cd &#x2F;vmfs&#x2F;volumes&#x2F;datastore1</p>\n<p>系统会自动转化为此数据存储库的UUID，因此当前文件夹变为：</p>\n<blockquote>\n<p>&#x2F;vmfs&#x2F;volumes&#x2F;5908d542-ce73335d-1aea-6c0b84a530d0&#x2F;</p>\n</blockquote>\n</li>\n<li><p>进入对应的虚拟机文件夹，若不确定，就用列出命令：ls ，然后：cd xx</p>\n</li>\n</ol>\n<span id=\"more\"></span>\n\n<ol start=\"4\">\n<li><p>ls 列出所有文件，其中”.vmdk”后缀的就是虚拟磁盘文件，看着文件名打命令：</p>\n<p>vmkfstools -i [原磁盘文件全称] [新磁盘文件全称]</p>\n<p>例如我的：</p>\n<blockquote>\n<p>vmkfstools -i VM-Svr2008R2x64.vmdk VM-Svr2008R2x64-new.vmdk -d thin</p>\n</blockquote>\n<p>其中【 -i 】作用是转换，【 -d thin 】作用是将新磁盘文件使用“精简置备模式”。</p>\n<p>然后经过漫长的等待，看着进度 Clone: 100% done. 才算完成转换。</p>\n</li>\n</ol>\n<p><strong>附上官方的命令说明：</strong></p>\n<p><a href=\"https://www.vmware.com/support/developer/vcli/vcli41/doc/reference/vmkfstools.html\">https://www.vmware.com/support/developer/vcli/vcli41/doc/reference/vmkfstools.html</a></p>\n","site":{"data":{}},"excerpt":"<p><strong>解决方法：</strong></p>\n<p>需要用VMware的工具”vmkfstools”转换后才能让ESXi识别使用</p>\n<ol>\n<li><p>打开ESXi的命令行（shell），用root登录</p>\n</li>\n<li><p>进入对应的数据存储库：cd &#x2F;vmfs&#x2F;volumes&#x2F;[数据存储名称]</p>\n<p>例如我的：cd &#x2F;vmfs&#x2F;volumes&#x2F;datastore1</p>\n<p>系统会自动转化为此数据存储库的UUID，因此当前文件夹变为：</p>\n<blockquote>\n<p>&#x2F;vmfs&#x2F;volumes&#x2F;5908d542-ce73335d-1aea-6c0b84a530d0&#x2F;</p>\n</blockquote>\n</li>\n<li><p>进入对应的虚拟机文件夹，若不确定，就用列出命令：ls ，然后：cd xx</p>\n</li>\n</ol>","more":"<ol start=\"4\">\n<li><p>ls 列出所有文件，其中”.vmdk”后缀的就是虚拟磁盘文件，看着文件名打命令：</p>\n<p>vmkfstools -i [原磁盘文件全称] [新磁盘文件全称]</p>\n<p>例如我的：</p>\n<blockquote>\n<p>vmkfstools -i VM-Svr2008R2x64.vmdk VM-Svr2008R2x64-new.vmdk -d thin</p>\n</blockquote>\n<p>其中【 -i 】作用是转换，【 -d thin 】作用是将新磁盘文件使用“精简置备模式”。</p>\n<p>然后经过漫长的等待，看着进度 Clone: 100% done. 才算完成转换。</p>\n</li>\n</ol>\n<p><strong>附上官方的命令说明：</strong></p>\n<p><a href=\"https://www.vmware.com/support/developer/vcli/vcli41/doc/reference/vmkfstools.html\">https://www.vmware.com/support/developer/vcli/vcli41/doc/reference/vmkfstools.html</a></p>"},{"title":"Git的使用与碰壁","date":"2022-02-10T13:08:03.000Z","_content":"![](/images/Git的使用与碰壁1.png)\n- 图出自网络\n\n- 图解：（暂时抛去官方解释不看，先以个人理解作为出发点，有助于探索学习）\n\n  **(个人)工作区：**项目代码本地存放、个人代码维护修改更新等相关操作存放区；\n  **Index索引：**看作缓存作用，存放着工作区所有的临时操作记录信息；\n  **存储仓库：**同样视为缓存作用，但它存放的是具体修改后的文件，而不是操作记录；\n  **远程仓储：**最终项目代码公示、长期曝光区，代码托管，无人值守，存取便利。\n\n>  流程1：**工作区**修改后，用`git add`将临时的操作记录存放于**Index索引区**，这时通过`git commit`可将Index区存放的操作记录对应的文件提交到**存储仓库**（如果中途反悔，可使用`checkout`退回提交的代码）；接着中间存储仓库将完整/改变的代码文件整体push到**远程公共仓储**上托管。<!-- more -->\n>\n>`将流程1看作是同事甲的操作，当在团队协作时，同事乙也是维护人之一，此时乙想要同步得到甲更新后的文件。`\n>\n>  流程2：同事乙可通过pull / clone将文件传到他个人工作区，也就是本机电脑上；\n   >- pull：直接复制回工作区，加入的内容和现存内容之间会进行对比记录更新；\n   >- clone：将整个项目文件复制一份到本机，包含.git目录，相当于项目是在本地主机从无到有。\n\n\n### 工作区、Index、仓库区三者间\n  **git add 绿字会变红字(撤销add)**\n    `git reset HEAD` \t\t后面什么都不跟的，就是上一次add 里面的内容全部撤销\n    `git reset HEAD XXX` \t后面跟文件名，就是对某个文件进行撤销\n\n  **git commit 撤销操作**\n    `git reset --soft HEAD`       仅是撤回commit操作，您写的代码仍然保留。\n\n  **git reset 其他参数说明：**\n    `--mixed`        不删除工作空间改动代码，撤销commit，并且撤销git add . 这个为默认参数,\n    `git reset --mixed HEAD^` 和 `git reset HEAD^` 效果是一样的。\n    `--soft`         不删除工作空间改动代码，撤销commit，不撤销git add . \n    `--hard`         删除工作空间改动代码，撤销commit，撤销git add . 注意完成这个操作后，就恢复到了上一次的commit状态。 \n    `git commit --amend`      改commit注释，此时会进入默认vim编辑器，修改注释完毕后保存就好了。\n\n  **红字变无 (撤销没add修改)**\n    `git checkout -- 文件`\n\n  **要删除指定的commit**\n    `git log`     查找到要删除提交记录的上一条提交的commit的id，执行\n    `git rebase -i (commit的id)`\n    弹出框中上方有很多pick记录，对应的commit提交，将需要删除的commit的pick改为drop，保存\n    `git log`可以看到所删记录没有了\n\n   `git status` 查看改变的文件列表\n   `git status -s` 查看改变的文件列表简化版\n   `git diff`或者`git diff filename`查看不在缓冲区的文件发生的改变\n   `git diff --cached`或者`git diff --staged`查看缓冲区的文件发生的改变\n   `git diff HEAD`是`git diff`和`git diff --cached`的合并\n\n### 报错信息“fatal: 'origin' does not appear to be a git repository...”\n  $ git push -u origin master\n  fatal: 'origin' does not appear to be a git repository\n  fatal: Could not read from remote repository.\n\n  是因为远程不存在origin这个仓库名称，可以使用如下操作方法，查看远程仓库名称以及路径相关信息，可以删除错误的远程仓库名称，重新添加新的远程仓库；\n  `git remote -v`                                   查看远程仓库详细信息，可以看到仓库名称\n  `git remote remove orign`             删除orign仓库（如果把origin拼写成orign，删除错误名称仓库）\n  `git remote add origin 仓库地址`       重新添加远程仓库地址\n  `gti push -u origin master`             提交到远程仓库的master主干\n\n**持续...**\n\n","source":"_posts/Git的使用与碰壁.md","raw":"---\ntitle: Git的使用与碰壁\ndate: 2022-2-10 21:08:03\ncategories: \n  - 日常捣鼓\n---\n![](/images/Git的使用与碰壁1.png)\n- 图出自网络\n\n- 图解：（暂时抛去官方解释不看，先以个人理解作为出发点，有助于探索学习）\n\n  **(个人)工作区：**项目代码本地存放、个人代码维护修改更新等相关操作存放区；\n  **Index索引：**看作缓存作用，存放着工作区所有的临时操作记录信息；\n  **存储仓库：**同样视为缓存作用，但它存放的是具体修改后的文件，而不是操作记录；\n  **远程仓储：**最终项目代码公示、长期曝光区，代码托管，无人值守，存取便利。\n\n>  流程1：**工作区**修改后，用`git add`将临时的操作记录存放于**Index索引区**，这时通过`git commit`可将Index区存放的操作记录对应的文件提交到**存储仓库**（如果中途反悔，可使用`checkout`退回提交的代码）；接着中间存储仓库将完整/改变的代码文件整体push到**远程公共仓储**上托管。<!-- more -->\n>\n>`将流程1看作是同事甲的操作，当在团队协作时，同事乙也是维护人之一，此时乙想要同步得到甲更新后的文件。`\n>\n>  流程2：同事乙可通过pull / clone将文件传到他个人工作区，也就是本机电脑上；\n   >- pull：直接复制回工作区，加入的内容和现存内容之间会进行对比记录更新；\n   >- clone：将整个项目文件复制一份到本机，包含.git目录，相当于项目是在本地主机从无到有。\n\n\n### 工作区、Index、仓库区三者间\n  **git add 绿字会变红字(撤销add)**\n    `git reset HEAD` \t\t后面什么都不跟的，就是上一次add 里面的内容全部撤销\n    `git reset HEAD XXX` \t后面跟文件名，就是对某个文件进行撤销\n\n  **git commit 撤销操作**\n    `git reset --soft HEAD`       仅是撤回commit操作，您写的代码仍然保留。\n\n  **git reset 其他参数说明：**\n    `--mixed`        不删除工作空间改动代码，撤销commit，并且撤销git add . 这个为默认参数,\n    `git reset --mixed HEAD^` 和 `git reset HEAD^` 效果是一样的。\n    `--soft`         不删除工作空间改动代码，撤销commit，不撤销git add . \n    `--hard`         删除工作空间改动代码，撤销commit，撤销git add . 注意完成这个操作后，就恢复到了上一次的commit状态。 \n    `git commit --amend`      改commit注释，此时会进入默认vim编辑器，修改注释完毕后保存就好了。\n\n  **红字变无 (撤销没add修改)**\n    `git checkout -- 文件`\n\n  **要删除指定的commit**\n    `git log`     查找到要删除提交记录的上一条提交的commit的id，执行\n    `git rebase -i (commit的id)`\n    弹出框中上方有很多pick记录，对应的commit提交，将需要删除的commit的pick改为drop，保存\n    `git log`可以看到所删记录没有了\n\n   `git status` 查看改变的文件列表\n   `git status -s` 查看改变的文件列表简化版\n   `git diff`或者`git diff filename`查看不在缓冲区的文件发生的改变\n   `git diff --cached`或者`git diff --staged`查看缓冲区的文件发生的改变\n   `git diff HEAD`是`git diff`和`git diff --cached`的合并\n\n### 报错信息“fatal: 'origin' does not appear to be a git repository...”\n  $ git push -u origin master\n  fatal: 'origin' does not appear to be a git repository\n  fatal: Could not read from remote repository.\n\n  是因为远程不存在origin这个仓库名称，可以使用如下操作方法，查看远程仓库名称以及路径相关信息，可以删除错误的远程仓库名称，重新添加新的远程仓库；\n  `git remote -v`                                   查看远程仓库详细信息，可以看到仓库名称\n  `git remote remove orign`             删除orign仓库（如果把origin拼写成orign，删除错误名称仓库）\n  `git remote add origin 仓库地址`       重新添加远程仓库地址\n  `gti push -u origin master`             提交到远程仓库的master主干\n\n**持续...**\n\n","slug":"Git的使用与碰壁","published":1,"updated":"2022-04-16T18:28:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f4m0003foo3e8wy3309","content":"<p><img src=\"/images/Git%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E7%A2%B0%E5%A3%811.png\"></p>\n<ul>\n<li><p>图出自网络</p>\n</li>\n<li><p>图解：（暂时抛去官方解释不看，先以个人理解作为出发点，有助于探索学习）</p>\n<p><strong>(个人)工作区：</strong>项目代码本地存放、个人代码维护修改更新等相关操作存放区；<br><strong>Index索引：</strong>看作缓存作用，存放着工作区所有的临时操作记录信息；<br><strong>存储仓库：</strong>同样视为缓存作用，但它存放的是具体修改后的文件，而不是操作记录；<br><strong>远程仓储：</strong>最终项目代码公示、长期曝光区，代码托管，无人值守，存取便利。</p>\n</li>\n</ul>\n<blockquote>\n<p> 流程1：<strong>工作区</strong>修改后，用<code>git add</code>将临时的操作记录存放于<strong>Index索引区</strong>，这时通过<code>git commit</code>可将Index区存放的操作记录对应的文件提交到<strong>存储仓库</strong>（如果中途反悔，可使用<code>checkout</code>退回提交的代码）；接着中间存储仓库将完整&#x2F;改变的代码文件整体push到<strong>远程公共仓储</strong>上托管。<span id=\"more\"></span></p>\n<p><code>将流程1看作是同事甲的操作，当在团队协作时，同事乙也是维护人之一，此时乙想要同步得到甲更新后的文件。</code></p>\n<p> 流程2：同事乙可通过pull &#x2F; clone将文件传到他个人工作区，也就是本机电脑上；</p>\n<ul>\n<li>pull：直接复制回工作区，加入的内容和现存内容之间会进行对比记录更新；</li>\n<li>clone：将整个项目文件复制一份到本机，包含.git目录，相当于项目是在本地主机从无到有。</li>\n</ul>\n</blockquote>\n<h3 id=\"工作区、Index、仓库区三者间\"><a href=\"#工作区、Index、仓库区三者间\" class=\"headerlink\" title=\"工作区、Index、仓库区三者间\"></a>工作区、Index、仓库区三者间</h3><p>  <strong>git add 绿字会变红字(撤销add)</strong><br>    <code>git reset HEAD</code> \t\t后面什么都不跟的，就是上一次add 里面的内容全部撤销<br>    <code>git reset HEAD XXX</code> \t后面跟文件名，就是对某个文件进行撤销</p>\n<p>  <strong>git commit 撤销操作</strong><br>    <code>git reset --soft HEAD</code>       仅是撤回commit操作，您写的代码仍然保留。</p>\n<p>  <strong>git reset 其他参数说明：</strong><br>    <code>--mixed</code>        不删除工作空间改动代码，撤销commit，并且撤销git add . 这个为默认参数,<br>    <code>git reset --mixed HEAD^</code> 和 <code>git reset HEAD^</code> 效果是一样的。<br>    <code>--soft</code>         不删除工作空间改动代码，撤销commit，不撤销git add .<br>    <code>--hard</code>         删除工作空间改动代码，撤销commit，撤销git add . 注意完成这个操作后，就恢复到了上一次的commit状态。<br>    <code>git commit --amend</code>      改commit注释，此时会进入默认vim编辑器，修改注释完毕后保存就好了。</p>\n<p>  <strong>红字变无 (撤销没add修改)</strong><br>    <code>git checkout -- 文件</code></p>\n<p>  <strong>要删除指定的commit</strong><br>    <code>git log</code>     查找到要删除提交记录的上一条提交的commit的id，执行<br>    <code>git rebase -i (commit的id)</code><br>    弹出框中上方有很多pick记录，对应的commit提交，将需要删除的commit的pick改为drop，保存<br>    <code>git log</code>可以看到所删记录没有了</p>\n<p>   <code>git status</code> 查看改变的文件列表<br>   <code>git status -s</code> 查看改变的文件列表简化版<br>   <code>git diff</code>或者<code>git diff filename</code>查看不在缓冲区的文件发生的改变<br>   <code>git diff --cached</code>或者<code>git diff --staged</code>查看缓冲区的文件发生的改变<br>   <code>git diff HEAD</code>是<code>git diff</code>和<code>git diff --cached</code>的合并</p>\n<h3 id=\"报错信息“fatal-‘origin’-does-not-appear-to-be-a-git-repository…”\"><a href=\"#报错信息“fatal-‘origin’-does-not-appear-to-be-a-git-repository…”\" class=\"headerlink\" title=\"报错信息“fatal: ‘origin’ does not appear to be a git repository…”\"></a>报错信息“fatal: ‘origin’ does not appear to be a git repository…”</h3><p>  $ git push -u origin master<br>  fatal: ‘origin’ does not appear to be a git repository<br>  fatal: Could not read from remote repository.</p>\n<p>  是因为远程不存在origin这个仓库名称，可以使用如下操作方法，查看远程仓库名称以及路径相关信息，可以删除错误的远程仓库名称，重新添加新的远程仓库；<br>  <code>git remote -v</code>                                   查看远程仓库详细信息，可以看到仓库名称<br>  <code>git remote remove orign</code>             删除orign仓库（如果把origin拼写成orign，删除错误名称仓库）<br>  <code>git remote add origin 仓库地址</code>       重新添加远程仓库地址<br>  <code>gti push -u origin master</code>             提交到远程仓库的master主干</p>\n<p><strong>持续…</strong></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/Git%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E7%A2%B0%E5%A3%811.png\"></p>\n<ul>\n<li><p>图出自网络</p>\n</li>\n<li><p>图解：（暂时抛去官方解释不看，先以个人理解作为出发点，有助于探索学习）</p>\n<p><strong>(个人)工作区：</strong>项目代码本地存放、个人代码维护修改更新等相关操作存放区；<br><strong>Index索引：</strong>看作缓存作用，存放着工作区所有的临时操作记录信息；<br><strong>存储仓库：</strong>同样视为缓存作用，但它存放的是具体修改后的文件，而不是操作记录；<br><strong>远程仓储：</strong>最终项目代码公示、长期曝光区，代码托管，无人值守，存取便利。</p>\n</li>\n</ul>\n<blockquote>\n<p> 流程1：<strong>工作区</strong>修改后，用<code>git add</code>将临时的操作记录存放于<strong>Index索引区</strong>，这时通过<code>git commit</code>可将Index区存放的操作记录对应的文件提交到<strong>存储仓库</strong>（如果中途反悔，可使用<code>checkout</code>退回提交的代码）；接着中间存储仓库将完整&#x2F;改变的代码文件整体push到<strong>远程公共仓储</strong>上托管。","more":"</p>\n<p><code>将流程1看作是同事甲的操作，当在团队协作时，同事乙也是维护人之一，此时乙想要同步得到甲更新后的文件。</code></p>\n<p> 流程2：同事乙可通过pull &#x2F; clone将文件传到他个人工作区，也就是本机电脑上；</p>\n<ul>\n<li>pull：直接复制回工作区，加入的内容和现存内容之间会进行对比记录更新；</li>\n<li>clone：将整个项目文件复制一份到本机，包含.git目录，相当于项目是在本地主机从无到有。</li>\n</ul>\n</blockquote>\n<h3 id=\"工作区、Index、仓库区三者间\"><a href=\"#工作区、Index、仓库区三者间\" class=\"headerlink\" title=\"工作区、Index、仓库区三者间\"></a>工作区、Index、仓库区三者间</h3><p>  <strong>git add 绿字会变红字(撤销add)</strong><br>    <code>git reset HEAD</code> \t\t后面什么都不跟的，就是上一次add 里面的内容全部撤销<br>    <code>git reset HEAD XXX</code> \t后面跟文件名，就是对某个文件进行撤销</p>\n<p>  <strong>git commit 撤销操作</strong><br>    <code>git reset --soft HEAD</code>       仅是撤回commit操作，您写的代码仍然保留。</p>\n<p>  <strong>git reset 其他参数说明：</strong><br>    <code>--mixed</code>        不删除工作空间改动代码，撤销commit，并且撤销git add . 这个为默认参数,<br>    <code>git reset --mixed HEAD^</code> 和 <code>git reset HEAD^</code> 效果是一样的。<br>    <code>--soft</code>         不删除工作空间改动代码，撤销commit，不撤销git add .<br>    <code>--hard</code>         删除工作空间改动代码，撤销commit，撤销git add . 注意完成这个操作后，就恢复到了上一次的commit状态。<br>    <code>git commit --amend</code>      改commit注释，此时会进入默认vim编辑器，修改注释完毕后保存就好了。</p>\n<p>  <strong>红字变无 (撤销没add修改)</strong><br>    <code>git checkout -- 文件</code></p>\n<p>  <strong>要删除指定的commit</strong><br>    <code>git log</code>     查找到要删除提交记录的上一条提交的commit的id，执行<br>    <code>git rebase -i (commit的id)</code><br>    弹出框中上方有很多pick记录，对应的commit提交，将需要删除的commit的pick改为drop，保存<br>    <code>git log</code>可以看到所删记录没有了</p>\n<p>   <code>git status</code> 查看改变的文件列表<br>   <code>git status -s</code> 查看改变的文件列表简化版<br>   <code>git diff</code>或者<code>git diff filename</code>查看不在缓冲区的文件发生的改变<br>   <code>git diff --cached</code>或者<code>git diff --staged</code>查看缓冲区的文件发生的改变<br>   <code>git diff HEAD</code>是<code>git diff</code>和<code>git diff --cached</code>的合并</p>\n<h3 id=\"报错信息“fatal-‘origin’-does-not-appear-to-be-a-git-repository…”\"><a href=\"#报错信息“fatal-‘origin’-does-not-appear-to-be-a-git-repository…”\" class=\"headerlink\" title=\"报错信息“fatal: ‘origin’ does not appear to be a git repository…”\"></a>报错信息“fatal: ‘origin’ does not appear to be a git repository…”</h3><p>  $ git push -u origin master<br>  fatal: ‘origin’ does not appear to be a git repository<br>  fatal: Could not read from remote repository.</p>\n<p>  是因为远程不存在origin这个仓库名称，可以使用如下操作方法，查看远程仓库名称以及路径相关信息，可以删除错误的远程仓库名称，重新添加新的远程仓库；<br>  <code>git remote -v</code>                                   查看远程仓库详细信息，可以看到仓库名称<br>  <code>git remote remove orign</code>             删除orign仓库（如果把origin拼写成orign，删除错误名称仓库）<br>  <code>git remote add origin 仓库地址</code>       重新添加远程仓库地址<br>  <code>gti push -u origin master</code>             提交到远程仓库的master主干</p>\n<p><strong>持续…</strong></p>"},{"title":"OneDrive+宝塔面板搭建olaindex","date":"2018-07-12T02:40:12.000Z","_content":"\n**谷歌云创建VM实例。**\n\n![](/images/OneDrive+宝塔面板搭建olaindex1.png)\n\n谷歌云默认不可以使用xshell等第三方软件进行ssh登录，为了方便，我们修改下即可。\n\n1. 点击右边进入ssh控制台，执行以下命令\n\n   ```sh\n   vi /etc/ssh/sshd_config\n   ```\n\n敲击键盘“i”进入编辑模式，找到下面两个参数去掉#号并修改\n\n<!-- more -->\n\n```sh\n#PermitRootLogin prohibit-password\n#PasswordAuthentication no\n\n##去掉\"#\"号并修改\nPermitRootLogin yes\nPasswordAuthentication yes\n```\n\n保存后重启ssh这个时候就能用第三方终端登录软件进行连接\n\n```sh\nsystemctl restart sshd.service              \n```\n\n哦，对了  记得更改ssh连接密码,根据提示进行\n\n```sh\npasswd\n```\n\n好了，可以直接用xshell搞了\n\n**1、安装宝塔**\n\n- Centos系统 \n\n  ```sh\n  yum install -y wget && wget -O install.sh http://download.bt.cn/install/install.sh && sh install.sh\n  ```\n\n  \n\n- Ubuntu系统\n\n  ```sh\n  wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh && sudo bash install.sh \n  ```\n\n  \n\n- Debian系统\n\n  ```sh\n  wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh && bash install.sh\n  ```\n\n  \n\n**安装挺快的，一分钟左右！！**\n\n**接下来进入宝塔主页面：**[**http://xxxx:8888**](http://xxxx:8888)\n\n**在弹出来的窗口安装一整套lnmp，耐心等待，mysql在本教程可以不安装。**\n\n![](/images/OneDrive+宝塔面板搭建olaindex2.png)\n\n全部完成后，再找到左侧软件管理-PHP管理-设置-安装Fileinfo扩展(非必需扩展，不过不安装的话，不保证安装程序能成功)。\n\n然后同样的在PHP设置里找到禁用函数，删除exec、proc_open、proc_get_status和putenv函数，最后重启PHP\n\n2、安装Composer（终端命令执行）\n\n```sh\ncurl -sS https://getcomposer.org/installer | php mv composer.phar /usr/local/bin/composer \n```\n\n​             \n\n**3、安装程序**\n\n​      我们先点击左侧网站，添加域名，此时网站根目录就是: /www/wwwroot/weiduni.xyz。\n\n![](/images/OneDrive+宝塔面板搭建olaindex3.png)\n\n**下一步，运行命令：**\n\n```sh\ncd /www/wwwroot/weiduni.xyz   #记住改成自己域名\ngit clone https://github.com/WangNingkai/OLAINDEX.git tmp \nmv tmp/.git .  #将.git目录移至当前目录\nrm -rf tmp \ngit reset --hard \ncp database/database.sample.sqlite database/database.sqlite  # 数据库文件\ncomposer install -vvv # 这里确保已成功安装 composer ，如果报权限问题，建议给予用户完整权限。\nchmod -R 777 storage \nchown -R www:www * # 此处 www 根据服务器具体用户组而定\nphp artisan od:install # 此处绑定域名需根据实际域名谨慎填写（包含http/https）\n```\n\n\n\n**5、伪静态设置**\n\n点击域名设置-网站目录，运行目录选择public，并把防跨站的勾去掉并重启PHP。然后点击伪静态，输入以下代码：\n\n```sh\nlocation / {    try_files $uri $uri/ /index.php?$query_string; }\n```\n\n   \n\n最后就可以打开域名进行安装配置了。\n\n![](/images/OneDrive+宝塔面板搭建olaindex4.png)\n\n注意回调地址redirect_uri需要是https地址，可以直接在宝塔开启免费SSL证书。如果你使用上面的一键申请绑定账号失败了，可以试试手动申请client_id、client_secret，申请方法→[传送门](https://github.com/WangNingkai/OLAINDEX/wiki/3.申请client_id、client_secret)。\n\n后台地址：https://xx.com/admin，密码：12345678。\n\n**其它设置**\n\n```sh\n#重置全部数据，删除数据库数据 \nphp artisan od:reset \n\n#重置OneDrive登陆账号 \nphp artisan od:logout     \n\n#升级程序 \ngit pull \ncomposer install -vvv \nphp artisan od:update\n```\n\n\n\n**特殊文件功能**\n\n- 不建议创建和以下同名的文件夹和文件，否则会导致文件无法查看下载 README.md、HEAD.md 、.password 、.deny特殊文件使用 \n- 在文件夹底部添加说明 在onedrive的文件夹中添加README.md文件，使用markdown语法。 \n- 在文件夹头部添加说明 在onedrive的文件夹中添加HEAD.md 文件，使用markdown语法。 \n- 加密文件夹 在onedrive的文件夹中添加.password文件，填入密码，密码不能为空。 \n- 禁止访问文件夹 在onedrive的文件夹中添加.deny文件，该文件夹被禁止访问。\n\nhttps://github.com/WangNingkai/OLAINDEX   开源地址","source":"_posts/OneDrive+宝塔面板搭建olaindex.md","raw":"---\ntitle: OneDrive+宝塔面板搭建olaindex\ndate: 2018-07-12 10:40:12\ncategories: \n  - 日常捣鼓\n---\n\n**谷歌云创建VM实例。**\n\n![](/images/OneDrive+宝塔面板搭建olaindex1.png)\n\n谷歌云默认不可以使用xshell等第三方软件进行ssh登录，为了方便，我们修改下即可。\n\n1. 点击右边进入ssh控制台，执行以下命令\n\n   ```sh\n   vi /etc/ssh/sshd_config\n   ```\n\n敲击键盘“i”进入编辑模式，找到下面两个参数去掉#号并修改\n\n<!-- more -->\n\n```sh\n#PermitRootLogin prohibit-password\n#PasswordAuthentication no\n\n##去掉\"#\"号并修改\nPermitRootLogin yes\nPasswordAuthentication yes\n```\n\n保存后重启ssh这个时候就能用第三方终端登录软件进行连接\n\n```sh\nsystemctl restart sshd.service              \n```\n\n哦，对了  记得更改ssh连接密码,根据提示进行\n\n```sh\npasswd\n```\n\n好了，可以直接用xshell搞了\n\n**1、安装宝塔**\n\n- Centos系统 \n\n  ```sh\n  yum install -y wget && wget -O install.sh http://download.bt.cn/install/install.sh && sh install.sh\n  ```\n\n  \n\n- Ubuntu系统\n\n  ```sh\n  wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh && sudo bash install.sh \n  ```\n\n  \n\n- Debian系统\n\n  ```sh\n  wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh && bash install.sh\n  ```\n\n  \n\n**安装挺快的，一分钟左右！！**\n\n**接下来进入宝塔主页面：**[**http://xxxx:8888**](http://xxxx:8888)\n\n**在弹出来的窗口安装一整套lnmp，耐心等待，mysql在本教程可以不安装。**\n\n![](/images/OneDrive+宝塔面板搭建olaindex2.png)\n\n全部完成后，再找到左侧软件管理-PHP管理-设置-安装Fileinfo扩展(非必需扩展，不过不安装的话，不保证安装程序能成功)。\n\n然后同样的在PHP设置里找到禁用函数，删除exec、proc_open、proc_get_status和putenv函数，最后重启PHP\n\n2、安装Composer（终端命令执行）\n\n```sh\ncurl -sS https://getcomposer.org/installer | php mv composer.phar /usr/local/bin/composer \n```\n\n​             \n\n**3、安装程序**\n\n​      我们先点击左侧网站，添加域名，此时网站根目录就是: /www/wwwroot/weiduni.xyz。\n\n![](/images/OneDrive+宝塔面板搭建olaindex3.png)\n\n**下一步，运行命令：**\n\n```sh\ncd /www/wwwroot/weiduni.xyz   #记住改成自己域名\ngit clone https://github.com/WangNingkai/OLAINDEX.git tmp \nmv tmp/.git .  #将.git目录移至当前目录\nrm -rf tmp \ngit reset --hard \ncp database/database.sample.sqlite database/database.sqlite  # 数据库文件\ncomposer install -vvv # 这里确保已成功安装 composer ，如果报权限问题，建议给予用户完整权限。\nchmod -R 777 storage \nchown -R www:www * # 此处 www 根据服务器具体用户组而定\nphp artisan od:install # 此处绑定域名需根据实际域名谨慎填写（包含http/https）\n```\n\n\n\n**5、伪静态设置**\n\n点击域名设置-网站目录，运行目录选择public，并把防跨站的勾去掉并重启PHP。然后点击伪静态，输入以下代码：\n\n```sh\nlocation / {    try_files $uri $uri/ /index.php?$query_string; }\n```\n\n   \n\n最后就可以打开域名进行安装配置了。\n\n![](/images/OneDrive+宝塔面板搭建olaindex4.png)\n\n注意回调地址redirect_uri需要是https地址，可以直接在宝塔开启免费SSL证书。如果你使用上面的一键申请绑定账号失败了，可以试试手动申请client_id、client_secret，申请方法→[传送门](https://github.com/WangNingkai/OLAINDEX/wiki/3.申请client_id、client_secret)。\n\n后台地址：https://xx.com/admin，密码：12345678。\n\n**其它设置**\n\n```sh\n#重置全部数据，删除数据库数据 \nphp artisan od:reset \n\n#重置OneDrive登陆账号 \nphp artisan od:logout     \n\n#升级程序 \ngit pull \ncomposer install -vvv \nphp artisan od:update\n```\n\n\n\n**特殊文件功能**\n\n- 不建议创建和以下同名的文件夹和文件，否则会导致文件无法查看下载 README.md、HEAD.md 、.password 、.deny特殊文件使用 \n- 在文件夹底部添加说明 在onedrive的文件夹中添加README.md文件，使用markdown语法。 \n- 在文件夹头部添加说明 在onedrive的文件夹中添加HEAD.md 文件，使用markdown语法。 \n- 加密文件夹 在onedrive的文件夹中添加.password文件，填入密码，密码不能为空。 \n- 禁止访问文件夹 在onedrive的文件夹中添加.deny文件，该文件夹被禁止访问。\n\nhttps://github.com/WangNingkai/OLAINDEX   开源地址","slug":"OneDrive+宝塔面板搭建olaindex","published":1,"updated":"2022-04-15T21:15:36.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f4q0006foo368er5usx","content":"<p><strong>谷歌云创建VM实例。</strong></p>\n<p><img src=\"/images/OneDrive+%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAolaindex1.png\"></p>\n<p>谷歌云默认不可以使用xshell等第三方软件进行ssh登录，为了方便，我们修改下即可。</p>\n<ol>\n<li><p>点击右边进入ssh控制台，执行以下命令</p>\n<pre><code class=\"sh\">vi /etc/ssh/sshd_config\n</code></pre>\n</li>\n</ol>\n<p>敲击键盘“i”进入编辑模式，找到下面两个参数去掉#号并修改</p>\n<span id=\"more\"></span>\n\n<pre><code class=\"sh\">#PermitRootLogin prohibit-password\n#PasswordAuthentication no\n\n##去掉&quot;#&quot;号并修改\nPermitRootLogin yes\nPasswordAuthentication yes\n</code></pre>\n<p>保存后重启ssh这个时候就能用第三方终端登录软件进行连接</p>\n<pre><code class=\"sh\">systemctl restart sshd.service              \n</code></pre>\n<p>哦，对了  记得更改ssh连接密码,根据提示进行</p>\n<pre><code class=\"sh\">passwd\n</code></pre>\n<p>好了，可以直接用xshell搞了</p>\n<p><strong>1、安装宝塔</strong></p>\n<ul>\n<li><p>Centos系统 </p>\n<pre><code class=\"sh\">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh\n</code></pre>\n</li>\n<li><p>Ubuntu系统</p>\n<pre><code class=\"sh\">wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh \n</code></pre>\n</li>\n<li><p>Debian系统</p>\n<pre><code class=\"sh\">wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh\n</code></pre>\n</li>\n</ul>\n<p><strong>安装挺快的，一分钟左右！！</strong></p>\n<p><strong>接下来进入宝塔主页面：</strong><a href=\"http://xxxx:8888/\"><strong>http://xxxx:8888</strong></a></p>\n<p><strong>在弹出来的窗口安装一整套lnmp，耐心等待，mysql在本教程可以不安装。</strong></p>\n<p><img src=\"/images/OneDrive+%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAolaindex2.png\"></p>\n<p>全部完成后，再找到左侧软件管理-PHP管理-设置-安装Fileinfo扩展(非必需扩展，不过不安装的话，不保证安装程序能成功)。</p>\n<p>然后同样的在PHP设置里找到禁用函数，删除exec、proc_open、proc_get_status和putenv函数，最后重启PHP</p>\n<p>2、安装Composer（终端命令执行）</p>\n<pre><code class=\"sh\">curl -sS https://getcomposer.org/installer | php mv composer.phar /usr/local/bin/composer \n</code></pre>\n<p>​             </p>\n<p><strong>3、安装程序</strong></p>\n<p>​      我们先点击左侧网站，添加域名，此时网站根目录就是: &#x2F;www&#x2F;wwwroot&#x2F;weiduni.xyz。</p>\n<p><img src=\"/images/OneDrive+%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAolaindex3.png\"></p>\n<p><strong>下一步，运行命令：</strong></p>\n<pre><code class=\"sh\">cd /www/wwwroot/weiduni.xyz   #记住改成自己域名\ngit clone https://github.com/WangNingkai/OLAINDEX.git tmp \nmv tmp/.git .  #将.git目录移至当前目录\nrm -rf tmp \ngit reset --hard \ncp database/database.sample.sqlite database/database.sqlite  # 数据库文件\ncomposer install -vvv # 这里确保已成功安装 composer ，如果报权限问题，建议给予用户完整权限。\nchmod -R 777 storage \nchown -R www:www * # 此处 www 根据服务器具体用户组而定\nphp artisan od:install # 此处绑定域名需根据实际域名谨慎填写（包含http/https）\n</code></pre>\n<p><strong>5、伪静态设置</strong></p>\n<p>点击域名设置-网站目录，运行目录选择public，并把防跨站的勾去掉并重启PHP。然后点击伪静态，输入以下代码：</p>\n<pre><code class=\"sh\">location / &#123;    try_files $uri $uri/ /index.php?$query_string; &#125;\n</code></pre>\n<p>最后就可以打开域名进行安装配置了。</p>\n<p><img src=\"/images/OneDrive+%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAolaindex4.png\"></p>\n<p>注意回调地址redirect_uri需要是https地址，可以直接在宝塔开启免费SSL证书。如果你使用上面的一键申请绑定账号失败了，可以试试手动申请client_id、client_secret，申请方法→<a href=\"https://github.com/WangNingkai/OLAINDEX/wiki/3.%E7%94%B3%E8%AF%B7client_id%E3%80%81client_secret\">传送门</a>。</p>\n<p>后台地址：<a href=\"https://xx.com/admin%EF%BC%8C%E5%AF%86%E7%A0%81%EF%BC%9A12345678%E3%80%82\">https://xx.com/admin，密码：12345678。</a></p>\n<p><strong>其它设置</strong></p>\n<pre><code class=\"sh\">#重置全部数据，删除数据库数据 \nphp artisan od:reset \n\n#重置OneDrive登陆账号 \nphp artisan od:logout     \n\n#升级程序 \ngit pull \ncomposer install -vvv \nphp artisan od:update\n</code></pre>\n<p><strong>特殊文件功能</strong></p>\n<ul>\n<li>不建议创建和以下同名的文件夹和文件，否则会导致文件无法查看下载 README.md、HEAD.md 、.password 、.deny特殊文件使用 </li>\n<li>在文件夹底部添加说明 在onedrive的文件夹中添加README.md文件，使用markdown语法。 </li>\n<li>在文件夹头部添加说明 在onedrive的文件夹中添加HEAD.md 文件，使用markdown语法。 </li>\n<li>加密文件夹 在onedrive的文件夹中添加.password文件，填入密码，密码不能为空。 </li>\n<li>禁止访问文件夹 在onedrive的文件夹中添加.deny文件，该文件夹被禁止访问。</li>\n</ul>\n<p><a href=\"https://github.com/WangNingkai/OLAINDEX\">https://github.com/WangNingkai/OLAINDEX</a>   开源地址</p>\n","site":{"data":{}},"excerpt":"<p><strong>谷歌云创建VM实例。</strong></p>\n<p><img src=\"/images/OneDrive+%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAolaindex1.png\"></p>\n<p>谷歌云默认不可以使用xshell等第三方软件进行ssh登录，为了方便，我们修改下即可。</p>\n<ol>\n<li><p>点击右边进入ssh控制台，执行以下命令</p>\n<pre><code class=\"sh\">vi /etc/ssh/sshd_config\n</code></pre>\n</li>\n</ol>\n<p>敲击键盘“i”进入编辑模式，找到下面两个参数去掉#号并修改</p>","more":"<pre><code class=\"sh\">#PermitRootLogin prohibit-password\n#PasswordAuthentication no\n\n##去掉&quot;#&quot;号并修改\nPermitRootLogin yes\nPasswordAuthentication yes\n</code></pre>\n<p>保存后重启ssh这个时候就能用第三方终端登录软件进行连接</p>\n<pre><code class=\"sh\">systemctl restart sshd.service              \n</code></pre>\n<p>哦，对了  记得更改ssh连接密码,根据提示进行</p>\n<pre><code class=\"sh\">passwd\n</code></pre>\n<p>好了，可以直接用xshell搞了</p>\n<p><strong>1、安装宝塔</strong></p>\n<ul>\n<li><p>Centos系统 </p>\n<pre><code class=\"sh\">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh\n</code></pre>\n</li>\n<li><p>Ubuntu系统</p>\n<pre><code class=\"sh\">wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh \n</code></pre>\n</li>\n<li><p>Debian系统</p>\n<pre><code class=\"sh\">wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh\n</code></pre>\n</li>\n</ul>\n<p><strong>安装挺快的，一分钟左右！！</strong></p>\n<p><strong>接下来进入宝塔主页面：</strong><a href=\"http://xxxx:8888/\"><strong>http://xxxx:8888</strong></a></p>\n<p><strong>在弹出来的窗口安装一整套lnmp，耐心等待，mysql在本教程可以不安装。</strong></p>\n<p><img src=\"/images/OneDrive+%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAolaindex2.png\"></p>\n<p>全部完成后，再找到左侧软件管理-PHP管理-设置-安装Fileinfo扩展(非必需扩展，不过不安装的话，不保证安装程序能成功)。</p>\n<p>然后同样的在PHP设置里找到禁用函数，删除exec、proc_open、proc_get_status和putenv函数，最后重启PHP</p>\n<p>2、安装Composer（终端命令执行）</p>\n<pre><code class=\"sh\">curl -sS https://getcomposer.org/installer | php mv composer.phar /usr/local/bin/composer \n</code></pre>\n<p>​             </p>\n<p><strong>3、安装程序</strong></p>\n<p>​      我们先点击左侧网站，添加域名，此时网站根目录就是: &#x2F;www&#x2F;wwwroot&#x2F;weiduni.xyz。</p>\n<p><img src=\"/images/OneDrive+%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAolaindex3.png\"></p>\n<p><strong>下一步，运行命令：</strong></p>\n<pre><code class=\"sh\">cd /www/wwwroot/weiduni.xyz   #记住改成自己域名\ngit clone https://github.com/WangNingkai/OLAINDEX.git tmp \nmv tmp/.git .  #将.git目录移至当前目录\nrm -rf tmp \ngit reset --hard \ncp database/database.sample.sqlite database/database.sqlite  # 数据库文件\ncomposer install -vvv # 这里确保已成功安装 composer ，如果报权限问题，建议给予用户完整权限。\nchmod -R 777 storage \nchown -R www:www * # 此处 www 根据服务器具体用户组而定\nphp artisan od:install # 此处绑定域名需根据实际域名谨慎填写（包含http/https）\n</code></pre>\n<p><strong>5、伪静态设置</strong></p>\n<p>点击域名设置-网站目录，运行目录选择public，并把防跨站的勾去掉并重启PHP。然后点击伪静态，输入以下代码：</p>\n<pre><code class=\"sh\">location / &#123;    try_files $uri $uri/ /index.php?$query_string; &#125;\n</code></pre>\n<p>最后就可以打开域名进行安装配置了。</p>\n<p><img src=\"/images/OneDrive+%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAolaindex4.png\"></p>\n<p>注意回调地址redirect_uri需要是https地址，可以直接在宝塔开启免费SSL证书。如果你使用上面的一键申请绑定账号失败了，可以试试手动申请client_id、client_secret，申请方法→<a href=\"https://github.com/WangNingkai/OLAINDEX/wiki/3.%E7%94%B3%E8%AF%B7client_id%E3%80%81client_secret\">传送门</a>。</p>\n<p>后台地址：<a href=\"https://xx.com/admin%EF%BC%8C%E5%AF%86%E7%A0%81%EF%BC%9A12345678%E3%80%82\">https://xx.com/admin，密码：12345678。</a></p>\n<p><strong>其它设置</strong></p>\n<pre><code class=\"sh\">#重置全部数据，删除数据库数据 \nphp artisan od:reset \n\n#重置OneDrive登陆账号 \nphp artisan od:logout     \n\n#升级程序 \ngit pull \ncomposer install -vvv \nphp artisan od:update\n</code></pre>\n<p><strong>特殊文件功能</strong></p>\n<ul>\n<li>不建议创建和以下同名的文件夹和文件，否则会导致文件无法查看下载 README.md、HEAD.md 、.password 、.deny特殊文件使用 </li>\n<li>在文件夹底部添加说明 在onedrive的文件夹中添加README.md文件，使用markdown语法。 </li>\n<li>在文件夹头部添加说明 在onedrive的文件夹中添加HEAD.md 文件，使用markdown语法。 </li>\n<li>加密文件夹 在onedrive的文件夹中添加.password文件，填入密码，密码不能为空。 </li>\n<li>禁止访问文件夹 在onedrive的文件夹中添加.deny文件，该文件夹被禁止访问。</li>\n</ul>\n<p><a href=\"https://github.com/WangNingkai/OLAINDEX\">https://github.com/WangNingkai/OLAINDEX</a>   开源地址</p>"},{"title":"RX580显卡bios降570黑果免驱","date":"2019-04-14T05:42:05.000Z","_content":"首先需要说明的RX580 2048sp并不会免驱，只能刷VBiOS到RX570\n\n记：事先用备份一下自己的VBiOS，以防手残。\n\n1. 看自己是什么颗粒的卡\n\n2. 官网地址找到与之相匹配的RX570_VBIOS https://www.techpowerup.com/vgabios/\n\n3. 选择RX570驱动至于哪个品牌，优先级建议：同品牌>微星>其它；我用的是微星的卡，所以先找自己品牌的RX570看有没有相同颗粒的VBIOS\n![](/images/RX580显卡bios降570黑果免驱1.png)\n再对比下\n![](/images/RX580显卡bios降570黑果免驱2.png)\n\n4. 接下来利用ATIFlash工具刷bios\n\n<!-- more -->\n\n5. https://www.techpowerup.com/download/ati-atiflash/   这是工具地址\n\n   1. 下载解压管理员运行\n\n   2. 备份保存之后关掉软件!![](/images/RX580显卡bios降570黑果免驱3.png)\n\n   3. 将前面下载好580对应RX570的Rom放进ATIFlash工具目录\n\n   4. 在ATIFlash工具目录进入cmd命令行界面进行操作\n\n   5. - 解锁BIOS，回车执行\n\n      ```sh\n      amdvbflash.exe -unlockrom 0\n      ```\n\n      \n\n      提示：rom unlocked\n\n      - 刷入BIOS，回车执行\n\n      ```sh\n      amdvbflash -f -p 0 xx.rom\t//xx表示对应保存的rx570 rom名称\n      ```\n\n      \n\n      提示：Restart Sustem To Complete UBIOS Update.    //看到提示重启，进入桌面后会出现刷新闪烁，正常情况。\n      \n      例如：amdvbflash -f -p 0 new_RX570.rom \n      \n      \n      \n      \n      \n      参考自 https://www.applex.net/threads/amd-rx580-2048sp-biosrx570.93377/","source":"_posts/RX580显卡bios降570黑果免驱.md","raw":"---\ntitle: RX580显卡bios降570黑果免驱\ndate: 2019-04-14 13:42:05\ncategories: \n  - 日常捣鼓\n---\n首先需要说明的RX580 2048sp并不会免驱，只能刷VBiOS到RX570\n\n记：事先用备份一下自己的VBiOS，以防手残。\n\n1. 看自己是什么颗粒的卡\n\n2. 官网地址找到与之相匹配的RX570_VBIOS https://www.techpowerup.com/vgabios/\n\n3. 选择RX570驱动至于哪个品牌，优先级建议：同品牌>微星>其它；我用的是微星的卡，所以先找自己品牌的RX570看有没有相同颗粒的VBIOS\n![](/images/RX580显卡bios降570黑果免驱1.png)\n再对比下\n![](/images/RX580显卡bios降570黑果免驱2.png)\n\n4. 接下来利用ATIFlash工具刷bios\n\n<!-- more -->\n\n5. https://www.techpowerup.com/download/ati-atiflash/   这是工具地址\n\n   1. 下载解压管理员运行\n\n   2. 备份保存之后关掉软件!![](/images/RX580显卡bios降570黑果免驱3.png)\n\n   3. 将前面下载好580对应RX570的Rom放进ATIFlash工具目录\n\n   4. 在ATIFlash工具目录进入cmd命令行界面进行操作\n\n   5. - 解锁BIOS，回车执行\n\n      ```sh\n      amdvbflash.exe -unlockrom 0\n      ```\n\n      \n\n      提示：rom unlocked\n\n      - 刷入BIOS，回车执行\n\n      ```sh\n      amdvbflash -f -p 0 xx.rom\t//xx表示对应保存的rx570 rom名称\n      ```\n\n      \n\n      提示：Restart Sustem To Complete UBIOS Update.    //看到提示重启，进入桌面后会出现刷新闪烁，正常情况。\n      \n      例如：amdvbflash -f -p 0 new_RX570.rom \n      \n      \n      \n      \n      \n      参考自 https://www.applex.net/threads/amd-rx580-2048sp-biosrx570.93377/","slug":"RX580显卡bios降570黑果免驱","published":1,"updated":"2022-04-15T21:15:36.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f4s0008foo3dzb85axo","content":"<p>首先需要说明的RX580 2048sp并不会免驱，只能刷VBiOS到RX570</p>\n<p>记：事先用备份一下自己的VBiOS，以防手残。</p>\n<ol>\n<li><p>看自己是什么颗粒的卡</p>\n</li>\n<li><p>官网地址找到与之相匹配的RX570_VBIOS <a href=\"https://www.techpowerup.com/vgabios/\">https://www.techpowerup.com/vgabios/</a></p>\n</li>\n<li><p>选择RX570驱动至于哪个品牌，优先级建议：同品牌&gt;微星&gt;其它；我用的是微星的卡，所以先找自己品牌的RX570看有没有相同颗粒的VBIOS<br><img src=\"/images/RX580%E6%98%BE%E5%8D%A1bios%E9%99%8D570%E9%BB%91%E6%9E%9C%E5%85%8D%E9%A9%B11.png\"><br>再对比下<br><img src=\"/images/RX580%E6%98%BE%E5%8D%A1bios%E9%99%8D570%E9%BB%91%E6%9E%9C%E5%85%8D%E9%A9%B12.png\"></p>\n</li>\n<li><p>接下来利用ATIFlash工具刷bios</p>\n</li>\n</ol>\n<span id=\"more\"></span>\n\n<ol start=\"5\">\n<li><p><a href=\"https://www.techpowerup.com/download/ati-atiflash/\">https://www.techpowerup.com/download/ati-atiflash/</a>   这是工具地址</p>\n<ol>\n<li><p>下载解压管理员运行</p>\n</li>\n<li><p>备份保存之后关掉软件!<img src=\"/images/RX580%E6%98%BE%E5%8D%A1bios%E9%99%8D570%E9%BB%91%E6%9E%9C%E5%85%8D%E9%A9%B13.png\"></p>\n</li>\n<li><p>将前面下载好580对应RX570的Rom放进ATIFlash工具目录</p>\n</li>\n<li><p>在ATIFlash工具目录进入cmd命令行界面进行操作</p>\n</li>\n<li><ul>\n<li>解锁BIOS，回车执行</li>\n</ul>\n<pre><code class=\"sh\">amdvbflash.exe -unlockrom 0\n</code></pre>\n<p>提示：rom unlocked</p>\n<ul>\n<li>刷入BIOS，回车执行</li>\n</ul>\n<pre><code class=\"sh\">amdvbflash -f -p 0 xx.rom\t//xx表示对应保存的rx570 rom名称\n</code></pre>\n<p>提示：Restart Sustem To Complete UBIOS Update.    &#x2F;&#x2F;看到提示重启，进入桌面后会出现刷新闪烁，正常情况。</p>\n<p>例如：amdvbflash -f -p 0 new_RX570.rom </p>\n<p>参考自 <a href=\"https://www.applex.net/threads/amd-rx580-2048sp-biosrx570.93377/\">https://www.applex.net/threads/amd-rx580-2048sp-biosrx570.93377/</a></p>\n</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>首先需要说明的RX580 2048sp并不会免驱，只能刷VBiOS到RX570</p>\n<p>记：事先用备份一下自己的VBiOS，以防手残。</p>\n<ol>\n<li><p>看自己是什么颗粒的卡</p>\n</li>\n<li><p>官网地址找到与之相匹配的RX570_VBIOS <a href=\"https://www.techpowerup.com/vgabios/\">https://www.techpowerup.com/vgabios/</a></p>\n</li>\n<li><p>选择RX570驱动至于哪个品牌，优先级建议：同品牌&gt;微星&gt;其它；我用的是微星的卡，所以先找自己品牌的RX570看有没有相同颗粒的VBIOS<br><img src=\"/images/RX580%E6%98%BE%E5%8D%A1bios%E9%99%8D570%E9%BB%91%E6%9E%9C%E5%85%8D%E9%A9%B11.png\"><br>再对比下<br><img src=\"/images/RX580%E6%98%BE%E5%8D%A1bios%E9%99%8D570%E9%BB%91%E6%9E%9C%E5%85%8D%E9%A9%B12.png\"></p>\n</li>\n<li><p>接下来利用ATIFlash工具刷bios</p>\n</li>\n</ol>","more":"<ol start=\"5\">\n<li><p><a href=\"https://www.techpowerup.com/download/ati-atiflash/\">https://www.techpowerup.com/download/ati-atiflash/</a>   这是工具地址</p>\n<ol>\n<li><p>下载解压管理员运行</p>\n</li>\n<li><p>备份保存之后关掉软件!<img src=\"/images/RX580%E6%98%BE%E5%8D%A1bios%E9%99%8D570%E9%BB%91%E6%9E%9C%E5%85%8D%E9%A9%B13.png\"></p>\n</li>\n<li><p>将前面下载好580对应RX570的Rom放进ATIFlash工具目录</p>\n</li>\n<li><p>在ATIFlash工具目录进入cmd命令行界面进行操作</p>\n</li>\n<li><ul>\n<li>解锁BIOS，回车执行</li>\n</ul>\n<pre><code class=\"sh\">amdvbflash.exe -unlockrom 0\n</code></pre>\n<p>提示：rom unlocked</p>\n<ul>\n<li>刷入BIOS，回车执行</li>\n</ul>\n<pre><code class=\"sh\">amdvbflash -f -p 0 xx.rom\t//xx表示对应保存的rx570 rom名称\n</code></pre>\n<p>提示：Restart Sustem To Complete UBIOS Update.    &#x2F;&#x2F;看到提示重启，进入桌面后会出现刷新闪烁，正常情况。</p>\n<p>例如：amdvbflash -f -p 0 new_RX570.rom </p>\n<p>参考自 <a href=\"https://www.applex.net/threads/amd-rx580-2048sp-biosrx570.93377/\">https://www.applex.net/threads/amd-rx580-2048sp-biosrx570.93377/</a></p>\n</li>\n</ol>\n</li>\n</ol>"},{"title":"StringBuffer的认识","date":"2018-11-23T04:21:12.000Z","_content":"\n### StringBuffer的构造方法：\n\n   * public StringBuffer():无参构造方法\n     * public StringBuffer(int capacity):指定容量的字符串缓冲区对象\n     * public StringBuffer(String str):指定字符串内容的字符串缓冲区对象\n   * B:StringBuffer的方法：\n     * public int capacity()：返回当前容量。\t理论值(不掌握)\n     * public int length():返回长度（字符数）。 实际值\n\n### StringBuffer的添加功能\n- public StringBuffer append(String str):\n  - 可以把任意类型数据添加到字符串缓冲区里面,并返回字符串缓冲区本身\n\n- public StringBuffer insert(int offset,String str):\n  - 在指定位置把任意类型的数据插入到字符串缓冲区里面,并返回字符串缓冲区本身\n    StringBuffer是字符串缓冲区,当new的时候是在堆内存创建了一个对象,底层是一个长度为16的字符数组\n    当调用添加的方法时,不会再重新创建对象,在不断向原缓冲区添加字符\n\n\n\n\n### StringBuffer的删除功能\n* public StringBuffer deleteCharAt(int index):\n  删除指定位置的字符，并返回本身\n\n* public StringBuffer delete(int start,int end):\n\n* 删除从指定位置开始指定位置结束的内容，并返回本身\n\n  ```java\n  StringBuffer sb = new StringBuffer();\n  sb.append(\"heima\");\n  sb.delete(0, sb.length());\t\t\t//清空缓冲区\n  System.out.println(sb);\n  //sb = new StringBuffer();\t//不要用这种方式清空缓冲区,原来的会变成垃圾,浪费内存\n  //System.out.println(sb);\n  ```\n\n  \n\n### StringBuffer的替换功能\n- public StringBuffer replace(int start,int end,String str):\t#从start开始到end用str替换\n\n### StringBuffer的反转功能\n- public StringBuffer reverse():\t#字符串反转\n\n### StringBuffer的截取功能\n* public String substring(int start):\t#从指定位置截取到末尾\n* public String substring(int start,int end):\t#截取从指定位置开始到结束位置，包括开始位置，不包括结束位置\n* 注意事项\n  * 返回值类型不再是StringBuffer本身\n\n\n### String -- StringBuffer转换\n\n- 通过构造方法 \n  \n  ```java\n  StringBuffer sb = new StringBuffer(\"abc\");\n  sout(sb);\n  ```\n  \n- 通过append()方法\n  \n  ```java\n  StringBuffer sb1 = new StringBuffer();\n  sb1.append(\"abc\");\n  sout(sb1);\n  ```\n  \n  \n\n### StringBuffer -- String转换\n\n- 通过构造方法\n\n  ```java\n  StringBuffer sb1 = new StringBuffer(\"abc\");\n  Stirng s = new String(sb1)\n  sout(s);\n  ```\n\n  \n\n- 通过toString()方法\n\n  ```java\n  String s1= sb1.toString();\n  sout(s1);\n  ```\n\n  \n\n- 通过subString(0,length);\n\n  ```java\n  String s2 =sb1.substring(0,sb.length());\n  sout(s2);\n  ```\n\n  ","source":"_posts/StringBuffer的认识.md","raw":"---\ntitle: StringBuffer的认识\ndate: 2018-11-23 12:21:12\ncategories: \n  - 学习笔记\n---\n\n### StringBuffer的构造方法：\n\n   * public StringBuffer():无参构造方法\n     * public StringBuffer(int capacity):指定容量的字符串缓冲区对象\n     * public StringBuffer(String str):指定字符串内容的字符串缓冲区对象\n   * B:StringBuffer的方法：\n     * public int capacity()：返回当前容量。\t理论值(不掌握)\n     * public int length():返回长度（字符数）。 实际值\n\n### StringBuffer的添加功能\n- public StringBuffer append(String str):\n  - 可以把任意类型数据添加到字符串缓冲区里面,并返回字符串缓冲区本身\n\n- public StringBuffer insert(int offset,String str):\n  - 在指定位置把任意类型的数据插入到字符串缓冲区里面,并返回字符串缓冲区本身\n    StringBuffer是字符串缓冲区,当new的时候是在堆内存创建了一个对象,底层是一个长度为16的字符数组\n    当调用添加的方法时,不会再重新创建对象,在不断向原缓冲区添加字符\n\n\n\n\n### StringBuffer的删除功能\n* public StringBuffer deleteCharAt(int index):\n  删除指定位置的字符，并返回本身\n\n* public StringBuffer delete(int start,int end):\n\n* 删除从指定位置开始指定位置结束的内容，并返回本身\n\n  ```java\n  StringBuffer sb = new StringBuffer();\n  sb.append(\"heima\");\n  sb.delete(0, sb.length());\t\t\t//清空缓冲区\n  System.out.println(sb);\n  //sb = new StringBuffer();\t//不要用这种方式清空缓冲区,原来的会变成垃圾,浪费内存\n  //System.out.println(sb);\n  ```\n\n  \n\n### StringBuffer的替换功能\n- public StringBuffer replace(int start,int end,String str):\t#从start开始到end用str替换\n\n### StringBuffer的反转功能\n- public StringBuffer reverse():\t#字符串反转\n\n### StringBuffer的截取功能\n* public String substring(int start):\t#从指定位置截取到末尾\n* public String substring(int start,int end):\t#截取从指定位置开始到结束位置，包括开始位置，不包括结束位置\n* 注意事项\n  * 返回值类型不再是StringBuffer本身\n\n\n### String -- StringBuffer转换\n\n- 通过构造方法 \n  \n  ```java\n  StringBuffer sb = new StringBuffer(\"abc\");\n  sout(sb);\n  ```\n  \n- 通过append()方法\n  \n  ```java\n  StringBuffer sb1 = new StringBuffer();\n  sb1.append(\"abc\");\n  sout(sb1);\n  ```\n  \n  \n\n### StringBuffer -- String转换\n\n- 通过构造方法\n\n  ```java\n  StringBuffer sb1 = new StringBuffer(\"abc\");\n  Stirng s = new String(sb1)\n  sout(s);\n  ```\n\n  \n\n- 通过toString()方法\n\n  ```java\n  String s1= sb1.toString();\n  sout(s1);\n  ```\n\n  \n\n- 通过subString(0,length);\n\n  ```java\n  String s2 =sb1.substring(0,sb.length());\n  sout(s2);\n  ```\n\n  ","slug":"StringBuffer的认识","published":1,"updated":"2022-04-14T19:32:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f4t0009foo360i3725v","content":"<h3 id=\"StringBuffer的构造方法：\"><a href=\"#StringBuffer的构造方法：\" class=\"headerlink\" title=\"StringBuffer的构造方法：\"></a>StringBuffer的构造方法：</h3><ul>\n<li>public StringBuffer():无参构造方法<ul>\n<li>public StringBuffer(int capacity):指定容量的字符串缓冲区对象</li>\n<li>public StringBuffer(String str):指定字符串内容的字符串缓冲区对象</li>\n</ul>\n</li>\n<li>B:StringBuffer的方法：<ul>\n<li>public int capacity()：返回当前容量。\t理论值(不掌握)</li>\n<li>public int length():返回长度（字符数）。 实际值</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"StringBuffer的添加功能\"><a href=\"#StringBuffer的添加功能\" class=\"headerlink\" title=\"StringBuffer的添加功能\"></a>StringBuffer的添加功能</h3><ul>\n<li><p>public StringBuffer append(String str):</p>\n<ul>\n<li>可以把任意类型数据添加到字符串缓冲区里面,并返回字符串缓冲区本身</li>\n</ul>\n</li>\n<li><p>public StringBuffer insert(int offset,String str):</p>\n<ul>\n<li>在指定位置把任意类型的数据插入到字符串缓冲区里面,并返回字符串缓冲区本身<br>StringBuffer是字符串缓冲区,当new的时候是在堆内存创建了一个对象,底层是一个长度为16的字符数组<br>当调用添加的方法时,不会再重新创建对象,在不断向原缓冲区添加字符</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"StringBuffer的删除功能\"><a href=\"#StringBuffer的删除功能\" class=\"headerlink\" title=\"StringBuffer的删除功能\"></a>StringBuffer的删除功能</h3><ul>\n<li><p>public StringBuffer deleteCharAt(int index):<br>删除指定位置的字符，并返回本身</p>\n</li>\n<li><p>public StringBuffer delete(int start,int end):</p>\n</li>\n<li><p>删除从指定位置开始指定位置结束的内容，并返回本身</p>\n<pre><code class=\"java\">StringBuffer sb = new StringBuffer();\nsb.append(&quot;heima&quot;);\nsb.delete(0, sb.length());\t\t\t//清空缓冲区\nSystem.out.println(sb);\n//sb = new StringBuffer();\t//不要用这种方式清空缓冲区,原来的会变成垃圾,浪费内存\n//System.out.println(sb);\n</code></pre>\n</li>\n</ul>\n<h3 id=\"StringBuffer的替换功能\"><a href=\"#StringBuffer的替换功能\" class=\"headerlink\" title=\"StringBuffer的替换功能\"></a>StringBuffer的替换功能</h3><ul>\n<li>public StringBuffer replace(int start,int end,String str):\t#从start开始到end用str替换</li>\n</ul>\n<h3 id=\"StringBuffer的反转功能\"><a href=\"#StringBuffer的反转功能\" class=\"headerlink\" title=\"StringBuffer的反转功能\"></a>StringBuffer的反转功能</h3><ul>\n<li>public StringBuffer reverse():\t#字符串反转</li>\n</ul>\n<h3 id=\"StringBuffer的截取功能\"><a href=\"#StringBuffer的截取功能\" class=\"headerlink\" title=\"StringBuffer的截取功能\"></a>StringBuffer的截取功能</h3><ul>\n<li>public String substring(int start):\t#从指定位置截取到末尾</li>\n<li>public String substring(int start,int end):\t#截取从指定位置开始到结束位置，包括开始位置，不包括结束位置</li>\n<li>注意事项<ul>\n<li>返回值类型不再是StringBuffer本身</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"String-–-StringBuffer转换\"><a href=\"#String-–-StringBuffer转换\" class=\"headerlink\" title=\"String – StringBuffer转换\"></a>String – StringBuffer转换</h3><ul>\n<li><p>通过构造方法 </p>\n<pre><code class=\"java\">StringBuffer sb = new StringBuffer(&quot;abc&quot;);\nsout(sb);\n</code></pre>\n</li>\n<li><p>通过append()方法</p>\n<pre><code class=\"java\">StringBuffer sb1 = new StringBuffer();\nsb1.append(&quot;abc&quot;);\nsout(sb1);\n</code></pre>\n</li>\n</ul>\n<h3 id=\"StringBuffer-–-String转换\"><a href=\"#StringBuffer-–-String转换\" class=\"headerlink\" title=\"StringBuffer – String转换\"></a>StringBuffer – String转换</h3><ul>\n<li><p>通过构造方法</p>\n<pre><code class=\"java\">StringBuffer sb1 = new StringBuffer(&quot;abc&quot;);\nStirng s = new String(sb1)\nsout(s);\n</code></pre>\n</li>\n<li><p>通过toString()方法</p>\n<pre><code class=\"java\">String s1= sb1.toString();\nsout(s1);\n</code></pre>\n</li>\n<li><p>通过subString(0,length);</p>\n<pre><code class=\"java\">String s2 =sb1.substring(0,sb.length());\nsout(s2);\n</code></pre>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"StringBuffer的构造方法：\"><a href=\"#StringBuffer的构造方法：\" class=\"headerlink\" title=\"StringBuffer的构造方法：\"></a>StringBuffer的构造方法：</h3><ul>\n<li>public StringBuffer():无参构造方法<ul>\n<li>public StringBuffer(int capacity):指定容量的字符串缓冲区对象</li>\n<li>public StringBuffer(String str):指定字符串内容的字符串缓冲区对象</li>\n</ul>\n</li>\n<li>B:StringBuffer的方法：<ul>\n<li>public int capacity()：返回当前容量。\t理论值(不掌握)</li>\n<li>public int length():返回长度（字符数）。 实际值</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"StringBuffer的添加功能\"><a href=\"#StringBuffer的添加功能\" class=\"headerlink\" title=\"StringBuffer的添加功能\"></a>StringBuffer的添加功能</h3><ul>\n<li><p>public StringBuffer append(String str):</p>\n<ul>\n<li>可以把任意类型数据添加到字符串缓冲区里面,并返回字符串缓冲区本身</li>\n</ul>\n</li>\n<li><p>public StringBuffer insert(int offset,String str):</p>\n<ul>\n<li>在指定位置把任意类型的数据插入到字符串缓冲区里面,并返回字符串缓冲区本身<br>StringBuffer是字符串缓冲区,当new的时候是在堆内存创建了一个对象,底层是一个长度为16的字符数组<br>当调用添加的方法时,不会再重新创建对象,在不断向原缓冲区添加字符</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"StringBuffer的删除功能\"><a href=\"#StringBuffer的删除功能\" class=\"headerlink\" title=\"StringBuffer的删除功能\"></a>StringBuffer的删除功能</h3><ul>\n<li><p>public StringBuffer deleteCharAt(int index):<br>删除指定位置的字符，并返回本身</p>\n</li>\n<li><p>public StringBuffer delete(int start,int end):</p>\n</li>\n<li><p>删除从指定位置开始指定位置结束的内容，并返回本身</p>\n<pre><code class=\"java\">StringBuffer sb = new StringBuffer();\nsb.append(&quot;heima&quot;);\nsb.delete(0, sb.length());\t\t\t//清空缓冲区\nSystem.out.println(sb);\n//sb = new StringBuffer();\t//不要用这种方式清空缓冲区,原来的会变成垃圾,浪费内存\n//System.out.println(sb);\n</code></pre>\n</li>\n</ul>\n<h3 id=\"StringBuffer的替换功能\"><a href=\"#StringBuffer的替换功能\" class=\"headerlink\" title=\"StringBuffer的替换功能\"></a>StringBuffer的替换功能</h3><ul>\n<li>public StringBuffer replace(int start,int end,String str):\t#从start开始到end用str替换</li>\n</ul>\n<h3 id=\"StringBuffer的反转功能\"><a href=\"#StringBuffer的反转功能\" class=\"headerlink\" title=\"StringBuffer的反转功能\"></a>StringBuffer的反转功能</h3><ul>\n<li>public StringBuffer reverse():\t#字符串反转</li>\n</ul>\n<h3 id=\"StringBuffer的截取功能\"><a href=\"#StringBuffer的截取功能\" class=\"headerlink\" title=\"StringBuffer的截取功能\"></a>StringBuffer的截取功能</h3><ul>\n<li>public String substring(int start):\t#从指定位置截取到末尾</li>\n<li>public String substring(int start,int end):\t#截取从指定位置开始到结束位置，包括开始位置，不包括结束位置</li>\n<li>注意事项<ul>\n<li>返回值类型不再是StringBuffer本身</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"String-–-StringBuffer转换\"><a href=\"#String-–-StringBuffer转换\" class=\"headerlink\" title=\"String – StringBuffer转换\"></a>String – StringBuffer转换</h3><ul>\n<li><p>通过构造方法 </p>\n<pre><code class=\"java\">StringBuffer sb = new StringBuffer(&quot;abc&quot;);\nsout(sb);\n</code></pre>\n</li>\n<li><p>通过append()方法</p>\n<pre><code class=\"java\">StringBuffer sb1 = new StringBuffer();\nsb1.append(&quot;abc&quot;);\nsout(sb1);\n</code></pre>\n</li>\n</ul>\n<h3 id=\"StringBuffer-–-String转换\"><a href=\"#StringBuffer-–-String转换\" class=\"headerlink\" title=\"StringBuffer – String转换\"></a>StringBuffer – String转换</h3><ul>\n<li><p>通过构造方法</p>\n<pre><code class=\"java\">StringBuffer sb1 = new StringBuffer(&quot;abc&quot;);\nStirng s = new String(sb1)\nsout(s);\n</code></pre>\n</li>\n<li><p>通过toString()方法</p>\n<pre><code class=\"java\">String s1= sb1.toString();\nsout(s1);\n</code></pre>\n</li>\n<li><p>通过subString(0,length);</p>\n<pre><code class=\"java\">String s2 =sb1.substring(0,sb.length());\nsout(s2);\n</code></pre>\n</li>\n</ul>\n"},{"title":"extends继承","date":"2018-11-23T04:22:12.000Z","_content":"\n- ### 子类中所有的构造方法默认都会访问父类中空参数的构造方法。\n\n  - 为什么呢?\n    - 因为子类会继承父类中的数据，可能还会使用父类的数据。所以，子类初始化之前，一定要先完成父类数据的初始化。\n\n  - 其实：\n\n### \t每一个构造方法的第一条语句默认都是：super() Object类最顶层的父类。\n\n- ### 父类没有无参构造方法,子类怎么办?\n\n  - super解决\n\n  - this解决\n\n  - 注意事项\n    - super(…)或者this(….)必须出现在构造方法的第一条语句上\n\n**new创建一个对象，子类总会先访问类中空的构造方法，默认第一句为super()；**\n\n例子：\n\n```java\nclass Test1_Extends{\n\t public static void main(String[] args) {\n\t\t Zi z=new Zi();\n\t\t System.out.println(z.getName()+\"...\"+z.getAge());\n\t\t System.out.println(\"————————————————————————————\");\n\t\t Fu f=new Zi_1();     //父类引用指向子类对象，向上转型;\n\t\t //Zi_1 zi=(Zi_1)f;\n\t\t System.out.println(f.getName()+\"...\"+f.getAge());\n\t }\n}\nclass Fu{\n\tprivate String name;\n\tprivate int age;\n\tpublic Fu(){\n\t\tSystem.out.println(\"空参构造\");\n\t}\n\tpublic Fu(String name,int age){\n\t\tthis.name=name;\n\t\tthis.age=age;\n\t\tSystem.out.println(\"fu有参构造\");\n\t}\n\tpublic void setName(String name){\n\t\tthis.name=name;\n\t}\n\tpublic String getName(){\n\t\treturn name;\n\t}\n\tpublic void setAge(int age){\n\t\tthis.age=age;\n\t}\n\tpublic int getAge(){\n\t\treturn age;\n\t}\n}\n\nclass Zi extends Fu{\t\t// ①父类无空构造方法时，super的方式解决\n\tpublic Zi(){\n\t\tsuper(\"张三\",23);\n\t\tSystem.out.println(\"zi空参构造\");\n\t}\n}\n\nclass Zi_1 extends Fu{\t\t// ②父类无空构造方法时，this的方式解决\n\tpublic Zi_1(){\n\t\tthis(\"李四\",24);\n\t\tSystem.out.println(\"Zi_1空参构造\");\n\t}\n\tpublic Zi_1(String name,int age){\n\t\tsuper(name,age);\n\t\tSystem.out.println(\"Zi_1有参构造\");\n\t}\n}\n\n输出为：\n\nfu有参构造\nzi空参构造\n张三...23\n————————————————————————————\nfu有参构造\nZi_1有参构造\nZi_1空参构造\n李四...24\n```","source":"_posts/extends继承.md","raw":"---\ntitle: extends继承\ndate: 2018-11-23 12:22:12\ncategories: \n  - 学习笔记\n---\n\n- ### 子类中所有的构造方法默认都会访问父类中空参数的构造方法。\n\n  - 为什么呢?\n    - 因为子类会继承父类中的数据，可能还会使用父类的数据。所以，子类初始化之前，一定要先完成父类数据的初始化。\n\n  - 其实：\n\n### \t每一个构造方法的第一条语句默认都是：super() Object类最顶层的父类。\n\n- ### 父类没有无参构造方法,子类怎么办?\n\n  - super解决\n\n  - this解决\n\n  - 注意事项\n    - super(…)或者this(….)必须出现在构造方法的第一条语句上\n\n**new创建一个对象，子类总会先访问类中空的构造方法，默认第一句为super()；**\n\n例子：\n\n```java\nclass Test1_Extends{\n\t public static void main(String[] args) {\n\t\t Zi z=new Zi();\n\t\t System.out.println(z.getName()+\"...\"+z.getAge());\n\t\t System.out.println(\"————————————————————————————\");\n\t\t Fu f=new Zi_1();     //父类引用指向子类对象，向上转型;\n\t\t //Zi_1 zi=(Zi_1)f;\n\t\t System.out.println(f.getName()+\"...\"+f.getAge());\n\t }\n}\nclass Fu{\n\tprivate String name;\n\tprivate int age;\n\tpublic Fu(){\n\t\tSystem.out.println(\"空参构造\");\n\t}\n\tpublic Fu(String name,int age){\n\t\tthis.name=name;\n\t\tthis.age=age;\n\t\tSystem.out.println(\"fu有参构造\");\n\t}\n\tpublic void setName(String name){\n\t\tthis.name=name;\n\t}\n\tpublic String getName(){\n\t\treturn name;\n\t}\n\tpublic void setAge(int age){\n\t\tthis.age=age;\n\t}\n\tpublic int getAge(){\n\t\treturn age;\n\t}\n}\n\nclass Zi extends Fu{\t\t// ①父类无空构造方法时，super的方式解决\n\tpublic Zi(){\n\t\tsuper(\"张三\",23);\n\t\tSystem.out.println(\"zi空参构造\");\n\t}\n}\n\nclass Zi_1 extends Fu{\t\t// ②父类无空构造方法时，this的方式解决\n\tpublic Zi_1(){\n\t\tthis(\"李四\",24);\n\t\tSystem.out.println(\"Zi_1空参构造\");\n\t}\n\tpublic Zi_1(String name,int age){\n\t\tsuper(name,age);\n\t\tSystem.out.println(\"Zi_1有参构造\");\n\t}\n}\n\n输出为：\n\nfu有参构造\nzi空参构造\n张三...23\n————————————————————————————\nfu有参构造\nZi_1有参构造\nZi_1空参构造\n李四...24\n```","slug":"extends继承","published":1,"updated":"2022-04-14T19:33:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f4v000bfoo376xu44mj","content":"<ul>\n<li><h3 id=\"子类中所有的构造方法默认都会访问父类中空参数的构造方法。\"><a href=\"#子类中所有的构造方法默认都会访问父类中空参数的构造方法。\" class=\"headerlink\" title=\"子类中所有的构造方法默认都会访问父类中空参数的构造方法。\"></a>子类中所有的构造方法默认都会访问父类中空参数的构造方法。</h3><ul>\n<li><p>为什么呢?</p>\n<ul>\n<li>因为子类会继承父类中的数据，可能还会使用父类的数据。所以，子类初始化之前，一定要先完成父类数据的初始化。</li>\n</ul>\n</li>\n<li><p>其实：</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"每一个构造方法的第一条语句默认都是：super-Object类最顶层的父类。\"><a href=\"#每一个构造方法的第一条语句默认都是：super-Object类最顶层的父类。\" class=\"headerlink\" title=\"每一个构造方法的第一条语句默认都是：super() Object类最顶层的父类。\"></a>每一个构造方法的第一条语句默认都是：super() Object类最顶层的父类。</h3><ul>\n<li><h3 id=\"父类没有无参构造方法-子类怎么办\"><a href=\"#父类没有无参构造方法-子类怎么办\" class=\"headerlink\" title=\"父类没有无参构造方法,子类怎么办?\"></a>父类没有无参构造方法,子类怎么办?</h3><ul>\n<li><p>super解决</p>\n</li>\n<li><p>this解决</p>\n</li>\n<li><p>注意事项</p>\n<ul>\n<li>super(…)或者this(….)必须出现在构造方法的第一条语句上</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>new创建一个对象，子类总会先访问类中空的构造方法，默认第一句为super()；</strong></p>\n<p>例子：</p>\n<pre><code class=\"java\">class Test1_Extends&#123;\n     public static void main(String[] args) &#123;\n         Zi z=new Zi();\n         System.out.println(z.getName()+&quot;...&quot;+z.getAge());\n         System.out.println(&quot;————————————————————————————&quot;);\n         Fu f=new Zi_1();     //父类引用指向子类对象，向上转型;\n         //Zi_1 zi=(Zi_1)f;\n         System.out.println(f.getName()+&quot;...&quot;+f.getAge());\n     &#125;\n&#125;\nclass Fu&#123;\n    private String name;\n    private int age;\n    public Fu()&#123;\n        System.out.println(&quot;空参构造&quot;);\n    &#125;\n    public Fu(String name,int age)&#123;\n        this.name=name;\n        this.age=age;\n        System.out.println(&quot;fu有参构造&quot;);\n    &#125;\n    public void setName(String name)&#123;\n        this.name=name;\n    &#125;\n    public String getName()&#123;\n        return name;\n    &#125;\n    public void setAge(int age)&#123;\n        this.age=age;\n    &#125;\n    public int getAge()&#123;\n        return age;\n    &#125;\n&#125;\n\nclass Zi extends Fu&#123;\t\t// ①父类无空构造方法时，super的方式解决\n    public Zi()&#123;\n        super(&quot;张三&quot;,23);\n        System.out.println(&quot;zi空参构造&quot;);\n    &#125;\n&#125;\n\nclass Zi_1 extends Fu&#123;\t\t// ②父类无空构造方法时，this的方式解决\n    public Zi_1()&#123;\n        this(&quot;李四&quot;,24);\n        System.out.println(&quot;Zi_1空参构造&quot;);\n    &#125;\n    public Zi_1(String name,int age)&#123;\n        super(name,age);\n        System.out.println(&quot;Zi_1有参构造&quot;);\n    &#125;\n&#125;\n\n输出为：\n\nfu有参构造\nzi空参构造\n张三...23\n————————————————————————————\nfu有参构造\nZi_1有参构造\nZi_1空参构造\n李四...24\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><h3 id=\"子类中所有的构造方法默认都会访问父类中空参数的构造方法。\"><a href=\"#子类中所有的构造方法默认都会访问父类中空参数的构造方法。\" class=\"headerlink\" title=\"子类中所有的构造方法默认都会访问父类中空参数的构造方法。\"></a>子类中所有的构造方法默认都会访问父类中空参数的构造方法。</h3><ul>\n<li><p>为什么呢?</p>\n<ul>\n<li>因为子类会继承父类中的数据，可能还会使用父类的数据。所以，子类初始化之前，一定要先完成父类数据的初始化。</li>\n</ul>\n</li>\n<li><p>其实：</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"每一个构造方法的第一条语句默认都是：super-Object类最顶层的父类。\"><a href=\"#每一个构造方法的第一条语句默认都是：super-Object类最顶层的父类。\" class=\"headerlink\" title=\"每一个构造方法的第一条语句默认都是：super() Object类最顶层的父类。\"></a>每一个构造方法的第一条语句默认都是：super() Object类最顶层的父类。</h3><ul>\n<li><h3 id=\"父类没有无参构造方法-子类怎么办\"><a href=\"#父类没有无参构造方法-子类怎么办\" class=\"headerlink\" title=\"父类没有无参构造方法,子类怎么办?\"></a>父类没有无参构造方法,子类怎么办?</h3><ul>\n<li><p>super解决</p>\n</li>\n<li><p>this解决</p>\n</li>\n<li><p>注意事项</p>\n<ul>\n<li>super(…)或者this(….)必须出现在构造方法的第一条语句上</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>new创建一个对象，子类总会先访问类中空的构造方法，默认第一句为super()；</strong></p>\n<p>例子：</p>\n<pre><code class=\"java\">class Test1_Extends&#123;\n     public static void main(String[] args) &#123;\n         Zi z=new Zi();\n         System.out.println(z.getName()+&quot;...&quot;+z.getAge());\n         System.out.println(&quot;————————————————————————————&quot;);\n         Fu f=new Zi_1();     //父类引用指向子类对象，向上转型;\n         //Zi_1 zi=(Zi_1)f;\n         System.out.println(f.getName()+&quot;...&quot;+f.getAge());\n     &#125;\n&#125;\nclass Fu&#123;\n    private String name;\n    private int age;\n    public Fu()&#123;\n        System.out.println(&quot;空参构造&quot;);\n    &#125;\n    public Fu(String name,int age)&#123;\n        this.name=name;\n        this.age=age;\n        System.out.println(&quot;fu有参构造&quot;);\n    &#125;\n    public void setName(String name)&#123;\n        this.name=name;\n    &#125;\n    public String getName()&#123;\n        return name;\n    &#125;\n    public void setAge(int age)&#123;\n        this.age=age;\n    &#125;\n    public int getAge()&#123;\n        return age;\n    &#125;\n&#125;\n\nclass Zi extends Fu&#123;\t\t// ①父类无空构造方法时，super的方式解决\n    public Zi()&#123;\n        super(&quot;张三&quot;,23);\n        System.out.println(&quot;zi空参构造&quot;);\n    &#125;\n&#125;\n\nclass Zi_1 extends Fu&#123;\t\t// ②父类无空构造方法时，this的方式解决\n    public Zi_1()&#123;\n        this(&quot;李四&quot;,24);\n        System.out.println(&quot;Zi_1空参构造&quot;);\n    &#125;\n    public Zi_1(String name,int age)&#123;\n        super(name,age);\n        System.out.println(&quot;Zi_1有参构造&quot;);\n    &#125;\n&#125;\n\n输出为：\n\nfu有参构造\nzi空参构造\n张三...23\n————————————————————————————\nfu有参构造\nZi_1有参构造\nZi_1空参构造\n李四...24\n</code></pre>\n"},{"title":"卡iov进度,InitializingIOV卡住,ESXI许可证","date":"2019-05-10T05:28:21.000Z","_content":"\nVMware vSphere 6 Enterprise Plus(6.7许可证)\n0A65P-00HD0-3Z5M1-M097M-22P7H\n\n**安装**\n\n**Initializing IOV卡住**\n\n如果你是4代酷睿, 你会遇到第一个bug. 卡在Initializing IOV. 解决方案就是进入之前按住shift + O. 然后输入noIOMMU, 注意最前面有个空格的. 回车.\n![](/images/卡iov进度,InitializingIOV卡住,ESXI许可证.png)\n\n之后安装好了, 要启动之前, 还需要shift + O. 然后输入\n\n<!-- more -->\n\n> noIOMMU\n\n最后进入系统后, 管理界面 > F2 进入配置 > 登录 > 故障解决选项 > 启用Esxi Shell > alt + F1 > 登录 > 执行\n\n> esxcli system settings kernel set --setting=noIOMMU -v TRUE \n\nalt + F2退出, 然后可以再禁用ESXI shell.","source":"_posts/卡iov进度,Initializing_IOV卡住，ESXI许可证.md","raw":"---\ntitle: 卡iov进度,InitializingIOV卡住,ESXI许可证\ndate: 2019-05-10 13:28:21\ncategories: \n  - 百思其解\n---\n\nVMware vSphere 6 Enterprise Plus(6.7许可证)\n0A65P-00HD0-3Z5M1-M097M-22P7H\n\n**安装**\n\n**Initializing IOV卡住**\n\n如果你是4代酷睿, 你会遇到第一个bug. 卡在Initializing IOV. 解决方案就是进入之前按住shift + O. 然后输入noIOMMU, 注意最前面有个空格的. 回车.\n![](/images/卡iov进度,InitializingIOV卡住,ESXI许可证.png)\n\n之后安装好了, 要启动之前, 还需要shift + O. 然后输入\n\n<!-- more -->\n\n> noIOMMU\n\n最后进入系统后, 管理界面 > F2 进入配置 > 登录 > 故障解决选项 > 启用Esxi Shell > alt + F1 > 登录 > 执行\n\n> esxcli system settings kernel set --setting=noIOMMU -v TRUE \n\nalt + F2退出, 然后可以再禁用ESXI shell.","slug":"卡iov进度,Initializing_IOV卡住，ESXI许可证","published":1,"updated":"2022-04-15T21:15:36.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f4w000cfoo33y9208sh","content":"<p>VMware vSphere 6 Enterprise Plus(6.7许可证)<br>0A65P-00HD0-3Z5M1-M097M-22P7H</p>\n<p><strong>安装</strong></p>\n<p><strong>Initializing IOV卡住</strong></p>\n<p>如果你是4代酷睿, 你会遇到第一个bug. 卡在Initializing IOV. 解决方案就是进入之前按住shift + O. 然后输入noIOMMU, 注意最前面有个空格的. 回车.<br><img src=\"/images/%E5%8D%A1iov%E8%BF%9B%E5%BA%A6,InitializingIOV%E5%8D%A1%E4%BD%8F,ESXI%E8%AE%B8%E5%8F%AF%E8%AF%81.png\"></p>\n<p>之后安装好了, 要启动之前, 还需要shift + O. 然后输入</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>noIOMMU</p>\n</blockquote>\n<p>最后进入系统后, 管理界面 &gt; F2 进入配置 &gt; 登录 &gt; 故障解决选项 &gt; 启用Esxi Shell &gt; alt + F1 &gt; 登录 &gt; 执行</p>\n<blockquote>\n<p>esxcli system settings kernel set –setting&#x3D;noIOMMU -v TRUE </p>\n</blockquote>\n<p>alt + F2退出, 然后可以再禁用ESXI shell.</p>\n","site":{"data":{}},"excerpt":"<p>VMware vSphere 6 Enterprise Plus(6.7许可证)<br>0A65P-00HD0-3Z5M1-M097M-22P7H</p>\n<p><strong>安装</strong></p>\n<p><strong>Initializing IOV卡住</strong></p>\n<p>如果你是4代酷睿, 你会遇到第一个bug. 卡在Initializing IOV. 解决方案就是进入之前按住shift + O. 然后输入noIOMMU, 注意最前面有个空格的. 回车.<br><img src=\"/images/%E5%8D%A1iov%E8%BF%9B%E5%BA%A6,InitializingIOV%E5%8D%A1%E4%BD%8F,ESXI%E8%AE%B8%E5%8F%AF%E8%AF%81.png\"></p>\n<p>之后安装好了, 要启动之前, 还需要shift + O. 然后输入</p>","more":"<blockquote>\n<p>noIOMMU</p>\n</blockquote>\n<p>最后进入系统后, 管理界面 &gt; F2 进入配置 &gt; 登录 &gt; 故障解决选项 &gt; 启用Esxi Shell &gt; alt + F1 &gt; 登录 &gt; 执行</p>\n<blockquote>\n<p>esxcli system settings kernel set –setting&#x3D;noIOMMU -v TRUE </p>\n</blockquote>\n<p>alt + F2退出, 然后可以再禁用ESXI shell.</p>"},{"title":"多态","date":"2018-11-25T04:30:12.000Z","_content":"\n### 上代码示例：\n\n```java\nclass  Test_SuperMan{\n\tpublic static void main(String[] args) {\n\t\tPerson p = new SuperMan();//多态特征3：父类引用指向子类对象，向上转型\n\t\tSystem.out.println(p.name);\n\t\tp.business();\n\t\tSuperMan s = (SuperMan)p;\t//向下转型\n\t\tSystem.out.println(s.name);\n\t\ts.fly();\n\t}\n}\nclass Person\n{\n\tpublic Person(){\n\t\tSystem.out.println(\"父类构造\");\n\t}\n\tString name=\"哈利\";\n\tpublic void business(){\n\t\tSystem.out.println(\"谈生意\");\n\t}\n}\nclass SuperMan extends Person\t//SuperMan继承Person类\t多态特征1：继承\n{\n\tpublic SuperMan(){\n\t\tSystem.out.println(\"子类构造\");\n\t}\n\tString name=\"波特\";\n\tpublic void business(){\t\t\t//多态特征2：重写\n\t\tSystem.out.println(\"谈几个亿的大生意\");\n\t}\n\tpublic void fly(){\n\t\tSystem.out.println(\"飞出来\");\n\t}\n}\n```","source":"_posts/多态.md","raw":"---\ntitle: 多态\ndate: 2018-11-25 12:30:12\ncategories: \n  - 学习笔记\n---\n\n### 上代码示例：\n\n```java\nclass  Test_SuperMan{\n\tpublic static void main(String[] args) {\n\t\tPerson p = new SuperMan();//多态特征3：父类引用指向子类对象，向上转型\n\t\tSystem.out.println(p.name);\n\t\tp.business();\n\t\tSuperMan s = (SuperMan)p;\t//向下转型\n\t\tSystem.out.println(s.name);\n\t\ts.fly();\n\t}\n}\nclass Person\n{\n\tpublic Person(){\n\t\tSystem.out.println(\"父类构造\");\n\t}\n\tString name=\"哈利\";\n\tpublic void business(){\n\t\tSystem.out.println(\"谈生意\");\n\t}\n}\nclass SuperMan extends Person\t//SuperMan继承Person类\t多态特征1：继承\n{\n\tpublic SuperMan(){\n\t\tSystem.out.println(\"子类构造\");\n\t}\n\tString name=\"波特\";\n\tpublic void business(){\t\t\t//多态特征2：重写\n\t\tSystem.out.println(\"谈几个亿的大生意\");\n\t}\n\tpublic void fly(){\n\t\tSystem.out.println(\"飞出来\");\n\t}\n}\n```","slug":"多态","published":1,"updated":"2022-04-14T19:34:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f4y000ffoo37wnu2v4h","content":"<h3 id=\"上代码示例：\"><a href=\"#上代码示例：\" class=\"headerlink\" title=\"上代码示例：\"></a>上代码示例：</h3><pre><code class=\"java\">class  Test_SuperMan&#123;\n    public static void main(String[] args) &#123;\n        Person p = new SuperMan();//多态特征3：父类引用指向子类对象，向上转型\n        System.out.println(p.name);\n        p.business();\n        SuperMan s = (SuperMan)p;\t//向下转型\n        System.out.println(s.name);\n        s.fly();\n    &#125;\n&#125;\nclass Person\n&#123;\n    public Person()&#123;\n        System.out.println(&quot;父类构造&quot;);\n    &#125;\n    String name=&quot;哈利&quot;;\n    public void business()&#123;\n        System.out.println(&quot;谈生意&quot;);\n    &#125;\n&#125;\nclass SuperMan extends Person\t//SuperMan继承Person类\t多态特征1：继承\n&#123;\n    public SuperMan()&#123;\n        System.out.println(&quot;子类构造&quot;);\n    &#125;\n    String name=&quot;波特&quot;;\n    public void business()&#123;\t\t\t//多态特征2：重写\n        System.out.println(&quot;谈几个亿的大生意&quot;);\n    &#125;\n    public void fly()&#123;\n        System.out.println(&quot;飞出来&quot;);\n    &#125;\n&#125;\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"上代码示例：\"><a href=\"#上代码示例：\" class=\"headerlink\" title=\"上代码示例：\"></a>上代码示例：</h3><pre><code class=\"java\">class  Test_SuperMan&#123;\n    public static void main(String[] args) &#123;\n        Person p = new SuperMan();//多态特征3：父类引用指向子类对象，向上转型\n        System.out.println(p.name);\n        p.business();\n        SuperMan s = (SuperMan)p;\t//向下转型\n        System.out.println(s.name);\n        s.fly();\n    &#125;\n&#125;\nclass Person\n&#123;\n    public Person()&#123;\n        System.out.println(&quot;父类构造&quot;);\n    &#125;\n    String name=&quot;哈利&quot;;\n    public void business()&#123;\n        System.out.println(&quot;谈生意&quot;);\n    &#125;\n&#125;\nclass SuperMan extends Person\t//SuperMan继承Person类\t多态特征1：继承\n&#123;\n    public SuperMan()&#123;\n        System.out.println(&quot;子类构造&quot;);\n    &#125;\n    String name=&quot;波特&quot;;\n    public void business()&#123;\t\t\t//多态特征2：重写\n        System.out.println(&quot;谈几个亿的大生意&quot;);\n    &#125;\n    public void fly()&#123;\n        System.out.println(&quot;飞出来&quot;);\n    &#125;\n&#125;\n</code></pre>\n"},{"title":"小记小提示","date":"2018-11-24T04:33:18.000Z","_content":"\nfinal最终的；\n\t修饰类，类不能被继承；\n\t修饰变量，变量变为常量，只能被赋值一次；\n\t修饰方法，方法不能被重写；\n\n​\t成员变量的默认初始化值是无效值\n​\t基本类型，是值不能被改变\n​\t引用类型，是地址值不能被改变,对象中的属性可以改变\n\n```java\nfinal Person p = new Person(\"张三\",23);\n//p = new Person(\"李四\",24);\t\t错误，引用地址值不可被改变。\np.setName(\"李四\");\t\t\t//对象中的属性可以改变。\n```\n","source":"_posts/小记小提示.md","raw":"---\ntitle: 小记小提示\ndate: 2018-11-24 12:33:18\ncategories: \n  - 学习笔记\n---\n\nfinal最终的；\n\t修饰类，类不能被继承；\n\t修饰变量，变量变为常量，只能被赋值一次；\n\t修饰方法，方法不能被重写；\n\n​\t成员变量的默认初始化值是无效值\n​\t基本类型，是值不能被改变\n​\t引用类型，是地址值不能被改变,对象中的属性可以改变\n\n```java\nfinal Person p = new Person(\"张三\",23);\n//p = new Person(\"李四\",24);\t\t错误，引用地址值不可被改变。\np.setName(\"李四\");\t\t\t//对象中的属性可以改变。\n```\n","slug":"小记小提示","published":1,"updated":"2022-04-14T19:33:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f4z000gfoo3dutd47ve","content":"<p>final最终的；<br>    修饰类，类不能被继承；<br>    修饰变量，变量变为常量，只能被赋值一次；<br>    修饰方法，方法不能被重写；</p>\n<p>​\t成员变量的默认初始化值是无效值<br>​\t基本类型，是值不能被改变<br>​\t引用类型，是地址值不能被改变,对象中的属性可以改变</p>\n<pre><code class=\"java\">final Person p = new Person(&quot;张三&quot;,23);\n//p = new Person(&quot;李四&quot;,24);\t\t错误，引用地址值不可被改变。\np.setName(&quot;李四&quot;);\t\t\t//对象中的属性可以改变。\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<p>final最终的；<br>    修饰类，类不能被继承；<br>    修饰变量，变量变为常量，只能被赋值一次；<br>    修饰方法，方法不能被重写；</p>\n<p>​\t成员变量的默认初始化值是无效值<br>​\t基本类型，是值不能被改变<br>​\t引用类型，是地址值不能被改变,对象中的属性可以改变</p>\n<pre><code class=\"java\">final Person p = new Person(&quot;张三&quot;,23);\n//p = new Person(&quot;李四&quot;,24);\t\t错误，引用地址值不可被改变。\np.setName(&quot;李四&quot;);\t\t\t//对象中的属性可以改变。\n</code></pre>\n"},{"title":"往与返之话有点多","date":"2020-10-18T16:31:41.000Z","_content":"\n记某次高铁：\n\n这周回家里，也不是有什么事需要回，但肯定也不是说没事就不需要回。家里月饼爸妈拍照说太多吃不完，其实也不多，就三盒，言外之意大概是我们都不回吃不完。。\n\n回去前我在QQ上比较常聊的某群里是这样说的：下周又调休，我准备买个无人机 一个人去一趟张家界。。转头想到父母都没出去游玩过，我还是选择回家里吃月饼吧，So这便是衡量后的结果……\n\n桥圩公路两旁的路灯全都撤走了，我是不知道什么原因，是供电不够？烧钱？晚上出去整个黑麻麻的，桥头第一回合：俩人吃，那烤鱼真不行，鱼皮涂满了盐；桥头第二回合：三人，田螺煲、烧烤，聊了很多，有聊往日的回忆、未来的可期、x通的思想变化、矮哥的懒癌晚期……1点多该结束回去睡觉，我吃得最多，出来前还说肚子饱着呢。。\n\n<!-- more -->\n\n有时候肚子真的好多好多话，好多好多想法，可我依旧不是那么善于表达出来，即便是亲人。\n\n老爸在抖音上发了一些平时工作出去拉货的短视频，也因此给他带来了一些生意上的路子，感谢抖音这个平台(利与弊在这的体现)；曾染好赌，幸在及时止损，祝往后生意兴隆。今晚他和我去的高铁站，带了个斜挎腰包，他去全州县某市场里边看货，我回深圳……\n\n工作群在家期间全部设置了免打扰，但我还是会主动翻看了记录，觉得会不会突然有需要我的地方，其实不会，一来是，调休了同事不便于打扰；二来是，你并不是那么的不可替代；我便签记着一句话：不要过分高看自己的努力，也不要被自己的努力轻易所感动。 尽管一直在便签最醒目的地方，可刚才输入的时候依旧没记起来这句话，不过它的意思我记住了！\n\n最后，计划还是要有的：正好天气凉了，准备一辆自行车，早起骑去上班，当锻炼身体，下班也是。。\n\n深圳北站到了，请各位乘客带好行李!……\n\n\n(记于10.17日晚)\n\n![](/images/往与返之话有点多.png)","source":"_posts/往与返之话有点多.md","raw":"---\ntitle: 往与返之话有点多\ndate: 2020-10-19 00:31:41\ncategories: \n  - 点滴生活\n---\n\n记某次高铁：\n\n这周回家里，也不是有什么事需要回，但肯定也不是说没事就不需要回。家里月饼爸妈拍照说太多吃不完，其实也不多，就三盒，言外之意大概是我们都不回吃不完。。\n\n回去前我在QQ上比较常聊的某群里是这样说的：下周又调休，我准备买个无人机 一个人去一趟张家界。。转头想到父母都没出去游玩过，我还是选择回家里吃月饼吧，So这便是衡量后的结果……\n\n桥圩公路两旁的路灯全都撤走了，我是不知道什么原因，是供电不够？烧钱？晚上出去整个黑麻麻的，桥头第一回合：俩人吃，那烤鱼真不行，鱼皮涂满了盐；桥头第二回合：三人，田螺煲、烧烤，聊了很多，有聊往日的回忆、未来的可期、x通的思想变化、矮哥的懒癌晚期……1点多该结束回去睡觉，我吃得最多，出来前还说肚子饱着呢。。\n\n<!-- more -->\n\n有时候肚子真的好多好多话，好多好多想法，可我依旧不是那么善于表达出来，即便是亲人。\n\n老爸在抖音上发了一些平时工作出去拉货的短视频，也因此给他带来了一些生意上的路子，感谢抖音这个平台(利与弊在这的体现)；曾染好赌，幸在及时止损，祝往后生意兴隆。今晚他和我去的高铁站，带了个斜挎腰包，他去全州县某市场里边看货，我回深圳……\n\n工作群在家期间全部设置了免打扰，但我还是会主动翻看了记录，觉得会不会突然有需要我的地方，其实不会，一来是，调休了同事不便于打扰；二来是，你并不是那么的不可替代；我便签记着一句话：不要过分高看自己的努力，也不要被自己的努力轻易所感动。 尽管一直在便签最醒目的地方，可刚才输入的时候依旧没记起来这句话，不过它的意思我记住了！\n\n最后，计划还是要有的：正好天气凉了，准备一辆自行车，早起骑去上班，当锻炼身体，下班也是。。\n\n深圳北站到了，请各位乘客带好行李!……\n\n\n(记于10.17日晚)\n\n![](/images/往与返之话有点多.png)","slug":"往与返之话有点多","published":1,"updated":"2022-04-15T21:15:36.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f51000jfoo35l6j7tpe","content":"<p>记某次高铁：</p>\n<p>这周回家里，也不是有什么事需要回，但肯定也不是说没事就不需要回。家里月饼爸妈拍照说太多吃不完，其实也不多，就三盒，言外之意大概是我们都不回吃不完。。</p>\n<p>回去前我在QQ上比较常聊的某群里是这样说的：下周又调休，我准备买个无人机 一个人去一趟张家界。。转头想到父母都没出去游玩过，我还是选择回家里吃月饼吧，So这便是衡量后的结果……</p>\n<p>桥圩公路两旁的路灯全都撤走了，我是不知道什么原因，是供电不够？烧钱？晚上出去整个黑麻麻的，桥头第一回合：俩人吃，那烤鱼真不行，鱼皮涂满了盐；桥头第二回合：三人，田螺煲、烧烤，聊了很多，有聊往日的回忆、未来的可期、x通的思想变化、矮哥的懒癌晚期……1点多该结束回去睡觉，我吃得最多，出来前还说肚子饱着呢。。</p>\n<span id=\"more\"></span>\n\n<p>有时候肚子真的好多好多话，好多好多想法，可我依旧不是那么善于表达出来，即便是亲人。</p>\n<p>老爸在抖音上发了一些平时工作出去拉货的短视频，也因此给他带来了一些生意上的路子，感谢抖音这个平台(利与弊在这的体现)；曾染好赌，幸在及时止损，祝往后生意兴隆。今晚他和我去的高铁站，带了个斜挎腰包，他去全州县某市场里边看货，我回深圳……</p>\n<p>工作群在家期间全部设置了免打扰，但我还是会主动翻看了记录，觉得会不会突然有需要我的地方，其实不会，一来是，调休了同事不便于打扰；二来是，你并不是那么的不可替代；我便签记着一句话：不要过分高看自己的努力，也不要被自己的努力轻易所感动。 尽管一直在便签最醒目的地方，可刚才输入的时候依旧没记起来这句话，不过它的意思我记住了！</p>\n<p>最后，计划还是要有的：正好天气凉了，准备一辆自行车，早起骑去上班，当锻炼身体，下班也是。。</p>\n<p>深圳北站到了，请各位乘客带好行李!……</p>\n<p>(记于10.17日晚)</p>\n<p><img src=\"/images/%E5%BE%80%E4%B8%8E%E8%BF%94%E4%B9%8B%E8%AF%9D%E6%9C%89%E7%82%B9%E5%A4%9A.png\"></p>\n","site":{"data":{}},"excerpt":"<p>记某次高铁：</p>\n<p>这周回家里，也不是有什么事需要回，但肯定也不是说没事就不需要回。家里月饼爸妈拍照说太多吃不完，其实也不多，就三盒，言外之意大概是我们都不回吃不完。。</p>\n<p>回去前我在QQ上比较常聊的某群里是这样说的：下周又调休，我准备买个无人机 一个人去一趟张家界。。转头想到父母都没出去游玩过，我还是选择回家里吃月饼吧，So这便是衡量后的结果……</p>\n<p>桥圩公路两旁的路灯全都撤走了，我是不知道什么原因，是供电不够？烧钱？晚上出去整个黑麻麻的，桥头第一回合：俩人吃，那烤鱼真不行，鱼皮涂满了盐；桥头第二回合：三人，田螺煲、烧烤，聊了很多，有聊往日的回忆、未来的可期、x通的思想变化、矮哥的懒癌晚期……1点多该结束回去睡觉，我吃得最多，出来前还说肚子饱着呢。。</p>","more":"<p>有时候肚子真的好多好多话，好多好多想法，可我依旧不是那么善于表达出来，即便是亲人。</p>\n<p>老爸在抖音上发了一些平时工作出去拉货的短视频，也因此给他带来了一些生意上的路子，感谢抖音这个平台(利与弊在这的体现)；曾染好赌，幸在及时止损，祝往后生意兴隆。今晚他和我去的高铁站，带了个斜挎腰包，他去全州县某市场里边看货，我回深圳……</p>\n<p>工作群在家期间全部设置了免打扰，但我还是会主动翻看了记录，觉得会不会突然有需要我的地方，其实不会，一来是，调休了同事不便于打扰；二来是，你并不是那么的不可替代；我便签记着一句话：不要过分高看自己的努力，也不要被自己的努力轻易所感动。 尽管一直在便签最醒目的地方，可刚才输入的时候依旧没记起来这句话，不过它的意思我记住了！</p>\n<p>最后，计划还是要有的：正好天气凉了，准备一辆自行车，早起骑去上班，当锻炼身体，下班也是。。</p>\n<p>深圳北站到了，请各位乘客带好行李!……</p>\n<p>(记于10.17日晚)</p>\n<p><img src=\"/images/%E5%BE%80%E4%B8%8E%E8%BF%94%E4%B9%8B%E8%AF%9D%E6%9C%89%E7%82%B9%E5%A4%9A.png\"></p>"},{"title":"Docker下搭建Nginx+Hexo个人博客","date":"2022-03-15T07:58:05.000Z","_content":"\n### 开篇\n  > 本文内容仅作为练手与折腾，也是结合网上大佬的经验分享进行整理！（看得再多，不如实践出真章）\n\n- ### Docker：环境隔离、资源复用。\n- ### Hexo：快速、简洁且高效的博客框架 \n  - [GitHub: Tommy Chen](https://github.com/hexojs/hexo)\n\n- **想法**：\n  \n  - Hexo容器内产生的静态资源文件，宿主机目录内同步生成\n  - Nginx容器与宿主机的映射，容器内也同步Hexo的静态资源文件\n  - 搭配GitHub，文章随处无障碍提交更新\n  \n- **使用环境&应用**：\n  \n   - CentOS 7.9 + Docker + Hexo + Nginx + Git\n\n# 开始： \n<!-- more -->\n- ## **Dcoker-CE**\n    - 安装，国内服务器推荐使用 [阿里巴巴开源镜像站](https://developer.aliyun.com/mirror/)\n    ```sh \n    ######step1:安装必要的一些系统工具\n    sudo yum install -y yum-utils device-mapper-persistent-data lvm2\n    ######step2:添加软件源信息\n    sudo yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n    ######step3:\n    sudo sed -i 's+download.docker.com+mirrors.aliyun.com/docker-ce+' /etc/yum.repos.d/docker-ce.repo\n    ######step4:更新并安装Docker-CE\n    sudo yum makecache fast\n    sudo yum -y install docker-ce\n    ######step4:开启Docker服务\n    sudo service docker start\n    注意：\n    官方软件源默认启用了最新的软件，您可以通过编辑软件源的方式获取各个版本的软件包。\n    例如官方并没有将测试版本的软件源置为可用，您可以通过以下方式开启。同理可以开启各种测试 版本等。\n    vim /etc/yum.repos.d/docker-ce.repo\n    将[docker-ce-test]下方的enabled=0修改为enabled=1\n    安装指定版本的Docker-CE:\n    Step 1: 查找Docker-CE的版本:\n    yum list docker-ce.x86_64 --showduplicates | sort -r\n    Loading mirror speeds from cached hostfile\n    Loaded plugins: branch, fastestmirror, langpacks\n    docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable\n    docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable\n    Available Packages\n    Step2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.0.ce.1-1.el7.centos)\n    sudo yum -y install docker-ce-[VERSION]\n    ```\n\n\n\n- ## **Hexo**\n  1. **拉取node镜像（hexo基于nodejs环境）** \n     - 命令前加sudo获取root执行权限，本文服务器处于root用户，可忽略。\n\n     ```sh\n     [root@centos ~]# sudo docker pull node\n     Using default tag: latest\n     latest: Pulling from library/node\n     ........\n     Digest: sha256:3f8047ded7bb8e217a879e2d7aabe23d40ed7f975939a384a0f111cc041ea2ed\n     Status: Downloaded newer image for node:latest\n     ```\n  2. **进入node镜像**\n     \n      1. 查看镜像ID，并创建容器\n      2. 同时将本地目录/root/blog/hexo-blog（先创建），映射到容器目录/usr/hexo-blog\n      3. 安装hexo-cli\n      \n        ```sh\n        [root@centos ~]#docker images -a\n        REPOSITORY   TAG       IMAGE ID       CREATED      SIZE\n        node         latest    8778d77035e2   2 days ago   991MB\n      \n        [root@centos ~]#docker run -itd -v /root/blog:/root/blog node\n      \n        [root@centos ~]#docker ps -a\n        CONTAINER ID    IMAGE     ...     STATUS     PORTS     NAMES\n        fccf0c8c6ad1     node     ...       Up                hexo-blog\n        [root@centos ~]#docker exec -it fcc bash            ##进入容器\n        root@fccf0c8c6a:/#npm install hexo-cli -g\t\t\t##安装hexo-cli\n        root@fccf0c8c6a:/#hexo init /root/blog/hexo-blog    ##在指定目录初始化hexo\n        root@fccf0c8c6a:/#cd /root/blog/hexo-blog && npm install\n        root@fccf0c8c6a:/#hexo clean && hexo g              ##清理缓存&生成新的静态目录./public\n        root@fccf0c8c6a:/#exit\t\t\t                    ##退出容器回到宿主机\n        ```\n\n\n\n- ## **Nginx**\n  1. **拉取Nginx镜像**\n  ```sh \n  [root@centos ~]# sudo docker pull nginx\n  Using default tag: latest\n  latest: Pulling from library/nginx\n  ........\n  Status: Downloaded newer image for nginx:latest\n  docker.io/library/nginx:latest\n  ```\n  2. **进入Nginx容器**\n     1. 查看镜像ID，并创建容器\n     ```sh \n     [root@centos ~]# docker images -a\n     REPOSITORY   TAG       IMAGE ID       CREATED       SIZE\n     node         latest    8778d77035e2   2 days ago    991MB\n     nginx        latest    12766a6745ee   2 weeks ago   142MB\n     ```\n     2. 映射对应端口和目录: -p , -v\n        - 看个人需求，我这里直接映射80端口\n        - 静态文件目录：/root/blog/hexo-blog/public，映射到nginx容器目录：/usr/share/nginx/html\n\n        ```sh \n        [root@centos ~]# docker run -itd -p 80:80 -v /root/blog/hexo-blog/public:/usr/share/nginx/html nginx\n        [root@VM-4-8-centos hexo-blog]# docker ps -a\t\t##查看容器列表，up状态即可\n        CONTAINER ID     IMAGE    ...   STATUS               PORTS                     ...\n        2106814a64de     nginx    ...     up      0.0.0.0:81->80/tcp, :::81->80/tcp    ...\n        fccf0c8c6ad1     node     ...     up                                           ...\n        ```\n\n  3. **搭建完成**\n      - 如果完成后无法访问，这时候就要检查下主机防火墙是否对端口未放行，还有像腾讯云主机，它在官网控制台有自己的安全组规则，需要手动设置放行。\n      - 浏览器访问 http://x.x.x.x:port，成功如图：\n      ![](/images/搭建个人博客Docker+Nginx+Hexo1.png)\n\n\n\n- ## **文章更新、自定义...**\n  1. 发表一篇文章，容器内执行\n  ```sh\n  root@fccf0c8c6ad1:# cd /root/blog/hexo-blog\n  root@fccf0c8c6ad1:# hexo new \"hello\"\n  INFO  Validating config\n  INFO  Created: /blog/source/_posts/hello.md\t\t##显示成功创建一篇名为\"hello.md\"的文章\n  ```\n  2. 增加文章等涉及静态资源的改动时，需要让Hexo重新生成一份，以便更新页面显示\n  ```sh \n  root@fccf0c8c6ad1:# cd /root/blog/hexo-blog\n  root@b1b0d1107917:# hexo clean && hexo g\n  [root@centos ~]# docker restart 21\t\t##需要重启Nginx容器进行资源同步\n  ```\n\n  3. 更加详细方法、教程，如更换主题等，请移步[Hexo作者主页]((https://hexo.io/zh-cn/))\n\n\n\n- ## **GitHub（忙，待补充..）**\n\n\n\n\n\n## 尾声：整理不易，欢迎静心敲之；同时希望自己坚持学习、持续输出，与博客一同成长！！\n\n- 待有时间再研究吧步骤整理成自动化脚本。\n","source":"_posts/搭建个人博客Docker+Nginx+Hexo.md","raw":"---\ntitle: Docker下搭建Nginx+Hexo个人博客\ndate: 2022-03-15 15:58:05\ncategories: \n  - 日常捣鼓\n---\n\n### 开篇\n  > 本文内容仅作为练手与折腾，也是结合网上大佬的经验分享进行整理！（看得再多，不如实践出真章）\n\n- ### Docker：环境隔离、资源复用。\n- ### Hexo：快速、简洁且高效的博客框架 \n  - [GitHub: Tommy Chen](https://github.com/hexojs/hexo)\n\n- **想法**：\n  \n  - Hexo容器内产生的静态资源文件，宿主机目录内同步生成\n  - Nginx容器与宿主机的映射，容器内也同步Hexo的静态资源文件\n  - 搭配GitHub，文章随处无障碍提交更新\n  \n- **使用环境&应用**：\n  \n   - CentOS 7.9 + Docker + Hexo + Nginx + Git\n\n# 开始： \n<!-- more -->\n- ## **Dcoker-CE**\n    - 安装，国内服务器推荐使用 [阿里巴巴开源镜像站](https://developer.aliyun.com/mirror/)\n    ```sh \n    ######step1:安装必要的一些系统工具\n    sudo yum install -y yum-utils device-mapper-persistent-data lvm2\n    ######step2:添加软件源信息\n    sudo yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n    ######step3:\n    sudo sed -i 's+download.docker.com+mirrors.aliyun.com/docker-ce+' /etc/yum.repos.d/docker-ce.repo\n    ######step4:更新并安装Docker-CE\n    sudo yum makecache fast\n    sudo yum -y install docker-ce\n    ######step4:开启Docker服务\n    sudo service docker start\n    注意：\n    官方软件源默认启用了最新的软件，您可以通过编辑软件源的方式获取各个版本的软件包。\n    例如官方并没有将测试版本的软件源置为可用，您可以通过以下方式开启。同理可以开启各种测试 版本等。\n    vim /etc/yum.repos.d/docker-ce.repo\n    将[docker-ce-test]下方的enabled=0修改为enabled=1\n    安装指定版本的Docker-CE:\n    Step 1: 查找Docker-CE的版本:\n    yum list docker-ce.x86_64 --showduplicates | sort -r\n    Loading mirror speeds from cached hostfile\n    Loaded plugins: branch, fastestmirror, langpacks\n    docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable\n    docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable\n    Available Packages\n    Step2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.0.ce.1-1.el7.centos)\n    sudo yum -y install docker-ce-[VERSION]\n    ```\n\n\n\n- ## **Hexo**\n  1. **拉取node镜像（hexo基于nodejs环境）** \n     - 命令前加sudo获取root执行权限，本文服务器处于root用户，可忽略。\n\n     ```sh\n     [root@centos ~]# sudo docker pull node\n     Using default tag: latest\n     latest: Pulling from library/node\n     ........\n     Digest: sha256:3f8047ded7bb8e217a879e2d7aabe23d40ed7f975939a384a0f111cc041ea2ed\n     Status: Downloaded newer image for node:latest\n     ```\n  2. **进入node镜像**\n     \n      1. 查看镜像ID，并创建容器\n      2. 同时将本地目录/root/blog/hexo-blog（先创建），映射到容器目录/usr/hexo-blog\n      3. 安装hexo-cli\n      \n        ```sh\n        [root@centos ~]#docker images -a\n        REPOSITORY   TAG       IMAGE ID       CREATED      SIZE\n        node         latest    8778d77035e2   2 days ago   991MB\n      \n        [root@centos ~]#docker run -itd -v /root/blog:/root/blog node\n      \n        [root@centos ~]#docker ps -a\n        CONTAINER ID    IMAGE     ...     STATUS     PORTS     NAMES\n        fccf0c8c6ad1     node     ...       Up                hexo-blog\n        [root@centos ~]#docker exec -it fcc bash            ##进入容器\n        root@fccf0c8c6a:/#npm install hexo-cli -g\t\t\t##安装hexo-cli\n        root@fccf0c8c6a:/#hexo init /root/blog/hexo-blog    ##在指定目录初始化hexo\n        root@fccf0c8c6a:/#cd /root/blog/hexo-blog && npm install\n        root@fccf0c8c6a:/#hexo clean && hexo g              ##清理缓存&生成新的静态目录./public\n        root@fccf0c8c6a:/#exit\t\t\t                    ##退出容器回到宿主机\n        ```\n\n\n\n- ## **Nginx**\n  1. **拉取Nginx镜像**\n  ```sh \n  [root@centos ~]# sudo docker pull nginx\n  Using default tag: latest\n  latest: Pulling from library/nginx\n  ........\n  Status: Downloaded newer image for nginx:latest\n  docker.io/library/nginx:latest\n  ```\n  2. **进入Nginx容器**\n     1. 查看镜像ID，并创建容器\n     ```sh \n     [root@centos ~]# docker images -a\n     REPOSITORY   TAG       IMAGE ID       CREATED       SIZE\n     node         latest    8778d77035e2   2 days ago    991MB\n     nginx        latest    12766a6745ee   2 weeks ago   142MB\n     ```\n     2. 映射对应端口和目录: -p , -v\n        - 看个人需求，我这里直接映射80端口\n        - 静态文件目录：/root/blog/hexo-blog/public，映射到nginx容器目录：/usr/share/nginx/html\n\n        ```sh \n        [root@centos ~]# docker run -itd -p 80:80 -v /root/blog/hexo-blog/public:/usr/share/nginx/html nginx\n        [root@VM-4-8-centos hexo-blog]# docker ps -a\t\t##查看容器列表，up状态即可\n        CONTAINER ID     IMAGE    ...   STATUS               PORTS                     ...\n        2106814a64de     nginx    ...     up      0.0.0.0:81->80/tcp, :::81->80/tcp    ...\n        fccf0c8c6ad1     node     ...     up                                           ...\n        ```\n\n  3. **搭建完成**\n      - 如果完成后无法访问，这时候就要检查下主机防火墙是否对端口未放行，还有像腾讯云主机，它在官网控制台有自己的安全组规则，需要手动设置放行。\n      - 浏览器访问 http://x.x.x.x:port，成功如图：\n      ![](/images/搭建个人博客Docker+Nginx+Hexo1.png)\n\n\n\n- ## **文章更新、自定义...**\n  1. 发表一篇文章，容器内执行\n  ```sh\n  root@fccf0c8c6ad1:# cd /root/blog/hexo-blog\n  root@fccf0c8c6ad1:# hexo new \"hello\"\n  INFO  Validating config\n  INFO  Created: /blog/source/_posts/hello.md\t\t##显示成功创建一篇名为\"hello.md\"的文章\n  ```\n  2. 增加文章等涉及静态资源的改动时，需要让Hexo重新生成一份，以便更新页面显示\n  ```sh \n  root@fccf0c8c6ad1:# cd /root/blog/hexo-blog\n  root@b1b0d1107917:# hexo clean && hexo g\n  [root@centos ~]# docker restart 21\t\t##需要重启Nginx容器进行资源同步\n  ```\n\n  3. 更加详细方法、教程，如更换主题等，请移步[Hexo作者主页]((https://hexo.io/zh-cn/))\n\n\n\n- ## **GitHub（忙，待补充..）**\n\n\n\n\n\n## 尾声：整理不易，欢迎静心敲之；同时希望自己坚持学习、持续输出，与博客一同成长！！\n\n- 待有时间再研究吧步骤整理成自动化脚本。\n","slug":"搭建个人博客Docker+Nginx+Hexo","published":1,"updated":"2022-04-16T15:04:18.917Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f53000lfoo375g24d1f","content":"<h3 id=\"开篇\"><a href=\"#开篇\" class=\"headerlink\" title=\"开篇\"></a>开篇</h3><blockquote>\n<p>本文内容仅作为练手与折腾，也是结合网上大佬的经验分享进行整理！（看得再多，不如实践出真章）</p>\n</blockquote>\n<ul>\n<li><h3 id=\"Docker：环境隔离、资源复用。\"><a href=\"#Docker：环境隔离、资源复用。\" class=\"headerlink\" title=\"Docker：环境隔离、资源复用。\"></a>Docker：环境隔离、资源复用。</h3></li>\n<li><h3 id=\"Hexo：快速、简洁且高效的博客框架\"><a href=\"#Hexo：快速、简洁且高效的博客框架\" class=\"headerlink\" title=\"Hexo：快速、简洁且高效的博客框架\"></a>Hexo：快速、简洁且高效的博客框架</h3><ul>\n<li><a href=\"https://github.com/hexojs/hexo\">GitHub: Tommy Chen</a></li>\n</ul>\n</li>\n<li><p><strong>想法</strong>：</p>\n<ul>\n<li>Hexo容器内产生的静态资源文件，宿主机目录内同步生成</li>\n<li>Nginx容器与宿主机的映射，容器内也同步Hexo的静态资源文件</li>\n<li>搭配GitHub，文章随处无障碍提交更新</li>\n</ul>\n</li>\n<li><p><strong>使用环境&amp;应用</strong>：</p>\n<ul>\n<li>CentOS 7.9 + Docker + Hexo + Nginx + Git</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"开始：\"><a href=\"#开始：\" class=\"headerlink\" title=\"开始：\"></a>开始：</h1><span id=\"more\"></span>\n<ul>\n<li><h2 id=\"Dcoker-CE\"><a href=\"#Dcoker-CE\" class=\"headerlink\" title=\"Dcoker-CE\"></a><strong>Dcoker-CE</strong></h2><ul>\n<li>安装，国内服务器推荐使用 <a href=\"https://developer.aliyun.com/mirror/\">阿里巴巴开源镜像站</a><pre><code class=\"sh\">######step1:安装必要的一些系统工具\nsudo yum install -y yum-utils device-mapper-persistent-data lvm2\n######step2:添加软件源信息\nsudo yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n######step3:\nsudo sed -i &#39;s+download.docker.com+mirrors.aliyun.com/docker-ce+&#39; /etc/yum.repos.d/docker-ce.repo\n######step4:更新并安装Docker-CE\nsudo yum makecache fast\nsudo yum -y install docker-ce\n######step4:开启Docker服务\nsudo service docker start\n注意：\n官方软件源默认启用了最新的软件，您可以通过编辑软件源的方式获取各个版本的软件包。\n例如官方并没有将测试版本的软件源置为可用，您可以通过以下方式开启。同理可以开启各种测试 版本等。\nvim /etc/yum.repos.d/docker-ce.repo\n将[docker-ce-test]下方的enabled=0修改为enabled=1\n安装指定版本的Docker-CE:\nStep 1: 查找Docker-CE的版本:\nyum list docker-ce.x86_64 --showduplicates | sort -r\nLoading mirror speeds from cached hostfile\nLoaded plugins: branch, fastestmirror, langpacks\ndocker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable\ndocker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable\nAvailable Packages\nStep2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.0.ce.1-1.el7.centos)\nsudo yum -y install docker-ce-[VERSION]\n</code></pre>\n</li>\n</ul>\n</li>\n<li><h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a><strong>Hexo</strong></h2><ol>\n<li><p><strong>拉取node镜像（hexo基于nodejs环境）</strong> </p>\n<ul>\n<li>命令前加sudo获取root执行权限，本文服务器处于root用户，可忽略。</li>\n</ul>\n<pre><code class=\"sh\">[root@centos ~]# sudo docker pull node\nUsing default tag: latest\nlatest: Pulling from library/node\n........\nDigest: sha256:3f8047ded7bb8e217a879e2d7aabe23d40ed7f975939a384a0f111cc041ea2ed\nStatus: Downloaded newer image for node:latest\n</code></pre>\n</li>\n<li><p><strong>进入node镜像</strong></p>\n<ol>\n<li>查看镜像ID，并创建容器</li>\n<li>同时将本地目录&#x2F;root&#x2F;blog&#x2F;hexo-blog（先创建），映射到容器目录&#x2F;usr&#x2F;hexo-blog</li>\n<li>安装hexo-cli</li>\n</ol>\n<pre><code class=\"sh\">[root@centos ~]#docker images -a\nREPOSITORY   TAG       IMAGE ID       CREATED      SIZE\nnode         latest    8778d77035e2   2 days ago   991MB\n \n[root@centos ~]#docker run -itd -v /root/blog:/root/blog node\n \n[root@centos ~]#docker ps -a\nCONTAINER ID    IMAGE     ...     STATUS     PORTS     NAMES\nfccf0c8c6ad1     node     ...       Up                hexo-blog\n[root@centos ~]#docker exec -it fcc bash            ##进入容器\nroot@fccf0c8c6a:/#npm install hexo-cli -g\t\t\t##安装hexo-cli\nroot@fccf0c8c6a:/#hexo init /root/blog/hexo-blog    ##在指定目录初始化hexo\nroot@fccf0c8c6a:/#cd /root/blog/hexo-blog &amp;&amp; npm install\nroot@fccf0c8c6a:/#hexo clean &amp;&amp; hexo g              ##清理缓存&amp;生成新的静态目录./public\nroot@fccf0c8c6a:/#exit\t\t\t                    ##退出容器回到宿主机\n</code></pre>\n</li>\n</ol>\n</li>\n<li><h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a><strong>Nginx</strong></h2><ol>\n<li><p><strong>拉取Nginx镜像</strong></p>\n<pre><code class=\"sh\">[root@centos ~]# sudo docker pull nginx\nUsing default tag: latest\nlatest: Pulling from library/nginx\n........\nStatus: Downloaded newer image for nginx:latest\ndocker.io/library/nginx:latest\n</code></pre>\n</li>\n<li><p><strong>进入Nginx容器</strong></p>\n<ol>\n<li><p>查看镜像ID，并创建容器</p>\n<pre><code class=\"sh\">[root@centos ~]# docker images -a\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nnode         latest    8778d77035e2   2 days ago    991MB\nnginx        latest    12766a6745ee   2 weeks ago   142MB\n</code></pre>\n</li>\n<li><p>映射对应端口和目录: -p , -v</p>\n<ul>\n<li>看个人需求，我这里直接映射80端口</li>\n<li>静态文件目录：&#x2F;root&#x2F;blog&#x2F;hexo-blog&#x2F;public，映射到nginx容器目录：&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html</li>\n</ul>\n<pre><code class=\"sh\">[root@centos ~]# docker run -itd -p 80:80 -v /root/blog/hexo-blog/public:/usr/share/nginx/html nginx\n[root@VM-4-8-centos hexo-blog]# docker ps -a\t\t##查看容器列表，up状态即可\nCONTAINER ID     IMAGE    ...   STATUS               PORTS                     ...\n2106814a64de     nginx    ...     up      0.0.0.0:81-&gt;80/tcp, :::81-&gt;80/tcp    ...\nfccf0c8c6ad1     node     ...     up                                           ...\n</code></pre>\n</li>\n</ol>\n</li>\n<li><p><strong>搭建完成</strong></p>\n<ul>\n<li>如果完成后无法访问，这时候就要检查下主机防火墙是否对端口未放行，还有像腾讯云主机，它在官网控制台有自己的安全组规则，需要手动设置放行。</li>\n<li>浏览器访问 <a href=\"http://x.x.x.x:port，成功如图：\">http://x.x.x.x:port，成功如图：</a><br> <img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2Docker+Nginx+Hexo1.png\"></li>\n</ul>\n</li>\n</ol>\n</li>\n<li><h2 id=\"文章更新、自定义…\"><a href=\"#文章更新、自定义…\" class=\"headerlink\" title=\"文章更新、自定义…\"></a><strong>文章更新、自定义…</strong></h2><ol>\n<li><p>发表一篇文章，容器内执行</p>\n<pre><code class=\"sh\">root@fccf0c8c6ad1:# cd /root/blog/hexo-blog\nroot@fccf0c8c6ad1:# hexo new &quot;hello&quot;\nINFO  Validating config\nINFO  Created: /blog/source/_posts/hello.md\t\t##显示成功创建一篇名为&quot;hello.md&quot;的文章\n</code></pre>\n</li>\n<li><p>增加文章等涉及静态资源的改动时，需要让Hexo重新生成一份，以便更新页面显示</p>\n<pre><code class=\"sh\">root@fccf0c8c6ad1:# cd /root/blog/hexo-blog\nroot@b1b0d1107917:# hexo clean &amp;&amp; hexo g\n[root@centos ~]# docker restart 21\t\t##需要重启Nginx容器进行资源同步\n</code></pre>\n</li>\n<li><p>更加详细方法、教程，如更换主题等，请移步<a href=\"(https://hexo.io/zh-cn/)\">Hexo作者主页</a></p>\n</li>\n</ol>\n</li>\n<li><h2 id=\"GitHub（忙，待补充-）\"><a href=\"#GitHub（忙，待补充-）\" class=\"headerlink\" title=\"GitHub（忙，待补充..）\"></a><strong>GitHub（忙，待补充..）</strong></h2></li>\n</ul>\n<h2 id=\"尾声：整理不易，欢迎静心敲之；同时希望自己坚持学习、持续输出，与博客一同成长！！\"><a href=\"#尾声：整理不易，欢迎静心敲之；同时希望自己坚持学习、持续输出，与博客一同成长！！\" class=\"headerlink\" title=\"尾声：整理不易，欢迎静心敲之；同时希望自己坚持学习、持续输出，与博客一同成长！！\"></a>尾声：整理不易，欢迎静心敲之；同时希望自己坚持学习、持续输出，与博客一同成长！！</h2><ul>\n<li>待有时间再研究吧步骤整理成自动化脚本。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"开篇\"><a href=\"#开篇\" class=\"headerlink\" title=\"开篇\"></a>开篇</h3><blockquote>\n<p>本文内容仅作为练手与折腾，也是结合网上大佬的经验分享进行整理！（看得再多，不如实践出真章）</p>\n</blockquote>\n<ul>\n<li><h3 id=\"Docker：环境隔离、资源复用。\"><a href=\"#Docker：环境隔离、资源复用。\" class=\"headerlink\" title=\"Docker：环境隔离、资源复用。\"></a>Docker：环境隔离、资源复用。</h3></li>\n<li><h3 id=\"Hexo：快速、简洁且高效的博客框架\"><a href=\"#Hexo：快速、简洁且高效的博客框架\" class=\"headerlink\" title=\"Hexo：快速、简洁且高效的博客框架\"></a>Hexo：快速、简洁且高效的博客框架</h3><ul>\n<li><a href=\"https://github.com/hexojs/hexo\">GitHub: Tommy Chen</a></li>\n</ul>\n</li>\n<li><p><strong>想法</strong>：</p>\n<ul>\n<li>Hexo容器内产生的静态资源文件，宿主机目录内同步生成</li>\n<li>Nginx容器与宿主机的映射，容器内也同步Hexo的静态资源文件</li>\n<li>搭配GitHub，文章随处无障碍提交更新</li>\n</ul>\n</li>\n<li><p><strong>使用环境&amp;应用</strong>：</p>\n<ul>\n<li>CentOS 7.9 + Docker + Hexo + Nginx + Git</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"开始：\"><a href=\"#开始：\" class=\"headerlink\" title=\"开始：\"></a>开始：</h1>","more":"<ul>\n<li><h2 id=\"Dcoker-CE\"><a href=\"#Dcoker-CE\" class=\"headerlink\" title=\"Dcoker-CE\"></a><strong>Dcoker-CE</strong></h2><ul>\n<li>安装，国内服务器推荐使用 <a href=\"https://developer.aliyun.com/mirror/\">阿里巴巴开源镜像站</a><pre><code class=\"sh\">######step1:安装必要的一些系统工具\nsudo yum install -y yum-utils device-mapper-persistent-data lvm2\n######step2:添加软件源信息\nsudo yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n######step3:\nsudo sed -i &#39;s+download.docker.com+mirrors.aliyun.com/docker-ce+&#39; /etc/yum.repos.d/docker-ce.repo\n######step4:更新并安装Docker-CE\nsudo yum makecache fast\nsudo yum -y install docker-ce\n######step4:开启Docker服务\nsudo service docker start\n注意：\n官方软件源默认启用了最新的软件，您可以通过编辑软件源的方式获取各个版本的软件包。\n例如官方并没有将测试版本的软件源置为可用，您可以通过以下方式开启。同理可以开启各种测试 版本等。\nvim /etc/yum.repos.d/docker-ce.repo\n将[docker-ce-test]下方的enabled=0修改为enabled=1\n安装指定版本的Docker-CE:\nStep 1: 查找Docker-CE的版本:\nyum list docker-ce.x86_64 --showduplicates | sort -r\nLoading mirror speeds from cached hostfile\nLoaded plugins: branch, fastestmirror, langpacks\ndocker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable\ndocker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable\nAvailable Packages\nStep2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.0.ce.1-1.el7.centos)\nsudo yum -y install docker-ce-[VERSION]\n</code></pre>\n</li>\n</ul>\n</li>\n<li><h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a><strong>Hexo</strong></h2><ol>\n<li><p><strong>拉取node镜像（hexo基于nodejs环境）</strong> </p>\n<ul>\n<li>命令前加sudo获取root执行权限，本文服务器处于root用户，可忽略。</li>\n</ul>\n<pre><code class=\"sh\">[root@centos ~]# sudo docker pull node\nUsing default tag: latest\nlatest: Pulling from library/node\n........\nDigest: sha256:3f8047ded7bb8e217a879e2d7aabe23d40ed7f975939a384a0f111cc041ea2ed\nStatus: Downloaded newer image for node:latest\n</code></pre>\n</li>\n<li><p><strong>进入node镜像</strong></p>\n<ol>\n<li>查看镜像ID，并创建容器</li>\n<li>同时将本地目录&#x2F;root&#x2F;blog&#x2F;hexo-blog（先创建），映射到容器目录&#x2F;usr&#x2F;hexo-blog</li>\n<li>安装hexo-cli</li>\n</ol>\n<pre><code class=\"sh\">[root@centos ~]#docker images -a\nREPOSITORY   TAG       IMAGE ID       CREATED      SIZE\nnode         latest    8778d77035e2   2 days ago   991MB\n \n[root@centos ~]#docker run -itd -v /root/blog:/root/blog node\n \n[root@centos ~]#docker ps -a\nCONTAINER ID    IMAGE     ...     STATUS     PORTS     NAMES\nfccf0c8c6ad1     node     ...       Up                hexo-blog\n[root@centos ~]#docker exec -it fcc bash            ##进入容器\nroot@fccf0c8c6a:/#npm install hexo-cli -g\t\t\t##安装hexo-cli\nroot@fccf0c8c6a:/#hexo init /root/blog/hexo-blog    ##在指定目录初始化hexo\nroot@fccf0c8c6a:/#cd /root/blog/hexo-blog &amp;&amp; npm install\nroot@fccf0c8c6a:/#hexo clean &amp;&amp; hexo g              ##清理缓存&amp;生成新的静态目录./public\nroot@fccf0c8c6a:/#exit\t\t\t                    ##退出容器回到宿主机\n</code></pre>\n</li>\n</ol>\n</li>\n<li><h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a><strong>Nginx</strong></h2><ol>\n<li><p><strong>拉取Nginx镜像</strong></p>\n<pre><code class=\"sh\">[root@centos ~]# sudo docker pull nginx\nUsing default tag: latest\nlatest: Pulling from library/nginx\n........\nStatus: Downloaded newer image for nginx:latest\ndocker.io/library/nginx:latest\n</code></pre>\n</li>\n<li><p><strong>进入Nginx容器</strong></p>\n<ol>\n<li><p>查看镜像ID，并创建容器</p>\n<pre><code class=\"sh\">[root@centos ~]# docker images -a\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nnode         latest    8778d77035e2   2 days ago    991MB\nnginx        latest    12766a6745ee   2 weeks ago   142MB\n</code></pre>\n</li>\n<li><p>映射对应端口和目录: -p , -v</p>\n<ul>\n<li>看个人需求，我这里直接映射80端口</li>\n<li>静态文件目录：&#x2F;root&#x2F;blog&#x2F;hexo-blog&#x2F;public，映射到nginx容器目录：&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html</li>\n</ul>\n<pre><code class=\"sh\">[root@centos ~]# docker run -itd -p 80:80 -v /root/blog/hexo-blog/public:/usr/share/nginx/html nginx\n[root@VM-4-8-centos hexo-blog]# docker ps -a\t\t##查看容器列表，up状态即可\nCONTAINER ID     IMAGE    ...   STATUS               PORTS                     ...\n2106814a64de     nginx    ...     up      0.0.0.0:81-&gt;80/tcp, :::81-&gt;80/tcp    ...\nfccf0c8c6ad1     node     ...     up                                           ...\n</code></pre>\n</li>\n</ol>\n</li>\n<li><p><strong>搭建完成</strong></p>\n<ul>\n<li>如果完成后无法访问，这时候就要检查下主机防火墙是否对端口未放行，还有像腾讯云主机，它在官网控制台有自己的安全组规则，需要手动设置放行。</li>\n<li>浏览器访问 <a href=\"http://x.x.x.x:port，成功如图：\">http://x.x.x.x:port，成功如图：</a><br> <img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2Docker+Nginx+Hexo1.png\"></li>\n</ul>\n</li>\n</ol>\n</li>\n<li><h2 id=\"文章更新、自定义…\"><a href=\"#文章更新、自定义…\" class=\"headerlink\" title=\"文章更新、自定义…\"></a><strong>文章更新、自定义…</strong></h2><ol>\n<li><p>发表一篇文章，容器内执行</p>\n<pre><code class=\"sh\">root@fccf0c8c6ad1:# cd /root/blog/hexo-blog\nroot@fccf0c8c6ad1:# hexo new &quot;hello&quot;\nINFO  Validating config\nINFO  Created: /blog/source/_posts/hello.md\t\t##显示成功创建一篇名为&quot;hello.md&quot;的文章\n</code></pre>\n</li>\n<li><p>增加文章等涉及静态资源的改动时，需要让Hexo重新生成一份，以便更新页面显示</p>\n<pre><code class=\"sh\">root@fccf0c8c6ad1:# cd /root/blog/hexo-blog\nroot@b1b0d1107917:# hexo clean &amp;&amp; hexo g\n[root@centos ~]# docker restart 21\t\t##需要重启Nginx容器进行资源同步\n</code></pre>\n</li>\n<li><p>更加详细方法、教程，如更换主题等，请移步<a href=\"(https://hexo.io/zh-cn/)\">Hexo作者主页</a></p>\n</li>\n</ol>\n</li>\n<li><h2 id=\"GitHub（忙，待补充-）\"><a href=\"#GitHub（忙，待补充-）\" class=\"headerlink\" title=\"GitHub（忙，待补充..）\"></a><strong>GitHub（忙，待补充..）</strong></h2></li>\n</ul>\n<h2 id=\"尾声：整理不易，欢迎静心敲之；同时希望自己坚持学习、持续输出，与博客一同成长！！\"><a href=\"#尾声：整理不易，欢迎静心敲之；同时希望自己坚持学习、持续输出，与博客一同成长！！\" class=\"headerlink\" title=\"尾声：整理不易，欢迎静心敲之；同时希望自己坚持学习、持续输出，与博客一同成长！！\"></a>尾声：整理不易，欢迎静心敲之；同时希望自己坚持学习、持续输出，与博客一同成长！！</h2><ul>\n<li>待有时间再研究吧步骤整理成自动化脚本。</li>\n</ul>"},{"title":"数组_内存分配及栈和堆的区别","date":"2018-11-24T05:11:55.000Z","_content":"\n一维数组格式: 数据类型 [] 数组名= new 数据类型[x];       //x数组长度。\n整数类型：byte，short，int，long\n默认初始化值都是0\n\n浮点类型：float，double\n默认初始化值都是0.0\t\n\n布尔类型：boolean默认初始化值false  \n字符类型：\\char默认初始化值”u0000‘;\n\nA：栈（掌握）  \n存储局部变量：定义在方法声明上和方法中的变量\t\nB：堆（掌握）\n存储new出来的数组或对象\n\n//谁进栈，谁进堆看的是存储局部变量还是new数组或对象。\nC：方法区\n面向对象部分讲解\nD：本地方法区\n和系统相关\nE：1xE：寄存器\n给CPU使用\n\n数组在栈和堆内存图：\n\n![image-20220415001344891](C:\\Users\\Yan\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220415001344891.png)\n\n\n\n### ArrayIndexoutofBoundsException：数组索引越界异常；\n​\t原因是访问了不存在的索引。\n### NullPointerException：空指针异常；\n```java\nint[] arr = new int[5];\tint[] arr=null;\nSyste,out.println(arr);\n```\n​\t原因是数组不在堆中，还继续使用数组名去访问元素。\n\n对于使用System.out.println();直接打印数组，如：\n```java\nint[] arr = {10,20,30,40,50};\nSystem.out.println(arr);\t\t//打印结果为：[I@70dea4e\n```\n\nSystem.out.println这个方法，默认调用的是对象的toString()方法的内容，[表示数组，I表示int类型，b9e45a是对象名。这就是int[] arr对象的toString内容。\n\n如果要打印数组，用Arrays这个工具类：*/\n\n```java \nSystem.out.println(Arrays.toString(arr));\n```","source":"_posts/数组_内存分配及栈和堆的区别.md","raw":"---\ntitle: 数组_内存分配及栈和堆的区别\ndate: 2018-11-24 13:11:55\ncategories: \n  - 学习笔记\n---\n\n一维数组格式: 数据类型 [] 数组名= new 数据类型[x];       //x数组长度。\n整数类型：byte，short，int，long\n默认初始化值都是0\n\n浮点类型：float，double\n默认初始化值都是0.0\t\n\n布尔类型：boolean默认初始化值false  \n字符类型：\\char默认初始化值”u0000‘;\n\nA：栈（掌握）  \n存储局部变量：定义在方法声明上和方法中的变量\t\nB：堆（掌握）\n存储new出来的数组或对象\n\n//谁进栈，谁进堆看的是存储局部变量还是new数组或对象。\nC：方法区\n面向对象部分讲解\nD：本地方法区\n和系统相关\nE：1xE：寄存器\n给CPU使用\n\n数组在栈和堆内存图：\n\n![image-20220415001344891](C:\\Users\\Yan\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220415001344891.png)\n\n\n\n### ArrayIndexoutofBoundsException：数组索引越界异常；\n​\t原因是访问了不存在的索引。\n### NullPointerException：空指针异常；\n```java\nint[] arr = new int[5];\tint[] arr=null;\nSyste,out.println(arr);\n```\n​\t原因是数组不在堆中，还继续使用数组名去访问元素。\n\n对于使用System.out.println();直接打印数组，如：\n```java\nint[] arr = {10,20,30,40,50};\nSystem.out.println(arr);\t\t//打印结果为：[I@70dea4e\n```\n\nSystem.out.println这个方法，默认调用的是对象的toString()方法的内容，[表示数组，I表示int类型，b9e45a是对象名。这就是int[] arr对象的toString内容。\n\n如果要打印数组，用Arrays这个工具类：*/\n\n```java \nSystem.out.println(Arrays.toString(arr));\n```","slug":"数组_内存分配及栈和堆的区别","published":1,"updated":"2022-04-14T19:46:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f54000ofoo3hx5s8z0m","content":"<p>一维数组格式: 数据类型 [] 数组名&#x3D; new 数据类型[x];       &#x2F;&#x2F;x数组长度。<br>整数类型：byte，short，int，long<br>默认初始化值都是0</p>\n<p>浮点类型：float，double<br>默认初始化值都是0.0\t</p>\n<p>布尔类型：boolean默认初始化值false<br>字符类型：\\char默认初始化值”u0000‘;</p>\n<p>A：栈（掌握）<br>存储局部变量：定义在方法声明上和方法中的变量\t<br>B：堆（掌握）<br>存储new出来的数组或对象</p>\n<p>&#x2F;&#x2F;谁进栈，谁进堆看的是存储局部变量还是new数组或对象。<br>C：方法区<br>面向对象部分讲解<br>D：本地方法区<br>和系统相关<br>E：1xE：寄存器<br>给CPU使用</p>\n<p>数组在栈和堆内存图：</p>\n<p><img src=\"C:\\Users\\Yan\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220415001344891.png\" alt=\"image-20220415001344891\"></p>\n<h3 id=\"ArrayIndexoutofBoundsException：数组索引越界异常；\"><a href=\"#ArrayIndexoutofBoundsException：数组索引越界异常；\" class=\"headerlink\" title=\"ArrayIndexoutofBoundsException：数组索引越界异常；\"></a>ArrayIndexoutofBoundsException：数组索引越界异常；</h3><p>​\t原因是访问了不存在的索引。</p>\n<h3 id=\"NullPointerException：空指针异常；\"><a href=\"#NullPointerException：空指针异常；\" class=\"headerlink\" title=\"NullPointerException：空指针异常；\"></a>NullPointerException：空指针异常；</h3><pre><code class=\"java\">int[] arr = new int[5];\tint[] arr=null;\nSyste,out.println(arr);\n</code></pre>\n<p>​\t原因是数组不在堆中，还继续使用数组名去访问元素。</p>\n<p>对于使用System.out.println();直接打印数组，如：</p>\n<pre><code class=\"java\">int[] arr = &#123;10,20,30,40,50&#125;;\nSystem.out.println(arr);\t\t//打印结果为：[I@70dea4e\n</code></pre>\n<p>System.out.println这个方法，默认调用的是对象的toString()方法的内容，[表示数组，I表示int类型，b9e45a是对象名。这就是int[] arr对象的toString内容。</p>\n<p>如果要打印数组，用Arrays这个工具类：*&#x2F;</p>\n<pre><code class=\"java\">System.out.println(Arrays.toString(arr));\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<p>一维数组格式: 数据类型 [] 数组名&#x3D; new 数据类型[x];       &#x2F;&#x2F;x数组长度。<br>整数类型：byte，short，int，long<br>默认初始化值都是0</p>\n<p>浮点类型：float，double<br>默认初始化值都是0.0\t</p>\n<p>布尔类型：boolean默认初始化值false<br>字符类型：\\char默认初始化值”u0000‘;</p>\n<p>A：栈（掌握）<br>存储局部变量：定义在方法声明上和方法中的变量\t<br>B：堆（掌握）<br>存储new出来的数组或对象</p>\n<p>&#x2F;&#x2F;谁进栈，谁进堆看的是存储局部变量还是new数组或对象。<br>C：方法区<br>面向对象部分讲解<br>D：本地方法区<br>和系统相关<br>E：1xE：寄存器<br>给CPU使用</p>\n<p>数组在栈和堆内存图：</p>\n<p><img src=\"C:\\Users\\Yan\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220415001344891.png\" alt=\"image-20220415001344891\"></p>\n<h3 id=\"ArrayIndexoutofBoundsException：数组索引越界异常；\"><a href=\"#ArrayIndexoutofBoundsException：数组索引越界异常；\" class=\"headerlink\" title=\"ArrayIndexoutofBoundsException：数组索引越界异常；\"></a>ArrayIndexoutofBoundsException：数组索引越界异常；</h3><p>​\t原因是访问了不存在的索引。</p>\n<h3 id=\"NullPointerException：空指针异常；\"><a href=\"#NullPointerException：空指针异常；\" class=\"headerlink\" title=\"NullPointerException：空指针异常；\"></a>NullPointerException：空指针异常；</h3><pre><code class=\"java\">int[] arr = new int[5];\tint[] arr=null;\nSyste,out.println(arr);\n</code></pre>\n<p>​\t原因是数组不在堆中，还继续使用数组名去访问元素。</p>\n<p>对于使用System.out.println();直接打印数组，如：</p>\n<pre><code class=\"java\">int[] arr = &#123;10,20,30,40,50&#125;;\nSystem.out.println(arr);\t\t//打印结果为：[I@70dea4e\n</code></pre>\n<p>System.out.println这个方法，默认调用的是对象的toString()方法的内容，[表示数组，I表示int类型，b9e45a是对象名。这就是int[] arr对象的toString内容。</p>\n<p>如果要打印数组，用Arrays这个工具类：*&#x2F;</p>\n<pre><code class=\"java\">System.out.println(Arrays.toString(arr));\n</code></pre>\n"},{"title":"方法重写、重载","date":"2018-11-25T01:44:10.000Z","_content":"\nOverride和Overload的区别?\tOverload能改变返回值类型吗?\n\n* overload可以改变返回值类型,只看参数列表\n\n* 方法重写：子类中出现了和父类中方法声明一模一样的方法。与返回值类型有关,返回值是一致(或者是子父类)的\n\n* 方法重载：本类中出现的方法名一样，参数列表不同的方法。与返回值类型无关。\n\n* 子类对象调用方法的时候：\n  * 先找子类本身，再找父类。\n\n\n**重写：方法名相同，与返回值类型有关**\n\n**重载：方法名相同，参数列表不同，与返回值类型无关。**\n\n**重载分类：参数个数不同，参数类型不同，顺序不同。**","source":"_posts/方法重写、重载.md","raw":"---\ntitle: 方法重写、重载\ndate: 2018-11-25 09:44:10\ncategories: \n  - 学习笔记\n---\n\nOverride和Overload的区别?\tOverload能改变返回值类型吗?\n\n* overload可以改变返回值类型,只看参数列表\n\n* 方法重写：子类中出现了和父类中方法声明一模一样的方法。与返回值类型有关,返回值是一致(或者是子父类)的\n\n* 方法重载：本类中出现的方法名一样，参数列表不同的方法。与返回值类型无关。\n\n* 子类对象调用方法的时候：\n  * 先找子类本身，再找父类。\n\n\n**重写：方法名相同，与返回值类型有关**\n\n**重载：方法名相同，参数列表不同，与返回值类型无关。**\n\n**重载分类：参数个数不同，参数类型不同，顺序不同。**","slug":"方法重写、重载","published":1,"updated":"2022-04-14T19:46:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f56000pfoo39toofyx2","content":"<p>Override和Overload的区别?\tOverload能改变返回值类型吗?</p>\n<ul>\n<li><p>overload可以改变返回值类型,只看参数列表</p>\n</li>\n<li><p>方法重写：子类中出现了和父类中方法声明一模一样的方法。与返回值类型有关,返回值是一致(或者是子父类)的</p>\n</li>\n<li><p>方法重载：本类中出现的方法名一样，参数列表不同的方法。与返回值类型无关。</p>\n</li>\n<li><p>子类对象调用方法的时候：</p>\n<ul>\n<li>先找子类本身，再找父类。</li>\n</ul>\n</li>\n</ul>\n<p><strong>重写：方法名相同，与返回值类型有关</strong></p>\n<p><strong>重载：方法名相同，参数列表不同，与返回值类型无关。</strong></p>\n<p><strong>重载分类：参数个数不同，参数类型不同，顺序不同。</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Override和Overload的区别?\tOverload能改变返回值类型吗?</p>\n<ul>\n<li><p>overload可以改变返回值类型,只看参数列表</p>\n</li>\n<li><p>方法重写：子类中出现了和父类中方法声明一模一样的方法。与返回值类型有关,返回值是一致(或者是子父类)的</p>\n</li>\n<li><p>方法重载：本类中出现的方法名一样，参数列表不同的方法。与返回值类型无关。</p>\n</li>\n<li><p>子类对象调用方法的时候：</p>\n<ul>\n<li>先找子类本身，再找父类。</li>\n</ul>\n</li>\n</ul>\n<p><strong>重写：方法名相同，与返回值类型有关</strong></p>\n<p><strong>重载：方法名相同，参数列表不同，与返回值类型无关。</strong></p>\n<p><strong>重载分类：参数个数不同，参数类型不同，顺序不同。</strong></p>\n"},{"title":"水电改造之篇一","date":"2020-07-20T02:01:33.000Z","_content":"调休假过去一半，还有一周。。我把这周回家做的事标记下：\n**（后面还有心情随记）**\n\n①空开漏电保护器更换  \n\n> **这点就得说一下，要说可怕是很可怕的**\n> **地线没有，漏保又失效，我们家四口有过几次热水器是插电使用的**\n> **这保不齐漏电，后果不敢想象，这关乎人的生命安全**\n> **建议各位家中有设置漏保的，按照上面的操作，每个月按一次最为保险……**\n> ![](/images/水电改造之篇一1.png)\n\n<!-- more -->\n\n②给另外卫生间加装热水器\n\n> **其实购买此类家电像美的，格力这些大厂，完全都是免费预约上门安装的！(材料费除外)**\n> **碍于手痒，到叔那边找了冲击钻自己搞定了。**\n> **呃，还有老妈也帮忙抬了**…\n![](/images/水电改造之篇一2.png)\n![](/images/水电改造之篇一3.png)\n\n③还有一些琐碎的：水龙头、灯泡更换，手机换屏……\n\n\n\n然后下边是遇到的：\n\n①厅的格力空调显示E6故障代码\n\n> **这个看了下操作手册是属于通讯故障，打电话跟师傅了解到可以尝试外接一条地线到窗子的防盗网上**\n> **呃，这点只为测试，不可作为长久之计，具体度娘可了解。**\n\n\n②冰箱开门灯亮，但器件不工作\n\n> **出现这个情况90%是温控器出了问题！**\n> **如何判断：将温控器的两条火零线短接**\n> **如果此时听到器件工作运行的声音，那么成功捕获问题所在！**\n\n![](/images/水电改造之篇一4.png)\n\n\n**针对家里的后续计划也有：管道、线路全部进行拆除更换，加装底线，这将会涉及很多水电专业问题！！不过，如同上边的记录，我依旧想不依赖水电师傅的情况下尝试去完成。\nPS：其实现有的不是不能用，但那么多年的房得考虑老化问题，不管是设计还是用料方面都是老旧了；主要还有一点：沉浸在动手党的乐趣中无法自拔......**\n\n\n\n其实，我调休假的这一周都在忙上面的。不过还有剩下周，跟老弟去水里玩。我还不会游。\n我呢，也是这两年会感慨 觉得一生很短，在该有的所谓花样年华，太多有趣的东西没接触；教育的差异、知识的程度、平淡与精彩的抉择...这些让我感到一种“躁”......\n还有老妈又说了：今年得带个女朋友回来了啊！\n这个，真没那么容易！\n想到同事说的：相亲是一件很有趣的事，建议试试。\n群里经常聊天的某个网友：大城市找？建议回村家里安排相亲，再用上vlog。\n    \n\t建议似乎可行？？\n\n![](/images/水电改造之篇一5.png)","source":"_posts/水电改造之篇一.md","raw":"---\ntitle: 水电改造之篇一\ndate: 2020-7-20 10:01:33\ncategories: \n  - 点滴生活\n---\n调休假过去一半，还有一周。。我把这周回家做的事标记下：\n**（后面还有心情随记）**\n\n①空开漏电保护器更换  \n\n> **这点就得说一下，要说可怕是很可怕的**\n> **地线没有，漏保又失效，我们家四口有过几次热水器是插电使用的**\n> **这保不齐漏电，后果不敢想象，这关乎人的生命安全**\n> **建议各位家中有设置漏保的，按照上面的操作，每个月按一次最为保险……**\n> ![](/images/水电改造之篇一1.png)\n\n<!-- more -->\n\n②给另外卫生间加装热水器\n\n> **其实购买此类家电像美的，格力这些大厂，完全都是免费预约上门安装的！(材料费除外)**\n> **碍于手痒，到叔那边找了冲击钻自己搞定了。**\n> **呃，还有老妈也帮忙抬了**…\n![](/images/水电改造之篇一2.png)\n![](/images/水电改造之篇一3.png)\n\n③还有一些琐碎的：水龙头、灯泡更换，手机换屏……\n\n\n\n然后下边是遇到的：\n\n①厅的格力空调显示E6故障代码\n\n> **这个看了下操作手册是属于通讯故障，打电话跟师傅了解到可以尝试外接一条地线到窗子的防盗网上**\n> **呃，这点只为测试，不可作为长久之计，具体度娘可了解。**\n\n\n②冰箱开门灯亮，但器件不工作\n\n> **出现这个情况90%是温控器出了问题！**\n> **如何判断：将温控器的两条火零线短接**\n> **如果此时听到器件工作运行的声音，那么成功捕获问题所在！**\n\n![](/images/水电改造之篇一4.png)\n\n\n**针对家里的后续计划也有：管道、线路全部进行拆除更换，加装底线，这将会涉及很多水电专业问题！！不过，如同上边的记录，我依旧想不依赖水电师傅的情况下尝试去完成。\nPS：其实现有的不是不能用，但那么多年的房得考虑老化问题，不管是设计还是用料方面都是老旧了；主要还有一点：沉浸在动手党的乐趣中无法自拔......**\n\n\n\n其实，我调休假的这一周都在忙上面的。不过还有剩下周，跟老弟去水里玩。我还不会游。\n我呢，也是这两年会感慨 觉得一生很短，在该有的所谓花样年华，太多有趣的东西没接触；教育的差异、知识的程度、平淡与精彩的抉择...这些让我感到一种“躁”......\n还有老妈又说了：今年得带个女朋友回来了啊！\n这个，真没那么容易！\n想到同事说的：相亲是一件很有趣的事，建议试试。\n群里经常聊天的某个网友：大城市找？建议回村家里安排相亲，再用上vlog。\n    \n\t建议似乎可行？？\n\n![](/images/水电改造之篇一5.png)","slug":"水电改造之篇一","published":1,"updated":"2022-04-15T21:15:36.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f57000sfoo3fucb7tz7","content":"<p>调休假过去一半，还有一周。。我把这周回家做的事标记下：<br><strong>（后面还有心情随记）</strong></p>\n<p>①空开漏电保护器更换  </p>\n<blockquote>\n<p><strong>这点就得说一下，要说可怕是很可怕的</strong><br><strong>地线没有，漏保又失效，我们家四口有过几次热水器是插电使用的</strong><br><strong>这保不齐漏电，后果不敢想象，这关乎人的生命安全</strong><br><strong>建议各位家中有设置漏保的，按照上面的操作，每个月按一次最为保险……</strong><br><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%B8%801.png\"></p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>②给另外卫生间加装热水器</p>\n<blockquote>\n<p><strong>其实购买此类家电像美的，格力这些大厂，完全都是免费预约上门安装的！(材料费除外)</strong><br><strong>碍于手痒，到叔那边找了冲击钻自己搞定了。</strong><br><strong>呃，还有老妈也帮忙抬了</strong>…<br><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%B8%802.png\"><br><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%B8%803.png\"></p>\n</blockquote>\n<p>③还有一些琐碎的：水龙头、灯泡更换，手机换屏……</p>\n<p>然后下边是遇到的：</p>\n<p>①厅的格力空调显示E6故障代码</p>\n<blockquote>\n<p><strong>这个看了下操作手册是属于通讯故障，打电话跟师傅了解到可以尝试外接一条地线到窗子的防盗网上</strong><br><strong>呃，这点只为测试，不可作为长久之计，具体度娘可了解。</strong></p>\n</blockquote>\n<p>②冰箱开门灯亮，但器件不工作</p>\n<blockquote>\n<p><strong>出现这个情况90%是温控器出了问题！</strong><br><strong>如何判断：将温控器的两条火零线短接</strong><br><strong>如果此时听到器件工作运行的声音，那么成功捕获问题所在！</strong></p>\n</blockquote>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%B8%804.png\"></p>\n<p><strong>针对家里的后续计划也有：管道、线路全部进行拆除更换，加装底线，这将会涉及很多水电专业问题！！不过，如同上边的记录，我依旧想不依赖水电师傅的情况下尝试去完成。<br>PS：其实现有的不是不能用，但那么多年的房得考虑老化问题，不管是设计还是用料方面都是老旧了；主要还有一点：沉浸在动手党的乐趣中无法自拔……</strong></p>\n<p>其实，我调休假的这一周都在忙上面的。不过还有剩下周，跟老弟去水里玩。我还不会游。<br>我呢，也是这两年会感慨 觉得一生很短，在该有的所谓花样年华，太多有趣的东西没接触；教育的差异、知识的程度、平淡与精彩的抉择…这些让我感到一种“躁”……<br>还有老妈又说了：今年得带个女朋友回来了啊！<br>这个，真没那么容易！<br>想到同事说的：相亲是一件很有趣的事，建议试试。<br>群里经常聊天的某个网友：大城市找？建议回村家里安排相亲，再用上vlog。</p>\n<pre><code>建议似乎可行？？\n</code></pre>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%B8%805.png\"></p>\n","site":{"data":{}},"excerpt":"<p>调休假过去一半，还有一周。。我把这周回家做的事标记下：<br><strong>（后面还有心情随记）</strong></p>\n<p>①空开漏电保护器更换  </p>\n<blockquote>\n<p><strong>这点就得说一下，要说可怕是很可怕的</strong><br><strong>地线没有，漏保又失效，我们家四口有过几次热水器是插电使用的</strong><br><strong>这保不齐漏电，后果不敢想象，这关乎人的生命安全</strong><br><strong>建议各位家中有设置漏保的，按照上面的操作，每个月按一次最为保险……</strong><br><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%B8%801.png\"></p>\n</blockquote>","more":"<p>②给另外卫生间加装热水器</p>\n<blockquote>\n<p><strong>其实购买此类家电像美的，格力这些大厂，完全都是免费预约上门安装的！(材料费除外)</strong><br><strong>碍于手痒，到叔那边找了冲击钻自己搞定了。</strong><br><strong>呃，还有老妈也帮忙抬了</strong>…<br><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%B8%802.png\"><br><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%B8%803.png\"></p>\n</blockquote>\n<p>③还有一些琐碎的：水龙头、灯泡更换，手机换屏……</p>\n<p>然后下边是遇到的：</p>\n<p>①厅的格力空调显示E6故障代码</p>\n<blockquote>\n<p><strong>这个看了下操作手册是属于通讯故障，打电话跟师傅了解到可以尝试外接一条地线到窗子的防盗网上</strong><br><strong>呃，这点只为测试，不可作为长久之计，具体度娘可了解。</strong></p>\n</blockquote>\n<p>②冰箱开门灯亮，但器件不工作</p>\n<blockquote>\n<p><strong>出现这个情况90%是温控器出了问题！</strong><br><strong>如何判断：将温控器的两条火零线短接</strong><br><strong>如果此时听到器件工作运行的声音，那么成功捕获问题所在！</strong></p>\n</blockquote>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%B8%804.png\"></p>\n<p><strong>针对家里的后续计划也有：管道、线路全部进行拆除更换，加装底线，这将会涉及很多水电专业问题！！不过，如同上边的记录，我依旧想不依赖水电师傅的情况下尝试去完成。<br>PS：其实现有的不是不能用，但那么多年的房得考虑老化问题，不管是设计还是用料方面都是老旧了；主要还有一点：沉浸在动手党的乐趣中无法自拔……</strong></p>\n<p>其实，我调休假的这一周都在忙上面的。不过还有剩下周，跟老弟去水里玩。我还不会游。<br>我呢，也是这两年会感慨 觉得一生很短，在该有的所谓花样年华，太多有趣的东西没接触；教育的差异、知识的程度、平淡与精彩的抉择…这些让我感到一种“躁”……<br>还有老妈又说了：今年得带个女朋友回来了啊！<br>这个，真没那么容易！<br>想到同事说的：相亲是一件很有趣的事，建议试试。<br>群里经常聊天的某个网友：大城市找？建议回村家里安排相亲，再用上vlog。</p>\n<pre><code>建议似乎可行？？\n</code></pre>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%B8%805.png\"></p>"},{"title":"水电改造之篇二","date":"2022-01-31T16:08:03.000Z","_content":"\n（我想想哈，该怎么写？不会止步于开头了把？？）\n    \n\n**今年是虎称王，新的一年里祝大家生龙活虎、虎虎生威！！虎头虎脑!？？咳咳...如标题，这是第二篇，上一篇记录是在2020年7月，主要记录自己所做的有意义的一些事；不过，其实我更想以时间线去记录，不论事大小，毕竟一年里肯定不止那几件事，但奈何我记性和写作能力是两座大山，无法逾越！（本文不长，图占位置多，有兴趣可以瞧瞧，足以看出我对生活的态度）**\n    \n\n    第二篇依旧以图文形式记录，具体响应下上一篇立下的flag：\n\n![](/images/水电改造之篇二0.png)\n\n​    这事开始前我还在深圳某公司当打工仔，于2021年4月离职，具体为何离职不想展开说，没什么必要。离职的唯一想法是回家自学半年。<!-- more -->\n​      **学什么呢？？**\n​        学某编程语言，一是兴趣，二是专业，三是在信息时代计算机行业的工资还算不错。\n​      **这么选择是否考虑后果或风险？**\n​        全职回家自学，属于裸辞，经济上还算允许，最主要的是需要自控力；至于后果，对我而言有：少赚大半年钱、工作经验的累计中断、职业生涯规划是否打乱、还有年龄，这些我都有考虑，不过，我毅然地决定并非是随意，有想法就行动，趁现在！\n​      **那么时间到了，且超过了半年，成效如何？有何感想？**\n​        很遗憾，直至今日我未能按照以上计划执行，自学编程只进行了半个月，后面因为一些事耽误了学习编程的进度，也就是这些事我得记录分享下（往下看）。\n​        感想：不后悔这么做，因为我已经付诸实践，已经踏出一大步、做出选择！\n​      **下一步棋，该怎么走？？**\n​        就毕业后工作在深圳的这两年来说，感觉没啥归属感，年后八九不离十会在广西内发展。\n​        虽因事耽误了学习编程的进度，但我却又有了其他计划，上个月报了自考本，带专生不服。\n\n​    插了小曲~现在接回上边的立flag：（三个点）\n\n​     **一：水路管道**（完成）\n​      家里原先使用的铁管，不管是技术还是材料都已年代久远，内部早就锈迹斑斑，甚至堵塞；家里是小四层自建房，比较难搞的部分是穿过楼层的地方，如图直径为1寸的铁管穿过，想要更换费点劲：\n​          ①拿工具截断，然后将其抽出；\n​          ②同样是截断，但不抽出，直接将6分塑管穿入铁管；（选择这个方法）\n​      另外：由于套入后剩余一圈空隙，不处理会导致对应四层上的地面有水会流下来，或者当前地面有水时会流下去；这个问题我在网上购买了**速干泥**裹一圈即可。\n\n![](/images/水电改造之篇二1.png)\n\n\n\n​    **二：电路走线**（完成）【地线没能搞定】\n​      什么电器用什么大小的线，统计家里电器的总功率，看图。\n\n![](/images/水电改造之篇二2.png)\n\n\n\n​        注意点or难点：\n​        ①根据环境选择软线还是硬线，这决定你布线难易程度；\n​        ②事先量好需要的长度，一次性购买节省时间与金钱，宁可量过长，千万别按照刚刚好去买；\n​        ③多买一些全铜质对接头，提高安全性、简易性、易维护性...\n​        ④全过程一个人做真的累，也费时间，别逞强，最好找个人一起吧。  \n​        ⑤预算不充足的情况下，拼多多是最好的选择，选好店铺，质量上应该ok\n​        ⑥......\n\n​      **总配电箱零件组装**：\n![](/images/水电改造之篇二.gif)\n\n![](/images/水电改造之篇二3.png)\n\n \n\n​    **三：厨房改造**（完成）\n​      可以看出墙壁很多油垢和其他脏的东西，物品摆放也比较杂乱，卫生环境一般。吊顶更早之前是没有的，老爸喊人家过来装上的。后来我回来了才着手开始改造。\n\n​      **改造前：**\n\n![](/images/水电改造之篇二3-4.png)\n![](/images/水电改造之篇二4.png)\n\n​      自己量好厨房尺寸，在“酷家乐”上随意弄的一个 **模型图：**\n\n![](/images/水电改造之篇二5.png)\n\n​      **改造后：**\n​     加装有洗碗机、集成灶、净水装置和厨宝(热水器)，热水器冬天简直刚需啊，现在家人用着不会因天气冻手了。\n\n![](/images/水电改造之篇二6.png)\n\n![](/images/水电改造之篇二7.png)\n\n![](/images/水电改造之篇二8.png)\n\n**改造的目的是想营造一个更好的用餐环境，靠自己双手努力，让生活变得更好；又或者说是一种乐趣与虚荣心得到满足？**\n  厨柜体、窗、吊顶都是喊人工过来帮忙换的，其余的细节是靠自己搞定的（涉及水、电路重布，切墙转孔等）\n\n\n- 价格：10000+5000（集成灶和洗碗机），这个橱柜价格肯定有得低，但我并未进行货比三家的流程，就是简单的还了一下价，自己估计8000可以搞定的。（不是钱不重要，而是这个时间问题，而且镇上并没有此类较完善的橱柜定制服务，还有就是志邦也算大牌子了，但期间有遇到发货延迟不愉快的事）\n\n  - 洗碗机：我买的容量是十套的，日常使用频率不高，这里不是因为它不好用，它确实好用省事，一天三餐扔里面，晚上按一下，完事；不高是因为平常老妈工作是不回来吃午饭的，老爸很多时候出去拉货、应酬啥的，碗碟都凑不齐，就别提开机使用了。（建议一家四口可以买个8套的，会提高使用频率，生活很舒适，我可不同意使用洗碗机就是懒的说法）\n  - 集成灶：与传统的对比，它属于油烟下排式，我买的是带消毒+储物功能；性能与传统区别相差不大，甚至更容易抽出油烟，这款是美的旗下华凌牌，平民价 性价比高，对比起外星人这个牌子，那可真是不在一个级别上。\n  - 净水器：这个产品的价格在市面上都有些虚高，本身技术层面来讲并没有太大难度。我购买的是淘宝上比较良心店家的diy款，是根据网友推荐的，买回后只需要自己简单组装，价格、耗材较透明合理，目前正常使用已有快2个月...TDS检测也正常...\n\n\n\n—————————————————————————————————————————\n\n对了，谈谈房与车：\n    父母给我在青云大桥附近买了房，首付是他们积攒下来的，其余贷款部分自然落在我身上。对于这个，大家一致认为没有这些连媒婆那关都过不了，更别说丈母娘，我也认同！但自己并非想如此，我向往的状态是慢慢遇到喜欢的人，双方愿意为了生活一起打拼、一起攒出属于自己的房与车，工资3k有3k的快乐，1w有1w的烦恼；这里突然脑海闪过动漫《凡人修仙传》歌词——终究平凡不平庸？ 与父辈的想法不契合难免会产生争吵，也许以后的我们就是现在他们的样子。\n\n​    老爸买了辆二手车，天天开出去：闲着时就去打麻将赌，忙着时甚至是跨省去看货，一部分卖家是他从抖音上面认识的货源；不过，在买房买车后我觉得他是有些飘了的：戒了挺久的烟瘾又给捡回来了、时常晚上出去赌一两点才回来，我们劝说他也是左耳进右耳出。。\n​    记得驾照是大学的时候考的，如今借着爸的二手车才真正上路过，自动挡与手动挡还是有本质上的区别，现在大多应该都是自动挡，很容易上手；回来这么久，我也没开过几次，一个是因为自己对开车没啥太大的兴趣，短距离出行，骑我的自行车更舒服（说到这个，就很讨厌大车开入那小小的桥圩街）；二个是因为越来越多的家庭拥有私家车且不止一辆，导致停车位紧张、道路拥堵，没有良好的开车体验我是比较反感的。也静待科技的来临，更强大的算法支持，打造更智能的停车场景。\n\n\n\n\n分享记录结束：\n    字码到这里了，我表示已经不想继续码下去了，还是就此收尾把。期待下一次记录。\n    **（等下又要出去吃，肚子是减不了咯）**\n    \n\n\n——记于2022.1.26，但设置了大年初一自动发出\n\n","source":"_posts/水电改造之篇二.md","raw":"---\ntitle: 水电改造之篇二\ndate: 2022-2-1 00:08:03\ncategories: \n  - 点滴生活\n---\n\n（我想想哈，该怎么写？不会止步于开头了把？？）\n    \n\n**今年是虎称王，新的一年里祝大家生龙活虎、虎虎生威！！虎头虎脑!？？咳咳...如标题，这是第二篇，上一篇记录是在2020年7月，主要记录自己所做的有意义的一些事；不过，其实我更想以时间线去记录，不论事大小，毕竟一年里肯定不止那几件事，但奈何我记性和写作能力是两座大山，无法逾越！（本文不长，图占位置多，有兴趣可以瞧瞧，足以看出我对生活的态度）**\n    \n\n    第二篇依旧以图文形式记录，具体响应下上一篇立下的flag：\n\n![](/images/水电改造之篇二0.png)\n\n​    这事开始前我还在深圳某公司当打工仔，于2021年4月离职，具体为何离职不想展开说，没什么必要。离职的唯一想法是回家自学半年。<!-- more -->\n​      **学什么呢？？**\n​        学某编程语言，一是兴趣，二是专业，三是在信息时代计算机行业的工资还算不错。\n​      **这么选择是否考虑后果或风险？**\n​        全职回家自学，属于裸辞，经济上还算允许，最主要的是需要自控力；至于后果，对我而言有：少赚大半年钱、工作经验的累计中断、职业生涯规划是否打乱、还有年龄，这些我都有考虑，不过，我毅然地决定并非是随意，有想法就行动，趁现在！\n​      **那么时间到了，且超过了半年，成效如何？有何感想？**\n​        很遗憾，直至今日我未能按照以上计划执行，自学编程只进行了半个月，后面因为一些事耽误了学习编程的进度，也就是这些事我得记录分享下（往下看）。\n​        感想：不后悔这么做，因为我已经付诸实践，已经踏出一大步、做出选择！\n​      **下一步棋，该怎么走？？**\n​        就毕业后工作在深圳的这两年来说，感觉没啥归属感，年后八九不离十会在广西内发展。\n​        虽因事耽误了学习编程的进度，但我却又有了其他计划，上个月报了自考本，带专生不服。\n\n​    插了小曲~现在接回上边的立flag：（三个点）\n\n​     **一：水路管道**（完成）\n​      家里原先使用的铁管，不管是技术还是材料都已年代久远，内部早就锈迹斑斑，甚至堵塞；家里是小四层自建房，比较难搞的部分是穿过楼层的地方，如图直径为1寸的铁管穿过，想要更换费点劲：\n​          ①拿工具截断，然后将其抽出；\n​          ②同样是截断，但不抽出，直接将6分塑管穿入铁管；（选择这个方法）\n​      另外：由于套入后剩余一圈空隙，不处理会导致对应四层上的地面有水会流下来，或者当前地面有水时会流下去；这个问题我在网上购买了**速干泥**裹一圈即可。\n\n![](/images/水电改造之篇二1.png)\n\n\n\n​    **二：电路走线**（完成）【地线没能搞定】\n​      什么电器用什么大小的线，统计家里电器的总功率，看图。\n\n![](/images/水电改造之篇二2.png)\n\n\n\n​        注意点or难点：\n​        ①根据环境选择软线还是硬线，这决定你布线难易程度；\n​        ②事先量好需要的长度，一次性购买节省时间与金钱，宁可量过长，千万别按照刚刚好去买；\n​        ③多买一些全铜质对接头，提高安全性、简易性、易维护性...\n​        ④全过程一个人做真的累，也费时间，别逞强，最好找个人一起吧。  \n​        ⑤预算不充足的情况下，拼多多是最好的选择，选好店铺，质量上应该ok\n​        ⑥......\n\n​      **总配电箱零件组装**：\n![](/images/水电改造之篇二.gif)\n\n![](/images/水电改造之篇二3.png)\n\n \n\n​    **三：厨房改造**（完成）\n​      可以看出墙壁很多油垢和其他脏的东西，物品摆放也比较杂乱，卫生环境一般。吊顶更早之前是没有的，老爸喊人家过来装上的。后来我回来了才着手开始改造。\n\n​      **改造前：**\n\n![](/images/水电改造之篇二3-4.png)\n![](/images/水电改造之篇二4.png)\n\n​      自己量好厨房尺寸，在“酷家乐”上随意弄的一个 **模型图：**\n\n![](/images/水电改造之篇二5.png)\n\n​      **改造后：**\n​     加装有洗碗机、集成灶、净水装置和厨宝(热水器)，热水器冬天简直刚需啊，现在家人用着不会因天气冻手了。\n\n![](/images/水电改造之篇二6.png)\n\n![](/images/水电改造之篇二7.png)\n\n![](/images/水电改造之篇二8.png)\n\n**改造的目的是想营造一个更好的用餐环境，靠自己双手努力，让生活变得更好；又或者说是一种乐趣与虚荣心得到满足？**\n  厨柜体、窗、吊顶都是喊人工过来帮忙换的，其余的细节是靠自己搞定的（涉及水、电路重布，切墙转孔等）\n\n\n- 价格：10000+5000（集成灶和洗碗机），这个橱柜价格肯定有得低，但我并未进行货比三家的流程，就是简单的还了一下价，自己估计8000可以搞定的。（不是钱不重要，而是这个时间问题，而且镇上并没有此类较完善的橱柜定制服务，还有就是志邦也算大牌子了，但期间有遇到发货延迟不愉快的事）\n\n  - 洗碗机：我买的容量是十套的，日常使用频率不高，这里不是因为它不好用，它确实好用省事，一天三餐扔里面，晚上按一下，完事；不高是因为平常老妈工作是不回来吃午饭的，老爸很多时候出去拉货、应酬啥的，碗碟都凑不齐，就别提开机使用了。（建议一家四口可以买个8套的，会提高使用频率，生活很舒适，我可不同意使用洗碗机就是懒的说法）\n  - 集成灶：与传统的对比，它属于油烟下排式，我买的是带消毒+储物功能；性能与传统区别相差不大，甚至更容易抽出油烟，这款是美的旗下华凌牌，平民价 性价比高，对比起外星人这个牌子，那可真是不在一个级别上。\n  - 净水器：这个产品的价格在市面上都有些虚高，本身技术层面来讲并没有太大难度。我购买的是淘宝上比较良心店家的diy款，是根据网友推荐的，买回后只需要自己简单组装，价格、耗材较透明合理，目前正常使用已有快2个月...TDS检测也正常...\n\n\n\n—————————————————————————————————————————\n\n对了，谈谈房与车：\n    父母给我在青云大桥附近买了房，首付是他们积攒下来的，其余贷款部分自然落在我身上。对于这个，大家一致认为没有这些连媒婆那关都过不了，更别说丈母娘，我也认同！但自己并非想如此，我向往的状态是慢慢遇到喜欢的人，双方愿意为了生活一起打拼、一起攒出属于自己的房与车，工资3k有3k的快乐，1w有1w的烦恼；这里突然脑海闪过动漫《凡人修仙传》歌词——终究平凡不平庸？ 与父辈的想法不契合难免会产生争吵，也许以后的我们就是现在他们的样子。\n\n​    老爸买了辆二手车，天天开出去：闲着时就去打麻将赌，忙着时甚至是跨省去看货，一部分卖家是他从抖音上面认识的货源；不过，在买房买车后我觉得他是有些飘了的：戒了挺久的烟瘾又给捡回来了、时常晚上出去赌一两点才回来，我们劝说他也是左耳进右耳出。。\n​    记得驾照是大学的时候考的，如今借着爸的二手车才真正上路过，自动挡与手动挡还是有本质上的区别，现在大多应该都是自动挡，很容易上手；回来这么久，我也没开过几次，一个是因为自己对开车没啥太大的兴趣，短距离出行，骑我的自行车更舒服（说到这个，就很讨厌大车开入那小小的桥圩街）；二个是因为越来越多的家庭拥有私家车且不止一辆，导致停车位紧张、道路拥堵，没有良好的开车体验我是比较反感的。也静待科技的来临，更强大的算法支持，打造更智能的停车场景。\n\n\n\n\n分享记录结束：\n    字码到这里了，我表示已经不想继续码下去了，还是就此收尾把。期待下一次记录。\n    **（等下又要出去吃，肚子是减不了咯）**\n    \n\n\n——记于2022.1.26，但设置了大年初一自动发出\n\n","slug":"水电改造之篇二","published":1,"updated":"2022-04-16T15:25:59.237Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f58000ufoo38nl6h6w6","content":"<p>（我想想哈，该怎么写？不会止步于开头了把？？）</p>\n<p><strong>今年是虎称王，新的一年里祝大家生龙活虎、虎虎生威！！虎头虎脑!？？咳咳…如标题，这是第二篇，上一篇记录是在2020年7月，主要记录自己所做的有意义的一些事；不过，其实我更想以时间线去记录，不论事大小，毕竟一年里肯定不止那几件事，但奈何我记性和写作能力是两座大山，无法逾越！（本文不长，图占位置多，有兴趣可以瞧瞧，足以看出我对生活的态度）</strong></p>\n<pre><code>第二篇依旧以图文形式记录，具体响应下上一篇立下的flag：\n</code></pre>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C0.png\"></p>\n<p>​    这事开始前我还在深圳某公司当打工仔，于2021年4月离职，具体为何离职不想展开说，没什么必要。离职的唯一想法是回家自学半年。<span id=\"more\"></span><br>​      <strong>学什么呢？？</strong><br>​        学某编程语言，一是兴趣，二是专业，三是在信息时代计算机行业的工资还算不错。<br>​      <strong>这么选择是否考虑后果或风险？</strong><br>​        全职回家自学，属于裸辞，经济上还算允许，最主要的是需要自控力；至于后果，对我而言有：少赚大半年钱、工作经验的累计中断、职业生涯规划是否打乱、还有年龄，这些我都有考虑，不过，我毅然地决定并非是随意，有想法就行动，趁现在！<br>​      <strong>那么时间到了，且超过了半年，成效如何？有何感想？</strong><br>​        很遗憾，直至今日我未能按照以上计划执行，自学编程只进行了半个月，后面因为一些事耽误了学习编程的进度，也就是这些事我得记录分享下（往下看）。<br>​        感想：不后悔这么做，因为我已经付诸实践，已经踏出一大步、做出选择！<br>​      <strong>下一步棋，该怎么走？？</strong><br>​        就毕业后工作在深圳的这两年来说，感觉没啥归属感，年后八九不离十会在广西内发展。<br>​        虽因事耽误了学习编程的进度，但我却又有了其他计划，上个月报了自考本，带专生不服。</p>\n<p>​    插了小曲~现在接回上边的立flag：（三个点）</p>\n<p>​     <strong>一：水路管道</strong>（完成）<br>​      家里原先使用的铁管，不管是技术还是材料都已年代久远，内部早就锈迹斑斑，甚至堵塞；家里是小四层自建房，比较难搞的部分是穿过楼层的地方，如图直径为1寸的铁管穿过，想要更换费点劲：<br>​          ①拿工具截断，然后将其抽出；<br>​          ②同样是截断，但不抽出，直接将6分塑管穿入铁管；（选择这个方法）<br>​      另外：由于套入后剩余一圈空隙，不处理会导致对应四层上的地面有水会流下来，或者当前地面有水时会流下去；这个问题我在网上购买了<strong>速干泥</strong>裹一圈即可。</p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C1.png\"></p>\n<p>​    <strong>二：电路走线</strong>（完成）【地线没能搞定】<br>​      什么电器用什么大小的线，统计家里电器的总功率，看图。</p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C2.png\"></p>\n<p>​        注意点or难点：<br>​        ①根据环境选择软线还是硬线，这决定你布线难易程度；<br>​        ②事先量好需要的长度，一次性购买节省时间与金钱，宁可量过长，千万别按照刚刚好去买；<br>​        ③多买一些全铜质对接头，提高安全性、简易性、易维护性…<br>​        ④全过程一个人做真的累，也费时间，别逞强，最好找个人一起吧。<br>​        ⑤预算不充足的情况下，拼多多是最好的选择，选好店铺，质量上应该ok<br>​        ⑥……</p>\n<p>​      <strong>总配电箱零件组装</strong>：<br><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C.gif\"></p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C3.png\"></p>\n<p>​    <strong>三：厨房改造</strong>（完成）<br>​      可以看出墙壁很多油垢和其他脏的东西，物品摆放也比较杂乱，卫生环境一般。吊顶更早之前是没有的，老爸喊人家过来装上的。后来我回来了才着手开始改造。</p>\n<p>​      <strong>改造前：</strong></p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C3-4.png\"><br><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C4.png\"></p>\n<p>​      自己量好厨房尺寸，在“酷家乐”上随意弄的一个 <strong>模型图：</strong></p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C5.png\"></p>\n<p>​      <strong>改造后：</strong><br>​     加装有洗碗机、集成灶、净水装置和厨宝(热水器)，热水器冬天简直刚需啊，现在家人用着不会因天气冻手了。</p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C6.png\"></p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C7.png\"></p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C8.png\"></p>\n<p><strong>改造的目的是想营造一个更好的用餐环境，靠自己双手努力，让生活变得更好；又或者说是一种乐趣与虚荣心得到满足？</strong><br>  厨柜体、窗、吊顶都是喊人工过来帮忙换的，其余的细节是靠自己搞定的（涉及水、电路重布，切墙转孔等）</p>\n<ul>\n<li><p>价格：10000+5000（集成灶和洗碗机），这个橱柜价格肯定有得低，但我并未进行货比三家的流程，就是简单的还了一下价，自己估计8000可以搞定的。（不是钱不重要，而是这个时间问题，而且镇上并没有此类较完善的橱柜定制服务，还有就是志邦也算大牌子了，但期间有遇到发货延迟不愉快的事）</p>\n<ul>\n<li>洗碗机：我买的容量是十套的，日常使用频率不高，这里不是因为它不好用，它确实好用省事，一天三餐扔里面，晚上按一下，完事；不高是因为平常老妈工作是不回来吃午饭的，老爸很多时候出去拉货、应酬啥的，碗碟都凑不齐，就别提开机使用了。（建议一家四口可以买个8套的，会提高使用频率，生活很舒适，我可不同意使用洗碗机就是懒的说法）</li>\n<li>集成灶：与传统的对比，它属于油烟下排式，我买的是带消毒+储物功能；性能与传统区别相差不大，甚至更容易抽出油烟，这款是美的旗下华凌牌，平民价 性价比高，对比起外星人这个牌子，那可真是不在一个级别上。</li>\n<li>净水器：这个产品的价格在市面上都有些虚高，本身技术层面来讲并没有太大难度。我购买的是淘宝上比较良心店家的diy款，是根据网友推荐的，买回后只需要自己简单组装，价格、耗材较透明合理，目前正常使用已有快2个月…TDS检测也正常…</li>\n</ul>\n</li>\n</ul>\n<p>—————————————————————————————————————————</p>\n<p>对了，谈谈房与车：<br>    父母给我在青云大桥附近买了房，首付是他们积攒下来的，其余贷款部分自然落在我身上。对于这个，大家一致认为没有这些连媒婆那关都过不了，更别说丈母娘，我也认同！但自己并非想如此，我向往的状态是慢慢遇到喜欢的人，双方愿意为了生活一起打拼、一起攒出属于自己的房与车，工资3k有3k的快乐，1w有1w的烦恼；这里突然脑海闪过动漫《凡人修仙传》歌词——终究平凡不平庸？ 与父辈的想法不契合难免会产生争吵，也许以后的我们就是现在他们的样子。</p>\n<p>​    老爸买了辆二手车，天天开出去：闲着时就去打麻将赌，忙着时甚至是跨省去看货，一部分卖家是他从抖音上面认识的货源；不过，在买房买车后我觉得他是有些飘了的：戒了挺久的烟瘾又给捡回来了、时常晚上出去赌一两点才回来，我们劝说他也是左耳进右耳出。。<br>​    记得驾照是大学的时候考的，如今借着爸的二手车才真正上路过，自动挡与手动挡还是有本质上的区别，现在大多应该都是自动挡，很容易上手；回来这么久，我也没开过几次，一个是因为自己对开车没啥太大的兴趣，短距离出行，骑我的自行车更舒服（说到这个，就很讨厌大车开入那小小的桥圩街）；二个是因为越来越多的家庭拥有私家车且不止一辆，导致停车位紧张、道路拥堵，没有良好的开车体验我是比较反感的。也静待科技的来临，更强大的算法支持，打造更智能的停车场景。</p>\n<p>分享记录结束：<br>    字码到这里了，我表示已经不想继续码下去了，还是就此收尾把。期待下一次记录。<br>    <strong>（等下又要出去吃，肚子是减不了咯）</strong></p>\n<p>——记于2022.1.26，但设置了大年初一自动发出</p>\n","site":{"data":{}},"excerpt":"<p>（我想想哈，该怎么写？不会止步于开头了把？？）</p>\n<p><strong>今年是虎称王，新的一年里祝大家生龙活虎、虎虎生威！！虎头虎脑!？？咳咳…如标题，这是第二篇，上一篇记录是在2020年7月，主要记录自己所做的有意义的一些事；不过，其实我更想以时间线去记录，不论事大小，毕竟一年里肯定不止那几件事，但奈何我记性和写作能力是两座大山，无法逾越！（本文不长，图占位置多，有兴趣可以瞧瞧，足以看出我对生活的态度）</strong></p>\n<pre><code>第二篇依旧以图文形式记录，具体响应下上一篇立下的flag：\n</code></pre>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C0.png\"></p>\n<p>​    这事开始前我还在深圳某公司当打工仔，于2021年4月离职，具体为何离职不想展开说，没什么必要。离职的唯一想法是回家自学半年。","more":"<br>​      <strong>学什么呢？？</strong><br>​        学某编程语言，一是兴趣，二是专业，三是在信息时代计算机行业的工资还算不错。<br>​      <strong>这么选择是否考虑后果或风险？</strong><br>​        全职回家自学，属于裸辞，经济上还算允许，最主要的是需要自控力；至于后果，对我而言有：少赚大半年钱、工作经验的累计中断、职业生涯规划是否打乱、还有年龄，这些我都有考虑，不过，我毅然地决定并非是随意，有想法就行动，趁现在！<br>​      <strong>那么时间到了，且超过了半年，成效如何？有何感想？</strong><br>​        很遗憾，直至今日我未能按照以上计划执行，自学编程只进行了半个月，后面因为一些事耽误了学习编程的进度，也就是这些事我得记录分享下（往下看）。<br>​        感想：不后悔这么做，因为我已经付诸实践，已经踏出一大步、做出选择！<br>​      <strong>下一步棋，该怎么走？？</strong><br>​        就毕业后工作在深圳的这两年来说，感觉没啥归属感，年后八九不离十会在广西内发展。<br>​        虽因事耽误了学习编程的进度，但我却又有了其他计划，上个月报了自考本，带专生不服。</p>\n<p>​    插了小曲~现在接回上边的立flag：（三个点）</p>\n<p>​     <strong>一：水路管道</strong>（完成）<br>​      家里原先使用的铁管，不管是技术还是材料都已年代久远，内部早就锈迹斑斑，甚至堵塞；家里是小四层自建房，比较难搞的部分是穿过楼层的地方，如图直径为1寸的铁管穿过，想要更换费点劲：<br>​          ①拿工具截断，然后将其抽出；<br>​          ②同样是截断，但不抽出，直接将6分塑管穿入铁管；（选择这个方法）<br>​      另外：由于套入后剩余一圈空隙，不处理会导致对应四层上的地面有水会流下来，或者当前地面有水时会流下去；这个问题我在网上购买了<strong>速干泥</strong>裹一圈即可。</p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C1.png\"></p>\n<p>​    <strong>二：电路走线</strong>（完成）【地线没能搞定】<br>​      什么电器用什么大小的线，统计家里电器的总功率，看图。</p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C2.png\"></p>\n<p>​        注意点or难点：<br>​        ①根据环境选择软线还是硬线，这决定你布线难易程度；<br>​        ②事先量好需要的长度，一次性购买节省时间与金钱，宁可量过长，千万别按照刚刚好去买；<br>​        ③多买一些全铜质对接头，提高安全性、简易性、易维护性…<br>​        ④全过程一个人做真的累，也费时间，别逞强，最好找个人一起吧。<br>​        ⑤预算不充足的情况下，拼多多是最好的选择，选好店铺，质量上应该ok<br>​        ⑥……</p>\n<p>​      <strong>总配电箱零件组装</strong>：<br><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C.gif\"></p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C3.png\"></p>\n<p>​    <strong>三：厨房改造</strong>（完成）<br>​      可以看出墙壁很多油垢和其他脏的东西，物品摆放也比较杂乱，卫生环境一般。吊顶更早之前是没有的，老爸喊人家过来装上的。后来我回来了才着手开始改造。</p>\n<p>​      <strong>改造前：</strong></p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C3-4.png\"><br><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C4.png\"></p>\n<p>​      自己量好厨房尺寸，在“酷家乐”上随意弄的一个 <strong>模型图：</strong></p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C5.png\"></p>\n<p>​      <strong>改造后：</strong><br>​     加装有洗碗机、集成灶、净水装置和厨宝(热水器)，热水器冬天简直刚需啊，现在家人用着不会因天气冻手了。</p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C6.png\"></p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C7.png\"></p>\n<p><img src=\"/images/%E6%B0%B4%E7%94%B5%E6%94%B9%E9%80%A0%E4%B9%8B%E7%AF%87%E4%BA%8C8.png\"></p>\n<p><strong>改造的目的是想营造一个更好的用餐环境，靠自己双手努力，让生活变得更好；又或者说是一种乐趣与虚荣心得到满足？</strong><br>  厨柜体、窗、吊顶都是喊人工过来帮忙换的，其余的细节是靠自己搞定的（涉及水、电路重布，切墙转孔等）</p>\n<ul>\n<li><p>价格：10000+5000（集成灶和洗碗机），这个橱柜价格肯定有得低，但我并未进行货比三家的流程，就是简单的还了一下价，自己估计8000可以搞定的。（不是钱不重要，而是这个时间问题，而且镇上并没有此类较完善的橱柜定制服务，还有就是志邦也算大牌子了，但期间有遇到发货延迟不愉快的事）</p>\n<ul>\n<li>洗碗机：我买的容量是十套的，日常使用频率不高，这里不是因为它不好用，它确实好用省事，一天三餐扔里面，晚上按一下，完事；不高是因为平常老妈工作是不回来吃午饭的，老爸很多时候出去拉货、应酬啥的，碗碟都凑不齐，就别提开机使用了。（建议一家四口可以买个8套的，会提高使用频率，生活很舒适，我可不同意使用洗碗机就是懒的说法）</li>\n<li>集成灶：与传统的对比，它属于油烟下排式，我买的是带消毒+储物功能；性能与传统区别相差不大，甚至更容易抽出油烟，这款是美的旗下华凌牌，平民价 性价比高，对比起外星人这个牌子，那可真是不在一个级别上。</li>\n<li>净水器：这个产品的价格在市面上都有些虚高，本身技术层面来讲并没有太大难度。我购买的是淘宝上比较良心店家的diy款，是根据网友推荐的，买回后只需要自己简单组装，价格、耗材较透明合理，目前正常使用已有快2个月…TDS检测也正常…</li>\n</ul>\n</li>\n</ul>\n<p>—————————————————————————————————————————</p>\n<p>对了，谈谈房与车：<br>    父母给我在青云大桥附近买了房，首付是他们积攒下来的，其余贷款部分自然落在我身上。对于这个，大家一致认为没有这些连媒婆那关都过不了，更别说丈母娘，我也认同！但自己并非想如此，我向往的状态是慢慢遇到喜欢的人，双方愿意为了生活一起打拼、一起攒出属于自己的房与车，工资3k有3k的快乐，1w有1w的烦恼；这里突然脑海闪过动漫《凡人修仙传》歌词——终究平凡不平庸？ 与父辈的想法不契合难免会产生争吵，也许以后的我们就是现在他们的样子。</p>\n<p>​    老爸买了辆二手车，天天开出去：闲着时就去打麻将赌，忙着时甚至是跨省去看货，一部分卖家是他从抖音上面认识的货源；不过，在买房买车后我觉得他是有些飘了的：戒了挺久的烟瘾又给捡回来了、时常晚上出去赌一两点才回来，我们劝说他也是左耳进右耳出。。<br>​    记得驾照是大学的时候考的，如今借着爸的二手车才真正上路过，自动挡与手动挡还是有本质上的区别，现在大多应该都是自动挡，很容易上手；回来这么久，我也没开过几次，一个是因为自己对开车没啥太大的兴趣，短距离出行，骑我的自行车更舒服（说到这个，就很讨厌大车开入那小小的桥圩街）；二个是因为越来越多的家庭拥有私家车且不止一辆，导致停车位紧张、道路拥堵，没有良好的开车体验我是比较反感的。也静待科技的来临，更强大的算法支持，打造更智能的停车场景。</p>\n<p>分享记录结束：<br>    字码到这里了，我表示已经不想继续码下去了，还是就此收尾把。期待下一次记录。<br>    <strong>（等下又要出去吃，肚子是减不了咯）</strong></p>\n<p>——记于2022.1.26，但设置了大年初一自动发出</p>"},{"title":"笔记本无线网卡修改MAC","date":"2021-02-08T12:32:05.000Z","_content":"\n#### 思路：对于有线网卡，我们可以直接通过修改属性NetworkAddress的值达到目的；但鉴于无线网卡有些是没有这个值的，于是我们可以通过注册表为该无线网卡添加NetworkAddress值达到目的；\n\n![](/images/笔记本无线网卡修改MAC1.png)\n\n### 开始操作：\n\n1. “WIN+R”打开运行 - regedit\n\n2. 打开该路径：\n\n   > 计算机\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class\\{4d36e972-e325-11ce-bfc1-08002be10318}\n\n<!-- more -->\n\n   我们可以看到好多00xx开头的文件夹，这些表示电脑安装的各个网卡，我的有线网卡是0002，下有一个值DriverDesc对应我的有线网卡名称：ASIX AX88179 USB 3.0 to Gigabit Ethernet Adapter；按照对应关系我们找到无线网卡的目录为：0001\n\n3. 这时候我们对照有线网卡0002为无线网卡0001添加对应值；\n\n4. 有线网卡NetworkAddress的值在路径：~\\0002\\Ndi\\params\n\n5. 同样，我们给无线网卡~\\0001\\Ndi\\params路径下也添加NetworkAddress这个值；\n\n6. 这是0002有线网卡的属性值路径。右侧的6个属性值同样添动加到无线网卡的NetworkAddress项里![](/images/笔记本无线网卡修改MAC2.png)\n\n7. 最后在无线网卡的~\\0001主目录下右键再另添加一个项NetworkAddress值为你需要修改的MAC\n\n\n\n最后补下无线网卡修改后的图：\n\n![](/images/笔记本无线网卡修改MAC3.png)\n\n![](/images/笔记本无线网卡修改MAC4.png)\n\n![](/images/笔记本无线网卡修改MAC5.png)\n\nPS：修改的MAC只能是以下段(2、6、A、E)\n\n02xx-xxxx-xxxx-xxxx\n\n06xx-xxxx-xxxx-xxxx\n\n0Axx-xxxx-xxxx-xxxx\n\n0Exx-xxxx-xxxx-xxxx\n\n最后重启生效。","source":"_posts/笔记本无线网卡修改MAC.md","raw":"---\ntitle: 笔记本无线网卡修改MAC\ndate: 2021-02-08 20:32:05\ncategories: \n  - 日常捣鼓\n---\n\n#### 思路：对于有线网卡，我们可以直接通过修改属性NetworkAddress的值达到目的；但鉴于无线网卡有些是没有这个值的，于是我们可以通过注册表为该无线网卡添加NetworkAddress值达到目的；\n\n![](/images/笔记本无线网卡修改MAC1.png)\n\n### 开始操作：\n\n1. “WIN+R”打开运行 - regedit\n\n2. 打开该路径：\n\n   > 计算机\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class\\{4d36e972-e325-11ce-bfc1-08002be10318}\n\n<!-- more -->\n\n   我们可以看到好多00xx开头的文件夹，这些表示电脑安装的各个网卡，我的有线网卡是0002，下有一个值DriverDesc对应我的有线网卡名称：ASIX AX88179 USB 3.0 to Gigabit Ethernet Adapter；按照对应关系我们找到无线网卡的目录为：0001\n\n3. 这时候我们对照有线网卡0002为无线网卡0001添加对应值；\n\n4. 有线网卡NetworkAddress的值在路径：~\\0002\\Ndi\\params\n\n5. 同样，我们给无线网卡~\\0001\\Ndi\\params路径下也添加NetworkAddress这个值；\n\n6. 这是0002有线网卡的属性值路径。右侧的6个属性值同样添动加到无线网卡的NetworkAddress项里![](/images/笔记本无线网卡修改MAC2.png)\n\n7. 最后在无线网卡的~\\0001主目录下右键再另添加一个项NetworkAddress值为你需要修改的MAC\n\n\n\n最后补下无线网卡修改后的图：\n\n![](/images/笔记本无线网卡修改MAC3.png)\n\n![](/images/笔记本无线网卡修改MAC4.png)\n\n![](/images/笔记本无线网卡修改MAC5.png)\n\nPS：修改的MAC只能是以下段(2、6、A、E)\n\n02xx-xxxx-xxxx-xxxx\n\n06xx-xxxx-xxxx-xxxx\n\n0Axx-xxxx-xxxx-xxxx\n\n0Exx-xxxx-xxxx-xxxx\n\n最后重启生效。","slug":"笔记本无线网卡修改MAC","published":1,"updated":"2022-04-15T21:15:36.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f59000xfoo37k304n2h","content":"<h4 id=\"思路：对于有线网卡，我们可以直接通过修改属性NetworkAddress的值达到目的；但鉴于无线网卡有些是没有这个值的，于是我们可以通过注册表为该无线网卡添加NetworkAddress值达到目的；\"><a href=\"#思路：对于有线网卡，我们可以直接通过修改属性NetworkAddress的值达到目的；但鉴于无线网卡有些是没有这个值的，于是我们可以通过注册表为该无线网卡添加NetworkAddress值达到目的；\" class=\"headerlink\" title=\"思路：对于有线网卡，我们可以直接通过修改属性NetworkAddress的值达到目的；但鉴于无线网卡有些是没有这个值的，于是我们可以通过注册表为该无线网卡添加NetworkAddress值达到目的；\"></a>思路：对于有线网卡，我们可以直接通过修改属性NetworkAddress的值达到目的；但鉴于无线网卡有些是没有这个值的，于是我们可以通过注册表为该无线网卡添加NetworkAddress值达到目的；</h4><p><img src=\"/images/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%BF%AE%E6%94%B9MAC1.png\"></p>\n<h3 id=\"开始操作：\"><a href=\"#开始操作：\" class=\"headerlink\" title=\"开始操作：\"></a>开始操作：</h3><ol>\n<li><p>“WIN+R”打开运行 - regedit</p>\n</li>\n<li><p>打开该路径：</p>\n<blockquote>\n<p>计算机\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class{4d36e972-e325-11ce-bfc1-08002be10318}</p>\n</blockquote>\n</li>\n</ol>\n<span id=\"more\"></span>\n\n<p>   我们可以看到好多00xx开头的文件夹，这些表示电脑安装的各个网卡，我的有线网卡是0002，下有一个值DriverDesc对应我的有线网卡名称：ASIX AX88179 USB 3.0 to Gigabit Ethernet Adapter；按照对应关系我们找到无线网卡的目录为：0001</p>\n<ol start=\"3\">\n<li><p>这时候我们对照有线网卡0002为无线网卡0001添加对应值；</p>\n</li>\n<li><p>有线网卡NetworkAddress的值在路径：~\\0002\\Ndi\\params</p>\n</li>\n<li><p>同样，我们给无线网卡~\\0001\\Ndi\\params路径下也添加NetworkAddress这个值；</p>\n</li>\n<li><p>这是0002有线网卡的属性值路径。右侧的6个属性值同样添动加到无线网卡的NetworkAddress项里<img src=\"/images/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%BF%AE%E6%94%B9MAC2.png\"></p>\n</li>\n<li><p>最后在无线网卡的~\\0001主目录下右键再另添加一个项NetworkAddress值为你需要修改的MAC</p>\n</li>\n</ol>\n<p>最后补下无线网卡修改后的图：</p>\n<p><img src=\"/images/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%BF%AE%E6%94%B9MAC3.png\"></p>\n<p><img src=\"/images/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%BF%AE%E6%94%B9MAC4.png\"></p>\n<p><img src=\"/images/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%BF%AE%E6%94%B9MAC5.png\"></p>\n<p>PS：修改的MAC只能是以下段(2、6、A、E)</p>\n<p>02xx-xxxx-xxxx-xxxx</p>\n<p>06xx-xxxx-xxxx-xxxx</p>\n<p>0Axx-xxxx-xxxx-xxxx</p>\n<p>0Exx-xxxx-xxxx-xxxx</p>\n<p>最后重启生效。</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"思路：对于有线网卡，我们可以直接通过修改属性NetworkAddress的值达到目的；但鉴于无线网卡有些是没有这个值的，于是我们可以通过注册表为该无线网卡添加NetworkAddress值达到目的；\"><a href=\"#思路：对于有线网卡，我们可以直接通过修改属性NetworkAddress的值达到目的；但鉴于无线网卡有些是没有这个值的，于是我们可以通过注册表为该无线网卡添加NetworkAddress值达到目的；\" class=\"headerlink\" title=\"思路：对于有线网卡，我们可以直接通过修改属性NetworkAddress的值达到目的；但鉴于无线网卡有些是没有这个值的，于是我们可以通过注册表为该无线网卡添加NetworkAddress值达到目的；\"></a>思路：对于有线网卡，我们可以直接通过修改属性NetworkAddress的值达到目的；但鉴于无线网卡有些是没有这个值的，于是我们可以通过注册表为该无线网卡添加NetworkAddress值达到目的；</h4><p><img src=\"/images/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%BF%AE%E6%94%B9MAC1.png\"></p>\n<h3 id=\"开始操作：\"><a href=\"#开始操作：\" class=\"headerlink\" title=\"开始操作：\"></a>开始操作：</h3><ol>\n<li><p>“WIN+R”打开运行 - regedit</p>\n</li>\n<li><p>打开该路径：</p>\n<blockquote>\n<p>计算机\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class{4d36e972-e325-11ce-bfc1-08002be10318}</p>\n</blockquote>\n</li>\n</ol>","more":"<p>   我们可以看到好多00xx开头的文件夹，这些表示电脑安装的各个网卡，我的有线网卡是0002，下有一个值DriverDesc对应我的有线网卡名称：ASIX AX88179 USB 3.0 to Gigabit Ethernet Adapter；按照对应关系我们找到无线网卡的目录为：0001</p>\n<ol start=\"3\">\n<li><p>这时候我们对照有线网卡0002为无线网卡0001添加对应值；</p>\n</li>\n<li><p>有线网卡NetworkAddress的值在路径：~\\0002\\Ndi\\params</p>\n</li>\n<li><p>同样，我们给无线网卡~\\0001\\Ndi\\params路径下也添加NetworkAddress这个值；</p>\n</li>\n<li><p>这是0002有线网卡的属性值路径。右侧的6个属性值同样添动加到无线网卡的NetworkAddress项里<img src=\"/images/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%BF%AE%E6%94%B9MAC2.png\"></p>\n</li>\n<li><p>最后在无线网卡的~\\0001主目录下右键再另添加一个项NetworkAddress值为你需要修改的MAC</p>\n</li>\n</ol>\n<p>最后补下无线网卡修改后的图：</p>\n<p><img src=\"/images/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%BF%AE%E6%94%B9MAC3.png\"></p>\n<p><img src=\"/images/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%BF%AE%E6%94%B9MAC4.png\"></p>\n<p><img src=\"/images/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%BF%AE%E6%94%B9MAC5.png\"></p>\n<p>PS：修改的MAC只能是以下段(2、6、A、E)</p>\n<p>02xx-xxxx-xxxx-xxxx</p>\n<p>06xx-xxxx-xxxx-xxxx</p>\n<p>0Axx-xxxx-xxxx-xxxx</p>\n<p>0Exx-xxxx-xxxx-xxxx</p>\n<p>最后重启生效。</p>"},{"title":"路由器刷机备份分区命令","date":"2019-10-18T04:12:35.000Z","_content":"\n- ssh登录到系统后台，先是执行命令  cat  /proc/mtd  查看磁盘情况，结果类似下面这样的。\n\n  ```sh\n  cat  /proc/mtd\n  ```\n\n​\tdev:    size          erasesize  name\n​\tmtd0: 01000000 00020000 \"boot\"\n​\tmtd1: 01000000 00020000 \"setting\"\n​\tmtd2: 02000000 00020000 \"rootfs\"\n​\tmtd3: 0be00000 00020000 \"home\"\n​\tmtd4: 00200000 00020000 \"storage\"\n​\tmtd5: 00040000 00010000 \"u-boot\"\n​\tmtd6: 00040000 00010000 \"others\"\n\n<!-- more -->\n- 然后用 dd 命令，将每个mtd 逐个复制并输出到我u盘里去。   \n\n  ```sh\n  dd if=/dev/mtd0 of=/mnt/sda4/uboot-env.bin\n  dd if=/dev/mtd1 of=/mnt/sda4/factory.bin\n  dd if=/dev/mtd2 of=/mnt/sda4/firmware.bin\n  ```\n  \n  \n","source":"_posts/路由器刷机备份分区命令.md","raw":"---\ntitle: 路由器刷机备份分区命令\ndate: 2019-10-18 12:12:35\ncategories: \n  - 日常捣鼓\n---\n\n- ssh登录到系统后台，先是执行命令  cat  /proc/mtd  查看磁盘情况，结果类似下面这样的。\n\n  ```sh\n  cat  /proc/mtd\n  ```\n\n​\tdev:    size          erasesize  name\n​\tmtd0: 01000000 00020000 \"boot\"\n​\tmtd1: 01000000 00020000 \"setting\"\n​\tmtd2: 02000000 00020000 \"rootfs\"\n​\tmtd3: 0be00000 00020000 \"home\"\n​\tmtd4: 00200000 00020000 \"storage\"\n​\tmtd5: 00040000 00010000 \"u-boot\"\n​\tmtd6: 00040000 00010000 \"others\"\n\n<!-- more -->\n- 然后用 dd 命令，将每个mtd 逐个复制并输出到我u盘里去。   \n\n  ```sh\n  dd if=/dev/mtd0 of=/mnt/sda4/uboot-env.bin\n  dd if=/dev/mtd1 of=/mnt/sda4/factory.bin\n  dd if=/dev/mtd2 of=/mnt/sda4/firmware.bin\n  ```\n  \n  \n","slug":"路由器刷机备份分区命令","published":1,"updated":"2022-04-15T21:15:36.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f5a000zfoo3cm57gv4z","content":"<ul>\n<li><p>ssh登录到系统后台，先是执行命令  cat  &#x2F;proc&#x2F;mtd  查看磁盘情况，结果类似下面这样的。</p>\n<pre><code class=\"sh\">cat  /proc/mtd\n</code></pre>\n</li>\n</ul>\n<p>​\tdev:    size          erasesize  name<br>​\tmtd0: 01000000 00020000 “boot”<br>​\tmtd1: 01000000 00020000 “setting”<br>​\tmtd2: 02000000 00020000 “rootfs”<br>​\tmtd3: 0be00000 00020000 “home”<br>​\tmtd4: 00200000 00020000 “storage”<br>​\tmtd5: 00040000 00010000 “u-boot”<br>​\tmtd6: 00040000 00010000 “others”</p>\n<span id=\"more\"></span>\n<ul>\n<li><p>然后用 dd 命令，将每个mtd 逐个复制并输出到我u盘里去。   </p>\n<pre><code class=\"sh\">dd if=/dev/mtd0 of=/mnt/sda4/uboot-env.bin\ndd if=/dev/mtd1 of=/mnt/sda4/factory.bin\ndd if=/dev/mtd2 of=/mnt/sda4/firmware.bin\n</code></pre>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<ul>\n<li><p>ssh登录到系统后台，先是执行命令  cat  &#x2F;proc&#x2F;mtd  查看磁盘情况，结果类似下面这样的。</p>\n<pre><code class=\"sh\">cat  /proc/mtd\n</code></pre>\n</li>\n</ul>\n<p>​\tdev:    size          erasesize  name<br>​\tmtd0: 01000000 00020000 “boot”<br>​\tmtd1: 01000000 00020000 “setting”<br>​\tmtd2: 02000000 00020000 “rootfs”<br>​\tmtd3: 0be00000 00020000 “home”<br>​\tmtd4: 00200000 00020000 “storage”<br>​\tmtd5: 00040000 00010000 “u-boot”<br>​\tmtd6: 00040000 00010000 “others”</p>","more":"<ul>\n<li><p>然后用 dd 命令，将每个mtd 逐个复制并输出到我u盘里去。   </p>\n<pre><code class=\"sh\">dd if=/dev/mtd0 of=/mnt/sda4/uboot-env.bin\ndd if=/dev/mtd1 of=/mnt/sda4/factory.bin\ndd if=/dev/mtd2 of=/mnt/sda4/firmware.bin\n</code></pre>\n</li>\n</ul>"},{"title":"默认开启USB调试模式、未知源、GPS、重力感应开关","date":"2018-11-22T03:12:15.000Z","_content":"\n　　默认开启usb调试\tsystem/build.prop中添加或修改\n\n```xml\npersist.service.adb.enable=1\n```\n\n　　修改未知源\n\n　　1，反编译SettingsProvider.apk\n\n　　2，修改res/values/bools.xml/\t修改false为true\n\n```xml\n<bool name=\"def_install_non_market_apps\">false</bool>\n```\n\n<!-- more -->\n\n　　关闭重力感应\n\n　　1，反编译SettingsProvider.apk\n\n　　2，修改res/values/bools.xml\t修改true为false\n\n```xml\n<bool name=\"def_accelerometer_rotation\">true </bool>\n```\n\n\n\n　　关闭GPS\n\n　　1，反编译SettingsProvider.apk\n\n　　2，修改res/values/strings.xml/\t修改gps为null，null就是啥都没有的意思\n\n```xml\n<string name=\"def_location_providers_allowed\">gps</string>\n```\n\n","source":"_posts/默认开启USB调试模式、未知源、GPS、重力感应开关.md","raw":"---\ntitle: 默认开启USB调试模式、未知源、GPS、重力感应开关\ndate: 2018-11-22 11:12:15\ncategories: \n  - 日常捣鼓\n---\n\n　　默认开启usb调试\tsystem/build.prop中添加或修改\n\n```xml\npersist.service.adb.enable=1\n```\n\n　　修改未知源\n\n　　1，反编译SettingsProvider.apk\n\n　　2，修改res/values/bools.xml/\t修改false为true\n\n```xml\n<bool name=\"def_install_non_market_apps\">false</bool>\n```\n\n<!-- more -->\n\n　　关闭重力感应\n\n　　1，反编译SettingsProvider.apk\n\n　　2，修改res/values/bools.xml\t修改true为false\n\n```xml\n<bool name=\"def_accelerometer_rotation\">true </bool>\n```\n\n\n\n　　关闭GPS\n\n　　1，反编译SettingsProvider.apk\n\n　　2，修改res/values/strings.xml/\t修改gps为null，null就是啥都没有的意思\n\n```xml\n<string name=\"def_location_providers_allowed\">gps</string>\n```\n\n","slug":"默认开启USB调试模式、未知源、GPS、重力感应开关","published":1,"updated":"2022-04-15T21:15:36.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl22v8f5b0012foo380ft2xu2","content":"<p>　　默认开启usb调试\tsystem&#x2F;build.prop中添加或修改</p>\n<pre><code class=\"xml\">persist.service.adb.enable=1\n</code></pre>\n<p>　　修改未知源</p>\n<p>　　1，反编译SettingsProvider.apk</p>\n<p>　　2，修改res&#x2F;values&#x2F;bools.xml&#x2F;\t修改false为true</p>\n<pre><code class=\"xml\">&lt;bool name=&quot;def_install_non_market_apps&quot;&gt;false&lt;/bool&gt;\n</code></pre>\n<span id=\"more\"></span>\n\n<p>　　关闭重力感应</p>\n<p>　　1，反编译SettingsProvider.apk</p>\n<p>　　2，修改res&#x2F;values&#x2F;bools.xml\t修改true为false</p>\n<pre><code class=\"xml\">&lt;bool name=&quot;def_accelerometer_rotation&quot;&gt;true &lt;/bool&gt;\n</code></pre>\n<p>　　关闭GPS</p>\n<p>　　1，反编译SettingsProvider.apk</p>\n<p>　　2，修改res&#x2F;values&#x2F;strings.xml&#x2F;\t修改gps为null，null就是啥都没有的意思</p>\n<pre><code class=\"xml\">&lt;string name=&quot;def_location_providers_allowed&quot;&gt;gps&lt;/string&gt;\n</code></pre>\n","site":{"data":{}},"excerpt":"<p>　　默认开启usb调试\tsystem&#x2F;build.prop中添加或修改</p>\n<pre><code class=\"xml\">persist.service.adb.enable=1\n</code></pre>\n<p>　　修改未知源</p>\n<p>　　1，反编译SettingsProvider.apk</p>\n<p>　　2，修改res&#x2F;values&#x2F;bools.xml&#x2F;\t修改false为true</p>\n<pre><code class=\"xml\">&lt;bool name=&quot;def_install_non_market_apps&quot;&gt;false&lt;/bool&gt;\n</code></pre>","more":"<p>　　关闭重力感应</p>\n<p>　　1，反编译SettingsProvider.apk</p>\n<p>　　2，修改res&#x2F;values&#x2F;bools.xml\t修改true为false</p>\n<pre><code class=\"xml\">&lt;bool name=&quot;def_accelerometer_rotation&quot;&gt;true &lt;/bool&gt;\n</code></pre>\n<p>　　关闭GPS</p>\n<p>　　1，反编译SettingsProvider.apk</p>\n<p>　　2，修改res&#x2F;values&#x2F;strings.xml&#x2F;\t修改gps为null，null就是啥都没有的意思</p>\n<pre><code class=\"xml\">&lt;string name=&quot;def_location_providers_allowed&quot;&gt;gps&lt;/string&gt;\n</code></pre>"}],"PostAsset":[],"PostCategory":[{"post_id":"cl22v8f4g0001foo3aw96hart","category_id":"cl22v8f4o0004foo39maehhe2","_id":"cl22v8f4w000dfoo3fd4h5xwa"},{"post_id":"cl22v8f4m0003foo3e8wy3309","category_id":"cl22v8f4u000afoo36pjpgscl","_id":"cl22v8f51000ifoo3buq97nyx"},{"post_id":"cl22v8f4w000cfoo33y9208sh","category_id":"cl22v8f4o0004foo39maehhe2","_id":"cl22v8f53000kfoo35fns030v"},{"post_id":"cl22v8f4q0006foo368er5usx","category_id":"cl22v8f4u000afoo36pjpgscl","_id":"cl22v8f54000nfoo3cek10j82"},{"post_id":"cl22v8f4s0008foo3dzb85axo","category_id":"cl22v8f4u000afoo36pjpgscl","_id":"cl22v8f56000qfoo31k89bg1s"},{"post_id":"cl22v8f53000lfoo375g24d1f","category_id":"cl22v8f4u000afoo36pjpgscl","_id":"cl22v8f57000tfoo3hxmd1v9s"},{"post_id":"cl22v8f54000ofoo3hx5s8z0m","category_id":"cl22v8f54000mfoo3gs9j2jjf","_id":"cl22v8f58000vfoo3dpkphysh"},{"post_id":"cl22v8f4t0009foo360i3725v","category_id":"cl22v8f54000mfoo3gs9j2jjf","_id":"cl22v8f5a000yfoo3duiyev7y"},{"post_id":"cl22v8f56000pfoo39toofyx2","category_id":"cl22v8f54000mfoo3gs9j2jjf","_id":"cl22v8f5a0010foo311zz6tba"},{"post_id":"cl22v8f4v000bfoo376xu44mj","category_id":"cl22v8f54000mfoo3gs9j2jjf","_id":"cl22v8f5b0013foo31q73h70t"},{"post_id":"cl22v8f59000xfoo37k304n2h","category_id":"cl22v8f4u000afoo36pjpgscl","_id":"cl22v8f5c0014foo39p1jgxzx"},{"post_id":"cl22v8f4y000ffoo37wnu2v4h","category_id":"cl22v8f54000mfoo3gs9j2jjf","_id":"cl22v8f5d0016foo36wq4dyf5"},{"post_id":"cl22v8f5a000zfoo3cm57gv4z","category_id":"cl22v8f4u000afoo36pjpgscl","_id":"cl22v8f5d0017foo3dgn6gc12"},{"post_id":"cl22v8f5b0012foo380ft2xu2","category_id":"cl22v8f4u000afoo36pjpgscl","_id":"cl22v8f5d0019foo3bwuc4usx"},{"post_id":"cl22v8f4z000gfoo3dutd47ve","category_id":"cl22v8f54000mfoo3gs9j2jjf","_id":"cl22v8f5d001afoo3h2mc0itv"},{"post_id":"cl22v8f51000jfoo35l6j7tpe","category_id":"cl22v8f5c0015foo3at4tc1w6","_id":"cl22v8f5e001cfoo38eal1ijy"},{"post_id":"cl22v8f57000sfoo3fucb7tz7","category_id":"cl22v8f5c0015foo3at4tc1w6","_id":"cl22v8f5e001dfoo3d033571r"},{"post_id":"cl22v8f58000ufoo38nl6h6w6","category_id":"cl22v8f5c0015foo3at4tc1w6","_id":"cl22v8f5e001efoo3c4e0c1x5"}],"PostTag":[],"Tag":[]}}